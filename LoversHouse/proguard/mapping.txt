android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.b$a:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.c:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.d:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$a:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.f:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.g:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.f$a:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.f$b:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.h:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.i:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.i$a:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.j:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> c
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> d
    void makeInactive(android.support.v4.app.Fragment) -> e
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> b
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> f
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> g
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.k:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.l:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.m:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.n:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.o:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.p:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$a:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.q:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.LoaderManager -> android.support.v4.app.r:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.r$a:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.s:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.s$a:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.t:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.u:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.u$a:
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.u$b:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.u$c:
    java.lang.CharSequence mBigText -> a
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> b
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.u$d:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> c
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> a
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> a
    void setFlag(int,boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> a
    android.app.Notification build() -> a
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.u$e:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.u$f:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.u$g:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.u$h:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.u$i:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.u$j:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.u$k:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> d
    java.lang.CharSequence mBigContentTitle -> e
    java.lang.CharSequence mSummaryText -> f
    boolean mSummaryTextSet -> g
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.v:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.w:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.x:
    android.app.Notification$Builder b -> a
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.app.Notification build() -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.y:
android.support.v4.content.Loader -> android.support.v4.content.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.a$a:
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.b:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.ArrayList mPendingBroadcasts -> c
    java.lang.Object mLock -> d
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.b$a:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.b$b:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.util.concurrent.ThreadFactory sThreadFactory -> b
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> c
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> a
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> d
    java.util.concurrent.Executor sDefaultExecutor -> e
    java.util.concurrent.FutureTask mFuture -> f
    android.support.v4.content.ModernAsyncTask$Status mStatus -> g
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> a
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> a
    boolean isCancelled() -> b
    void finish(java.lang.Object) -> c
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.c:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$a:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$b:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.os.ParcelableCompat -> android.support.v4.a.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.a.a$a:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.a.b:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.a.c:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.a.d:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.b.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.b.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.b.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.a$a:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.b:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.a$b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.a$c:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.a$d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.d:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.e:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.d$a:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.f:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.g:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.f$a:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int LONGPRESS_TIMEOUT -> a
    int TAP_TIMEOUT -> b
    int DOUBLE_TAP_TIMEOUT -> c
    android.os.Handler mHandler -> d
    android.view.GestureDetector$OnGestureListener mListener -> e
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> f
    boolean mStillDown -> g
    boolean mDeferConfirmSingleTap -> h
    boolean mInLongPress -> i
    android.view.MotionEvent mCurrentDownEvent -> j
    void dispatchLongPress() -> a
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> a
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> b
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> c
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> d
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> e
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> a
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GravityCompat -> android.support.v4.view.h:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.h$a:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.h$b:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.h$c:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.i:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.j:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.j$a:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.j$b:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.j$c:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.j$d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.k:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.l:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.m:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.m$a:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.m$b:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.m$c:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.n:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.o:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void notifyDataSetChanged() -> c
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> b
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.p:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.p$a:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.p$b:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.p$c:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.q:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.r:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r$a:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.r$b:
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.r$c:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.r$d:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.r$e:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.r$f:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.r$g:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.r$h:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    boolean isOpaque(android.view.View) -> f
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.s:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.t:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.u:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.v:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.w:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.x:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.y:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.y$a:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.y$b:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.y$c:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.z:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.aa:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ab:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ac:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$a:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$b:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$c:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$d:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$e:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$f:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$g:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$h:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ad:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$i:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    int getActions() -> b
    void addAction(int) -> a
    void getBoundsInParent(android.graphics.Rect) -> a
    void getBoundsInScreen(android.graphics.Rect) -> b
    boolean isCheckable() -> c
    boolean isChecked() -> d
    boolean isFocusable() -> e
    boolean isFocused() -> f
    boolean isSelected() -> g
    boolean isClickable() -> h
    boolean isLongClickable() -> i
    boolean isEnabled() -> j
    boolean isPassword() -> k
    boolean isScrollable() -> l
    void setScrollable(boolean) -> a
    java.lang.CharSequence getPackageName() -> m
    java.lang.CharSequence getClassName() -> n
    void setClassName(java.lang.CharSequence) -> a
    java.lang.CharSequence getText() -> o
    java.lang.CharSequence getContentDescription() -> p
    java.lang.String getViewIdResourceName() -> q
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.a$a:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.a$b:
    int getActions(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isSelected(java.lang.Object) -> o
    boolean isClickable(java.lang.Object) -> h
    boolean isLongClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> i
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> e
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.a$c:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.a$d:
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.a$e:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.b:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.c:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.d:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.d$a:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.d$b:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.e:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.d$c:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.f:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.g:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.f$a:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.h:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.h$a:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.h$b:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.h$c:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.h$d:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.h$e:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.i:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewGravity(android.view.View) -> e
    boolean checkDrawerViewGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.a:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$c:
    int mGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.b:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.b$a:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.b$b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.b$c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.d:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.d$a:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.d$b:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.d$c:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.d$d:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.e:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$a:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$b:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$c:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.f:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$d:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$e:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$f:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$g:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.g:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.h:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.g$a:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.amap.api.location.AMapLocation -> com.amap.api.location.AMapLocation:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getDistrict() -> getDistrict
    void setDistrict(java.lang.String) -> setDistrict
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.lang.String getAdCode() -> getAdCode
    void setAdCode(java.lang.String) -> setAdCode
com.amap.api.location.AMapLocationListener -> com.amap.api.location.AMapLocationListener:
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.LocationManagerProxy -> com.amap.api.location.LocationManagerProxy:
    java.lang.String GPS_PROVIDER -> GPS_PROVIDER
    java.lang.String NETWORK_PROVIDER -> NETWORK_PROVIDER
    java.lang.String KEY_LOCATION_CHANGED -> KEY_LOCATION_CHANGED
    java.lang.String KEY_PROVIDER_ENABLED -> KEY_PROVIDER_ENABLED
    java.lang.String KEY_PROXIMITY_ENTERING -> KEY_PROXIMITY_ENTERING
    java.lang.String KEY_STATUS_CHANGED -> KEY_STATUS_CHANGED
    android.location.LocationManager a -> a
    com.amap.api.location.LocationManagerProxy b -> b
    com.amap.api.location.a c -> c
    android.content.Context d -> d
    com.amap.api.location.e e -> e
    com.amap.api.location.LocationManagerProxy$a f -> f
    java.util.ArrayList g -> g
    java.util.Hashtable h -> h
    java.lang.String i -> i
    com.amap.api.location.core.b j -> j
    java.lang.String k -> k
    java.util.List l -> l
    com.amap.api.location.LocationManagerProxy getInstance(android.app.Activity) -> getInstance
    com.amap.api.location.LocationManagerProxy getInstance(android.content.Context) -> getInstance
    void a(android.content.Context) -> a
    void addProximityAlert(double,double,float,long,android.app.PendingIntent) -> addProximityAlert
    void removeProximityAlert(android.app.PendingIntent) -> removeProximityAlert
    com.amap.api.location.AMapLocation getLastKnownLocation(java.lang.String) -> getLastKnownLocation
    void setGpsEnable(boolean) -> setGpsEnable
    void requestLocationUpdates(java.lang.String,long,float,com.amap.api.location.AMapLocationListener) -> requestLocationUpdates
    void removeUpdates(com.amap.api.location.AMapLocationListener) -> removeUpdates
    void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent) -> requestLocationUpdates
    void removeUpdates(android.app.PendingIntent) -> removeUpdates
    java.util.List getAllProviders() -> getAllProviders
    java.util.List getProviders(boolean) -> getProviders
    java.util.List getProviders(android.location.Criteria,boolean) -> getProviders
    java.lang.String getBestProvider(android.location.Criteria,boolean) -> getBestProvider
    boolean isProviderEnabled(java.lang.String) -> isProviderEnabled
    com.amap.api.location.LocationProviderProxy getProvider(java.lang.String) -> getProvider
    android.location.GpsStatus getGpsStatus(android.location.GpsStatus) -> getGpsStatus
    void removeGpsStatusListener(android.location.GpsStatus$Listener) -> removeGpsStatusListener
    boolean addGpsStatusListener(android.location.GpsStatus$Listener) -> addGpsStatusListener
    void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int) -> addTestProvider
    void clearTestProviderEnabled(java.lang.String) -> clearTestProviderEnabled
    void clearTestProviderLocation(java.lang.String) -> clearTestProviderLocation
    void clearTestProviderStatus(java.lang.String) -> clearTestProviderStatus
    void destory() -> destory
    java.util.ArrayList a(com.amap.api.location.LocationManagerProxy) -> a
    android.content.Context b(com.amap.api.location.LocationManagerProxy) -> b
com.amap.api.location.LocationManagerProxy$a -> com.amap.api.location.LocationManagerProxy$a:
    com.amap.api.location.LocationManagerProxy a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.LocationProviderProxy -> com.amap.api.location.LocationProviderProxy:
    int AVAILABLE -> AVAILABLE
    int OUT_OF_SERVICE -> OUT_OF_SERVICE
    int TEMPORARILY_UNAVAILABLE -> TEMPORARILY_UNAVAILABLE
    java.lang.String AMapNetwork -> AMapNetwork
    android.location.LocationManager a -> a
    java.lang.String b -> b
    com.amap.api.location.LocationProviderProxy a(android.location.LocationManager,java.lang.String) -> a
    android.location.LocationProvider a() -> a
    int getAccuracy() -> getAccuracy
    java.lang.String getName() -> getName
    int getPowerRequirement() -> getPowerRequirement
    boolean hasMonetaryCost() -> hasMonetaryCost
    boolean meetsCriteria(android.location.Criteria) -> meetsCriteria
    boolean requiresCell() -> requiresCell
    boolean requiresNetwork() -> requiresNetwork
    boolean requiresSatellite() -> requiresSatellite
    boolean supportsAltitude() -> supportsAltitude
    boolean supportsBearing() -> supportsBearing
    boolean supportsSpeed() -> supportsSpeed
com.amap.api.location.a -> com.amap.api.location.a:
    android.content.Context f -> f
    java.util.Vector g -> g
    com.amap.api.location.a$a h -> h
    int a -> a
    com.amap.api.location.c i -> i
    com.amap.api.location.b j -> j
    com.amap.api.location.a k -> k
    com.amap.api.location.AMapLocation l -> l
    java.lang.Thread m -> m
    boolean b -> b
    long c -> c
    boolean d -> d
    boolean e -> e
    void a(double,double,float,long,android.app.PendingIntent) -> a
    void a(android.app.PendingIntent) -> a
    com.amap.api.location.a a(android.content.Context,android.location.LocationManager) -> a
    com.amap.api.location.AMapLocation a() -> a
    void a(long,float,com.amap.api.location.AMapLocationListener,java.lang.String) -> a
    void a(com.amap.api.location.AMapLocationListener) -> a
    void a(boolean) -> a
    void b() -> b
    int c() -> c
    java.util.Vector d() -> d
    com.amap.api.location.AMapLocation a(com.amap.api.location.a,com.amap.api.location.AMapLocation) -> a
    com.amap.api.location.AMapLocation a(com.amap.api.location.a) -> a
    android.content.Context b(com.amap.api.location.a) -> b
com.amap.api.location.a$a -> com.amap.api.location.a$a:
    com.amap.api.location.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.location.b -> com.amap.api.location.b:
    com.aps.i a -> a
    boolean b -> b
    java.lang.Thread c -> c
    android.content.Context d -> d
    com.amap.api.location.b e -> e
    long f -> f
    com.amap.api.location.a$a g -> g
    com.amap.api.location.b a(android.content.Context,com.amap.api.location.a$a) -> a
    void a() -> a
    void run() -> run
    void a(long) -> a
    com.aps.c c() -> c
    com.aps.c d() -> d
    boolean e() -> e
    com.amap.api.location.AMapLocation a(com.aps.c) -> a
    void a(com.amap.api.location.AMapLocation,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    void a(com.aps.h,android.app.PendingIntent) -> a
    void a(android.app.PendingIntent) -> a
    int b() -> b
com.amap.api.location.c -> com.amap.api.location.c:
    android.location.LocationManager a -> a
    com.amap.api.location.c b -> b
    com.amap.api.location.a$a c -> c
    com.amap.api.location.core.b d -> d
    java.lang.String e -> e
    android.location.LocationListener f -> f
    com.amap.api.location.c a(android.content.Context,android.location.LocationManager,com.amap.api.location.a$a) -> a
    void a(long,float,android.location.LocationListener,java.lang.String) -> a
    void a() -> a
    java.lang.String a(com.amap.api.location.c) -> a
    com.amap.api.location.core.b b(com.amap.api.location.c) -> b
    com.amap.api.location.a$a c(com.amap.api.location.c) -> c
com.amap.api.location.core.CoordinateConvert -> com.amap.api.location.core.CoordinateConvert:
    com.amap.api.location.core.GeoPoint fromGpsToAMap(double,double) -> fromGpsToAMap
    double[] fromSeveralGpsToAMap(java.lang.String) -> fromSeveralGpsToAMap
    double[] fromSeveralGpsToAMap(double[]) -> fromSeveralGpsToAMap
com.amap.api.location.core.GeoPoint -> com.amap.api.location.core.GeoPoint:
    long a -> a
    long b -> b
    double c -> c
    double d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getLongitudeE6() -> getLongitudeE6
    int getLatitudeE6() -> getLatitudeE6
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.location.core.a -> com.amap.api.location.core.a:
    int a -> a
    java.lang.String b -> b
    int c -> c
    boolean a(android.content.Context) -> a
    java.lang.String a() -> a
    boolean a(java.lang.String) -> a
    byte[] b() -> b
com.amap.api.location.core.b -> com.amap.api.location.core.b:
    com.amap.api.location.core.b b -> b
    java.lang.String c -> c
    android.content.Context d -> d
    android.telephony.TelephonyManager e -> e
    android.net.ConnectivityManager f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String a -> a
    com.amap.api.location.core.b a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String j() -> j
    boolean a(java.lang.String) -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String h() -> h
    java.lang.String i() -> i
com.amap.api.location.core.c -> com.amap.api.location.core.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    boolean a(android.content.Context) -> a
    com.amap.api.location.AMapLocation b(android.content.Context) -> b
    void a(android.content.Context,com.amap.api.location.AMapLocation) -> a
com.amap.api.location.core.d -> com.amap.api.location.core.d:
    byte[] a -> a
    byte[] a(byte[],byte[]) -> a
    byte[] a(byte[],java.security.Key) -> a
    java.lang.String a() -> a
    java.security.PublicKey a(android.content.Context) -> a
com.amap.api.location.core.e -> com.amap.api.location.core.e:
    com.amap.api.location.core.GeoPoint a(android.os.Parcel) -> a
    com.amap.api.location.core.GeoPoint[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.location.d -> com.amap.api.location.d:
    com.amap.api.location.c a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.amap.api.location.e -> com.amap.api.location.e:
    com.amap.api.location.LocationManagerProxy a -> a
    com.amap.api.location.AMapLocationListener b -> b
    boolean a(com.amap.api.location.AMapLocationListener,long,float,java.lang.String) -> a
    void a() -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
com.amap.api.location.f -> com.amap.api.location.f:
    long a -> a
    float b -> b
    com.amap.api.location.AMapLocationListener c -> c
    boolean d -> d
    com.amap.api.location.AMapLocation e -> e
    java.lang.String f -> f
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.amap.api.mapcore.AutoTestConfig -> com.amap.api.mapcore.AutoTestConfig:
    int a -> a
    int ZoomControllerViewId -> ZoomControllerViewId
    int ScaleControlsViewId -> ScaleControlsViewId
    int MyLocationViewId -> MyLocationViewId
    int CompassViewId -> CompassViewId
com.amap.api.mapcore.a -> com.amap.api.mapcore.a:
    com.amap.api.mapcore.b f -> f
    float g -> g
    com.autonavi.amap.mapcore.IPoint a -> a
    float b -> b
    float c -> c
    float d -> d
    com.autonavi.amap.mapcore.IPoint e -> e
    java.lang.String getMapSvrAddress() -> getMapSvrAddress
    void OnMapSurfaceCreate(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapSurfaceCreate
    void OnMapSurfaceRenderer(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int) -> OnMapSurfaceRenderer
    void OnMapSufaceChanged(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int,int) -> OnMapSufaceChanged
    void OnMapProcessEvent(com.autonavi.amap.mapcore.MapCore) -> OnMapProcessEvent
    void a(com.autonavi.amap.mapcore.MapCore) -> a
    void b(com.amap.api.mapcore.i) -> b
    void a(com.amap.api.mapcore.i) -> a
    void OnMapDestory(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapDestory
    void OnMapReferencechanged(com.autonavi.amap.mapcore.MapCore,java.lang.String,java.lang.String) -> OnMapReferencechanged
    android.content.Context getContext() -> getContext
    boolean isMapEngineValid() -> isMapEngineValid
    void OnMapLoaderError(int) -> OnMapLoaderError
    void onSetParameter(com.autonavi.amap.mapcore.MapCore) -> onSetParameter
com.amap.api.mapcore.a$1 -> com.amap.api.mapcore.a$1:
    int[] a -> a
com.amap.api.mapcore.a.a -> com.amap.api.mapcore.a.a:
    android.content.Context a -> a
    boolean b -> b
    android.view.MotionEvent c -> c
    android.view.MotionEvent d -> d
    float e -> e
    float f -> f
    long g -> g
    boolean a(android.view.MotionEvent) -> a
    void a(int,android.view.MotionEvent) -> a
    void b(int,android.view.MotionEvent) -> b
    void b(android.view.MotionEvent) -> b
    int c(android.view.MotionEvent) -> c
    void a() -> a
com.amap.api.mapcore.a.b -> com.amap.api.mapcore.a.b:
    boolean f -> f
    com.amap.api.mapcore.a.b$a g -> g
    android.content.Context a -> a
    java.lang.reflect.Method b -> b
    java.lang.reflect.Method c -> c
    java.lang.reflect.Method d -> d
    java.lang.reflect.Method e -> e
    long h -> h
    boolean i -> i
    boolean a() -> a
    boolean b() -> b
    long c() -> c
    void d() -> d
    boolean a(android.view.MotionEvent) -> a
com.amap.api.mapcore.a.b$a -> com.amap.api.mapcore.a.b$a:
    boolean a(android.view.MotionEvent,float,float,float,float) -> a
    void a(float,float,float,float,float) -> a
com.amap.api.mapcore.a.c -> com.amap.api.mapcore.a.c:
    com.amap.api.mapcore.a.c$a l -> l
    boolean m -> m
    void a(int,android.view.MotionEvent) -> a
    void b(int,android.view.MotionEvent) -> b
    void a() -> a
    float b() -> b
com.amap.api.mapcore.a.c$a -> com.amap.api.mapcore.a.c$a:
    boolean a(com.amap.api.mapcore.a.c) -> a
    boolean b(com.amap.api.mapcore.a.c) -> b
    void c(com.amap.api.mapcore.a.c) -> c
com.amap.api.mapcore.a.d -> com.amap.api.mapcore.a.d:
    float l -> l
    float m -> m
    float n -> n
    float h -> h
    float i -> i
    float j -> j
    float k -> k
    float o -> o
    float p -> p
    void b(android.view.MotionEvent) -> b
    float c() -> c
    float a(android.view.MotionEvent,int) -> a
    float b(android.view.MotionEvent,int) -> b
    boolean d(android.view.MotionEvent) -> d
com.amap.api.mapcore.aa -> com.amap.api.mapcore.aa:
com.amap.api.mapcore.aa$a -> com.amap.api.mapcore.aa$a:
    com.amap.api.mapcore.aa$a a -> a
    com.amap.api.mapcore.aa$a b -> b
    com.amap.api.mapcore.aa$a c -> c
    com.amap.api.mapcore.aa$a[] d -> d
    com.amap.api.mapcore.aa$a[] values() -> values
    com.amap.api.mapcore.aa$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.ab -> com.amap.api.mapcore.ab:
    void a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.ab) -> a
    int f() -> f
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b(boolean) -> b
    void g() -> g
    void h() -> h
    void c(boolean) -> c
com.amap.api.mapcore.ac -> com.amap.api.mapcore.ac:
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void e(boolean) -> e
    void f(boolean) -> f
    void g(boolean) -> g
    void h(boolean) -> h
    void i(boolean) -> i
    void a(int) -> a
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    int i() -> i
com.amap.api.mapcore.ad -> com.amap.api.mapcore.ad:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.widget.ImageView g -> g
    com.amap.api.mapcore.r h -> h
    boolean i -> i
    void a() -> a
    void a(boolean) -> a
com.amap.api.mapcore.ad$1 -> com.amap.api.mapcore.ad$1:
    com.amap.api.mapcore.ad a -> a
    void onClick(android.view.View) -> onClick
com.amap.api.mapcore.ad$2 -> com.amap.api.mapcore.ad$2:
    com.amap.api.mapcore.ad a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.ae -> com.amap.api.mapcore.ae:
    com.amap.api.mapcore.r b -> b
    android.content.Context a -> a
    com.amap.api.maps.AMapOptions c -> c
    void a(android.app.Activity) -> a
    void a(com.amap.api.maps.AMapOptions) -> a
    com.amap.api.mapcore.r a() -> a
    void a(android.app.Activity,com.amap.api.maps.AMapOptions,android.os.Bundle) -> a
    void a(android.os.Bundle) -> a
    android.view.View a(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void b(com.amap.api.maps.AMapOptions) -> b
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void b(android.os.Bundle) -> b
com.amap.api.mapcore.af -> com.amap.api.mapcore.af:
    int a -> a
    boolean b -> b
    boolean a() -> a
    com.amap.api.mapcore.af a(boolean) -> a
com.amap.api.mapcore.ag -> com.amap.api.mapcore.ag:
    com.amap.api.mapcore.b a -> a
    java.util.concurrent.CopyOnWriteArrayList b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    void a(com.amap.api.mapcore.af) -> a
    com.amap.api.mapcore.af a() -> a
    int b() -> b
    void a(com.amap.api.mapcore.i) -> a
    com.amap.api.mapcore.i c() -> c
    int d() -> d
com.amap.api.mapcore.ah -> com.amap.api.mapcore.ah:
    com.amap.api.mapcore.r a -> a
    java.util.concurrent.CopyOnWriteArrayList b -> b
    com.autonavi.amap.mapcore.IPoint c -> c
    com.amap.api.mapcore.v d -> d
    android.os.Handler e -> e
    java.util.concurrent.CopyOnWriteArrayList f -> f
    com.amap.api.mapcore.r a() -> a
    com.amap.api.mapcore.v a(java.lang.String) -> a
    int b() -> b
    void c() -> c
    void a(com.amap.api.mapcore.v) -> a
    boolean b(com.amap.api.mapcore.v) -> b
    void c(com.amap.api.mapcore.v) -> c
    void d(com.amap.api.mapcore.v) -> d
    void e(com.amap.api.mapcore.v) -> e
    boolean f(com.amap.api.mapcore.v) -> f
    void a(java.lang.Integer) -> a
    void a(javax.microedition.khronos.opengles.GL10,boolean) -> a
    void g() -> g
    com.amap.api.mapcore.v d() -> d
    com.amap.api.mapcore.v a(android.view.MotionEvent) -> a
    void e() -> e
    boolean b(android.view.MotionEvent) -> b
    boolean a(android.graphics.Rect,int,int) -> a
    java.util.List f() -> f
    void a(com.amap.api.mapcore.ah) -> a
com.amap.api.mapcore.ah$1 -> com.amap.api.mapcore.ah$1:
    com.amap.api.mapcore.ah a -> a
    void run() -> run
com.amap.api.mapcore.ai -> com.amap.api.mapcore.ai:
    com.amap.api.mapcore.r a -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void a() -> a
    void a(android.view.View,com.amap.api.mapcore.ai$a) -> a
    void b(android.view.View,com.amap.api.mapcore.ai$a) -> b
    void a(android.view.View,int,int,int[]) -> a
    void a(android.view.View,int,int,int,int,int) -> a
com.amap.api.mapcore.ai$a -> com.amap.api.mapcore.ai$a:
    int a -> a
    com.amap.api.maps.model.LatLng b -> b
    int c -> c
    int d -> d
    int e -> e
com.amap.api.mapcore.aj -> com.amap.api.mapcore.aj:
    int c -> c
    float d -> d
    java.nio.FloatBuffer e -> e
    java.lang.String f -> f
    com.amap.api.maps.model.LatLng g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    float j -> j
    float k -> k
    boolean l -> l
    boolean m -> m
    com.amap.api.mapcore.ah n -> n
    java.nio.FloatBuffer o -> o
    java.lang.Object p -> p
    boolean q -> q
    java.util.ArrayList r -> r
    int[] s -> s
    boolean a -> a
    boolean t -> t
    int b -> b
    boolean u -> u
    int v -> v
    int w -> w
    java.lang.String c(java.lang.String) -> c
    void a(float) -> a
    void o() -> o
    void v() -> v
    void b(java.util.ArrayList) -> b
    void b(com.amap.api.maps.model.BitmapDescriptor) -> b
    com.autonavi.amap.mapcore.IPoint w() -> w
    int r() -> r
    int x() -> x
    com.autonavi.amap.mapcore.IPoint e() -> e
    android.graphics.Rect c() -> c
    boolean a() -> a
    void C() -> C
    com.amap.api.maps.model.LatLng d() -> d
    java.lang.String f() -> f
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String h() -> h
    void b(java.lang.String) -> b
    java.lang.String i() -> i
    void a(boolean) -> a
    void a(java.util.ArrayList) -> a
    java.util.ArrayList u() -> u
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    com.amap.api.maps.model.BitmapDescriptor y() -> y
    boolean j() -> j
    void k() -> k
    void l() -> l
    boolean m() -> m
    void b(boolean) -> b
    boolean n() -> n
    void a(float,float) -> a
    float z() -> z
    float A() -> A
    boolean a(com.amap.api.mapcore.v) -> a
    int p() -> p
    boolean B() -> B
    void a(com.autonavi.amap.mapcore.MapProjection,int,int,int,int,com.autonavi.amap.mapcore.FPoint) -> a
    com.autonavi.amap.mapcore.IPoint b(float,float) -> b
    void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.r) -> a
    int a(javax.microedition.khronos.opengles.GL10) -> a
    boolean b() -> b
    void a(int) -> a
    void a(java.lang.Object) -> a
    java.lang.Object q() -> q
    void c(boolean) -> c
    boolean s() -> s
    int g() -> g
    int t() -> t
com.amap.api.mapcore.ak -> com.amap.api.mapcore.ak:
    com.amap.api.mapcore.r a -> a
    com.amap.api.mapcore.v b -> b
    com.amap.api.mapcore.s c -> c
    com.amap.api.maps.model.MyLocationStyle d -> d
    com.amap.api.maps.model.LatLng e -> e
    double f -> f
    void a(com.amap.api.maps.model.MyLocationStyle) -> a
    void a(com.amap.api.maps.model.LatLng,double) -> a
    void b() -> b
    void a() -> a
    void c() -> c
    void d() -> d
    void a(float) -> a
com.amap.api.mapcore.al -> com.amap.api.mapcore.al:
    android.graphics.drawable.Drawable a(android.content.Context,java.lang.String) -> a
    android.graphics.Bitmap a(java.io.InputStream) -> a
    android.graphics.Bitmap b(android.content.Context,java.lang.String) -> b
    void a(byte[],android.graphics.Rect) -> a
    byte[] a(android.graphics.Bitmap) -> a
    void a(android.graphics.Bitmap,byte[]) -> a
    void a(java.io.OutputStream,int) -> a
    void a(byte[],int,int) -> a
    int a(byte[],int) -> a
com.amap.api.mapcore.am -> com.amap.api.mapcore.am:
    com.amap.api.mapcore.r a -> a
    float b -> b
    boolean c -> c
    java.lang.String d -> d
    float e -> e
    int f -> f
    int g -> g
    java.util.List h -> h
    java.nio.FloatBuffer i -> i
    java.nio.FloatBuffer j -> j
    int k -> k
    int l -> l
    com.amap.api.maps.model.LatLngBounds m -> m
    float n -> n
    void b() -> b
    java.lang.String c() -> c
    void a(java.util.List) -> a
    java.util.List j() -> j
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.w) -> a
    void b(java.util.List) -> b
    java.util.List l() -> l
    void g() -> g
    int f() -> f
    boolean a() -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void b(int) -> b
    int k() -> k
    com.autonavi.amap.mapcore.FPoint[] a(com.autonavi.amap.mapcore.FPoint[]) -> a
    void n() -> n
    boolean a(com.amap.api.maps.model.LatLng) -> a
com.amap.api.mapcore.an -> com.amap.api.mapcore.an:
    com.amap.api.mapcore.r h -> h
    float i -> i
    int j -> j
    float k -> k
    boolean l -> l
    java.lang.String m -> m
    java.util.List n -> n
    java.nio.FloatBuffer o -> o
    int p -> p
    boolean q -> q
    boolean r -> r
    java.util.List s -> s
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    boolean t -> t
    com.amap.api.maps.model.LatLngBounds u -> u
    float[] e -> e
    float[] f -> f
    float[] g -> g
    void d(boolean) -> d
    void b(boolean) -> b
    boolean k() -> k
    void c(boolean) -> c
    boolean l() -> l
    void b(java.util.List) -> b
    com.autonavi.amap.mapcore.IPoint a(com.autonavi.amap.mapcore.IPoint,com.autonavi.amap.mapcore.IPoint,com.autonavi.amap.mapcore.IPoint,double,int) -> a
    void a(java.util.List,java.util.List,double) -> a
    void a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng,java.util.List,com.amap.api.maps.model.LatLngBounds$Builder) -> a
    void b() -> b
    java.lang.String c() -> c
    void a(java.util.List) -> a
    java.util.List j() -> j
    java.util.List m() -> m
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.w) -> a
    int f() -> f
    boolean a() -> a
    void g() -> g
    void a(javax.microedition.khronos.opengles.GL10) -> a
    boolean o() -> o
    void n() -> n
com.amap.api.mapcore.ao -> com.amap.api.mapcore.ao:
    com.amap.api.mapcore.r a -> a
    com.amap.api.maps.model.LatLng a(android.graphics.Point) -> a
    android.graphics.Point a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.VisibleRegion a() -> a
    android.graphics.PointF b(com.amap.api.maps.model.LatLng) -> b
    float a(int) -> a
com.amap.api.mapcore.ap -> com.amap.api.mapcore.ap:
    java.lang.String a -> a
    int b -> b
    com.amap.api.mapcore.b c -> c
    android.graphics.Paint d -> d
    android.graphics.Paint e -> e
    android.graphics.Rect f -> f
    void a() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void a(java.lang.String) -> a
    void a(int) -> a
com.amap.api.mapcore.aq -> com.amap.api.mapcore.aq:
    com.amap.api.mapcore.r d -> d
    java.util.concurrent.CopyOnWriteArrayList a -> a
    com.amap.api.mapcore.aq$a b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void a() -> a
    void a(boolean) -> a
    void b() -> b
    void c() -> c
    void b(boolean) -> b
com.amap.api.mapcore.aq$a -> com.amap.api.mapcore.aq$a:
    com.amap.api.mapcore.aq a -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.ar -> com.amap.api.mapcore.ar:
    com.amap.api.mapcore.r b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    int k -> k
    android.os.Handler a -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void e(boolean) -> e
    void f(boolean) -> f
    void g(boolean) -> g
    void h(boolean) -> h
    void i(boolean) -> i
    void a(int) -> a
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    int i() -> i
    boolean a(com.amap.api.mapcore.ar) -> a
    com.amap.api.mapcore.r b(com.amap.api.mapcore.ar) -> b
    boolean c(com.amap.api.mapcore.ar) -> c
    boolean d(com.amap.api.mapcore.ar) -> d
    boolean e(com.amap.api.mapcore.ar) -> e
com.amap.api.mapcore.as -> com.amap.api.mapcore.as:
    com.amap.api.mapcore.ar a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.at -> com.amap.api.mapcore.at:
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.graphics.Paint g -> g
    boolean h -> h
    int i -> i
    com.amap.api.mapcore.b j -> j
    int k -> k
    android.graphics.Rect a -> a
    int b -> b
    void a() -> a
    android.graphics.Bitmap b() -> b
    void a(boolean) -> a
    android.graphics.Point c() -> c
    void a(int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.amap.api.mapcore.au -> com.amap.api.mapcore.au:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.graphics.Bitmap g -> g
    android.graphics.Bitmap h -> h
    android.graphics.Bitmap i -> i
    android.graphics.Bitmap j -> j
    android.graphics.Bitmap k -> k
    android.graphics.Bitmap l -> l
    android.widget.ImageView m -> m
    android.widget.ImageView n -> n
    com.amap.api.mapcore.r o -> o
    void a() -> a
    void a(float) -> a
    com.amap.api.mapcore.r a(com.amap.api.mapcore.au) -> a
    android.graphics.Bitmap b(com.amap.api.mapcore.au) -> b
    android.widget.ImageView c(com.amap.api.mapcore.au) -> c
    android.graphics.Bitmap d(com.amap.api.mapcore.au) -> d
    android.graphics.Bitmap e(com.amap.api.mapcore.au) -> e
    android.widget.ImageView f(com.amap.api.mapcore.au) -> f
    android.graphics.Bitmap g(com.amap.api.mapcore.au) -> g
com.amap.api.mapcore.au$1 -> com.amap.api.mapcore.au$1:
    com.amap.api.mapcore.au a -> a
    void onClick(android.view.View) -> onClick
com.amap.api.mapcore.au$2 -> com.amap.api.mapcore.au$2:
    com.amap.api.mapcore.au a -> a
    void onClick(android.view.View) -> onClick
com.amap.api.mapcore.au$3 -> com.amap.api.mapcore.au$3:
    com.amap.api.mapcore.au a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.au$4 -> com.amap.api.mapcore.au$4:
    com.amap.api.mapcore.au a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.b -> com.amap.api.mapcore.b:
    int h -> h
    int i -> i
    android.graphics.Bitmap j -> j
    android.graphics.Bitmap k -> k
    boolean l -> l
    java.util.concurrent.CopyOnWriteArrayList m -> m
    java.util.concurrent.CopyOnWriteArrayList n -> n
    int o -> o
    com.autonavi.amap.mapcore.MapCore p -> p
    android.content.Context q -> q
    com.amap.api.mapcore.a r -> r
    com.autonavi.amap.mapcore.MapProjection s -> s
    android.view.GestureDetector t -> t
    android.view.ScaleGestureDetector u -> u
    com.amap.api.mapcore.a.c v -> v
    com.amap.api.mapcore.ag a -> a
    android.view.SurfaceHolder w -> w
    com.amap.api.mapcore.ai x -> x
    com.amap.api.mapcore.ah y -> y
    com.amap.api.mapcore.at z -> z
    com.amap.api.mapcore.au b -> b
    com.amap.api.mapcore.ad A -> A
    com.amap.api.mapcore.k B -> B
    com.amap.api.mapcore.ap C -> C
    com.amap.api.mapcore.aq c -> c
    com.amap.api.maps.AMap$OnMyLocationChangeListener D -> D
    com.amap.api.maps.AMap$OnMarkerClickListener E -> E
    com.amap.api.maps.AMap$OnMarkerDragListener F -> F
    com.amap.api.maps.AMap$OnMapLoadedListener G -> G
    com.amap.api.maps.AMap$OnCameraChangeListener H -> H
    com.amap.api.maps.AMap$OnMapClickListener I -> I
    com.amap.api.maps.AMap$OnMapLongClickListener J -> J
    com.amap.api.maps.AMap$OnInfoWindowClickListener K -> K
    com.amap.api.maps.AMap$InfoWindowAdapter L -> L
    android.view.View M -> M
    com.amap.api.maps.model.Marker N -> N
    com.amap.api.mapcore.z O -> O
    com.amap.api.mapcore.ac P -> P
    com.amap.api.maps.LocationSource Q -> Q
    android.graphics.Rect R -> R
    boolean S -> S
    boolean T -> T
    boolean d -> d
    com.amap.api.mapcore.f U -> U
    com.amap.api.mapcore.a.b V -> V
    com.amap.api.mapcore.ak W -> W
    com.amap.api.mapcore.g X -> X
    com.amap.api.mapcore.h Y -> Y
    int Z -> Z
    int aa -> aa
    com.amap.api.maps.AMap$CancelableCallback ab -> ab
    boolean ac -> ac
    boolean ad -> ad
    boolean ae -> ae
    android.graphics.drawable.Drawable af -> af
    android.location.Location ag -> ag
    java.lang.Boolean ah -> ah
    int[] ai -> ai
    boolean aj -> aj
    com.amap.api.maps.AMap$onMapPrintScreenListener ak -> ak
    com.amap.api.maps.AMap$OnMapScreenShotListener al -> al
    java.util.Timer am -> am
    double an -> an
    com.amap.api.maps.CustomRenderer ao -> ao
    com.amap.api.mapcore.p e -> e
    com.amap.api.mapcore.m ap -> ap
    boolean aq -> aq
    boolean ar -> ar
    android.os.Handler as -> as
    java.lang.Runnable at -> at
    java.lang.Runnable f -> f
    boolean au -> au
    boolean av -> av
    boolean aw -> aw
    boolean ax -> ax
    boolean ay -> ay
    com.amap.api.maps.model.Marker az -> az
    boolean aA -> aA
    boolean aB -> aB
    boolean aC -> aC
    int aD -> aD
    boolean aE -> aE
    java.lang.Thread aF -> aF
    com.amap.api.maps.model.LatLngBounds aG -> aG
    android.os.Handler g -> g
    boolean aH -> aH
    com.amap.api.maps.CustomRenderer a() -> a
    void a(com.amap.api.maps.CustomRenderer) -> a
    com.autonavi.amap.mapcore.MapCore b() -> b
    int c() -> c
    com.autonavi.amap.mapcore.MapProjection d() -> d
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void a(com.amap.api.mapcore.o) -> a
    void a(com.amap.api.maps.AMap$OnMyLocationChangeListener) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void a(com.amap.api.maps.model.MyLocationStyle) -> a
    void a(float) -> a
    com.amap.api.mapcore.ak e() -> e
    void a(android.location.Location) -> a
    void a(boolean) -> a
    void f() -> f
    void b(boolean) -> b
    void c(boolean) -> c
    void g() -> g
    void d(boolean) -> d
    void h() -> h
    void i() -> i
    boolean a(java.lang.String) -> a
    void e(boolean) -> e
    void L() -> L
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    int j() -> j
    int k() -> k
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void a(int,int,int,int) -> a
    void M() -> M
    void N() -> N
    void O() -> O
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    int l() -> l
    void m() -> m
    void setZOrderOnTop(boolean) -> setZOrderOnTop
    com.amap.api.maps.model.CameraPosition n() -> n
    float o() -> o
    float p() -> p
    void a(com.amap.api.mapcore.i) -> a
    void b(com.amap.api.mapcore.i) -> b
    void a(com.amap.api.mapcore.i,com.amap.api.maps.AMap$CancelableCallback) -> a
    void a(com.amap.api.mapcore.i,long,com.amap.api.maps.AMap$CancelableCallback) -> a
    void q() -> q
    com.amap.api.mapcore.y a(com.amap.api.maps.model.PolylineOptions) -> a
    com.amap.api.mapcore.x a(com.amap.api.maps.model.PolygonOptions) -> a
    com.amap.api.mapcore.s a(com.amap.api.maps.model.CircleOptions) -> a
    com.amap.api.mapcore.t a(com.amap.api.maps.model.GroundOverlayOptions) -> a
    com.amap.api.maps.model.Marker a(com.amap.api.maps.model.MarkerOptions) -> a
    com.amap.api.mapcore.aj b(com.amap.api.maps.model.MarkerOptions) -> b
    void r() -> r
    boolean b(java.lang.String) -> b
    int s() -> s
    void a(int) -> a
    boolean t() -> t
    void f(boolean) -> f
    boolean u() -> u
    void g(boolean) -> g
    android.location.Location v() -> v
    void a(com.amap.api.maps.LocationSource) -> a
    com.amap.api.mapcore.ac w() -> w
    com.amap.api.mapcore.z x() -> x
    void a(com.amap.api.maps.AMap$OnCameraChangeListener) -> a
    void a(com.amap.api.maps.model.CameraPosition) -> a
    com.amap.api.maps.AMap$OnCameraChangeListener y() -> y
    void a(com.amap.api.maps.AMap$OnMapClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLongClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerDragListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLoadedListener) -> a
    void a(com.amap.api.maps.AMap$OnInfoWindowClickListener) -> a
    void a(com.amap.api.maps.AMap$InfoWindowAdapter) -> a
    android.view.View z() -> z
    float b(float) -> b
    float b(int) -> b
    void a(int,int,com.autonavi.amap.mapcore.DPoint) -> a
    void a(int,int,com.autonavi.amap.mapcore.IPoint) -> a
    void a(double,double,com.autonavi.amap.mapcore.FPoint) -> a
    void a(double,double,com.autonavi.amap.mapcore.IPoint) -> a
    void a(int,int,com.autonavi.amap.mapcore.FPoint) -> a
    void b(int,int,com.autonavi.amap.mapcore.FPoint) -> b
    void b(int,int,com.autonavi.amap.mapcore.DPoint) -> b
    void b(double,double,com.autonavi.amap.mapcore.IPoint) -> b
    com.amap.api.maps.model.LatLng P() -> P
    com.amap.api.maps.model.CameraPosition Q() -> Q
    void R() -> R
    void a(android.view.MotionEvent) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void a(com.amap.api.mapcore.v) -> a
    boolean b(com.amap.api.mapcore.v) -> b
    void A() -> A
    float B() -> B
    void C() -> C
    com.amap.api.maps.model.LatLngBounds D() -> D
    void E() -> E
    android.graphics.Point F() -> F
    android.graphics.Bitmap a(int,int,int,int,javax.microedition.khronos.opengles.GL10) -> a
    void a(com.amap.api.maps.AMap$onMapPrintScreenListener) -> a
    void a(com.amap.api.maps.AMap$OnMapScreenShotListener) -> a
    void c(int) -> c
    float G() -> G
    void h(boolean) -> h
    void a(boolean,com.amap.api.maps.model.CameraPosition) -> a
    void d(int) -> d
    int H() -> H
    java.util.List I() -> I
    void J() -> J
    void a(com.amap.api.mapcore.b) -> a
    boolean b(com.amap.api.mapcore.b) -> b
    boolean a(com.amap.api.mapcore.b,boolean) -> a
    boolean b(com.amap.api.mapcore.b,boolean) -> b
    boolean c(com.amap.api.mapcore.b) -> c
    boolean d(com.amap.api.mapcore.b) -> d
    boolean c(com.amap.api.mapcore.b,boolean) -> c
    double K() -> K
    com.amap.api.mapcore.ac e(com.amap.api.mapcore.b) -> e
    int a(com.amap.api.mapcore.b,int) -> a
    com.autonavi.amap.mapcore.MapProjection f(com.amap.api.mapcore.b) -> f
    void g(com.amap.api.mapcore.b) -> g
    boolean d(com.amap.api.mapcore.b,boolean) -> d
    boolean h(com.amap.api.mapcore.b) -> h
    com.amap.api.mapcore.h i(com.amap.api.mapcore.b) -> i
    com.amap.api.maps.AMap$CancelableCallback j(com.amap.api.mapcore.b) -> j
    com.amap.api.maps.AMap$CancelableCallback a(com.amap.api.mapcore.b,com.amap.api.maps.AMap$CancelableCallback) -> a
    boolean e(com.amap.api.mapcore.b,boolean) -> e
    com.amap.api.mapcore.a.b k(com.amap.api.mapcore.b) -> k
    int b(com.amap.api.mapcore.b,int) -> b
    int c(com.amap.api.mapcore.b,int) -> c
    int l(com.amap.api.mapcore.b) -> l
    int m(com.amap.api.mapcore.b) -> m
    com.amap.api.maps.AMap$OnMapLongClickListener n(com.amap.api.mapcore.b) -> n
    boolean f(com.amap.api.mapcore.b,boolean) -> f
    com.amap.api.mapcore.ah o(com.amap.api.mapcore.b) -> o
    com.amap.api.maps.AMap$OnMarkerDragListener p(com.amap.api.mapcore.b) -> p
    com.amap.api.maps.model.Marker a(com.amap.api.mapcore.b,com.amap.api.maps.model.Marker) -> a
    com.amap.api.maps.model.Marker q(com.amap.api.mapcore.b) -> q
    boolean g(com.amap.api.mapcore.b,boolean) -> g
    int r(com.amap.api.mapcore.b) -> r
    boolean s(com.amap.api.mapcore.b) -> s
    android.view.View t(com.amap.api.mapcore.b) -> t
    com.amap.api.maps.AMap$OnInfoWindowClickListener u(com.amap.api.mapcore.b) -> u
    com.amap.api.maps.AMap$OnMarkerClickListener v(com.amap.api.mapcore.b) -> v
    com.amap.api.maps.AMap$OnMapClickListener w(com.amap.api.mapcore.b) -> w
    boolean x(com.amap.api.mapcore.b) -> x
    boolean h(com.amap.api.mapcore.b,boolean) -> h
    boolean i(com.amap.api.mapcore.b,boolean) -> i
    android.content.Context y(com.amap.api.mapcore.b) -> y
    java.lang.Boolean z(com.amap.api.mapcore.b) -> z
    com.amap.api.mapcore.g A(com.amap.api.mapcore.b) -> A
    com.amap.api.maps.AMap$OnCameraChangeListener B(com.amap.api.mapcore.b) -> B
    com.amap.api.maps.AMap$OnMapLoadedListener C(com.amap.api.mapcore.b) -> C
    com.amap.api.mapcore.k D(com.amap.api.mapcore.b) -> D
    com.amap.api.mapcore.at E(com.amap.api.mapcore.b) -> E
    com.amap.api.maps.model.Marker F(com.amap.api.mapcore.b) -> F
    com.amap.api.maps.AMap$onMapPrintScreenListener G(com.amap.api.mapcore.b) -> G
    com.amap.api.maps.AMap$OnMapScreenShotListener H(com.amap.api.mapcore.b) -> H
    com.amap.api.maps.AMap$onMapPrintScreenListener a(com.amap.api.mapcore.b,com.amap.api.maps.AMap$onMapPrintScreenListener) -> a
    com.amap.api.maps.AMap$OnMapScreenShotListener a(com.amap.api.mapcore.b,com.amap.api.maps.AMap$OnMapScreenShotListener) -> a
    boolean I(com.amap.api.mapcore.b) -> I
    boolean j(com.amap.api.mapcore.b,boolean) -> j
    boolean J(com.amap.api.mapcore.b) -> J
    boolean k(com.amap.api.mapcore.b,boolean) -> k
    com.amap.api.maps.model.LatLngBounds a(com.amap.api.mapcore.b,com.amap.api.maps.model.LatLngBounds) -> a
com.amap.api.mapcore.b$1 -> com.amap.api.mapcore.b$1:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.b$2 -> com.amap.api.mapcore.b$2:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.b$3 -> com.amap.api.mapcore.b$3:
    com.amap.api.maps.model.LatLngBounds a -> a
    int b -> b
    int c -> c
    int d -> d
    long e -> e
    com.amap.api.maps.AMap$CancelableCallback f -> f
    com.amap.api.mapcore.b g -> g
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.amap.api.mapcore.b$a -> com.amap.api.mapcore.b$a:
    float f -> f
    float g -> g
    float h -> h
    float i -> i
    float j -> j
    java.lang.Float a -> a
    java.lang.Float b -> b
    float c -> c
    com.amap.api.mapcore.i d -> d
    com.amap.api.mapcore.b e -> e
    void a(float,float,float,float,float) -> a
    boolean a(android.view.MotionEvent,float,float,float,float) -> a
com.amap.api.mapcore.b$b -> com.amap.api.mapcore.b$b:
    com.amap.api.mapcore.b a -> a
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.amap.api.mapcore.b$c -> com.amap.api.mapcore.b$c:
    com.autonavi.amap.mapcore.FPoint a -> a
    com.autonavi.amap.mapcore.IPoint b -> b
    com.amap.api.mapcore.i c -> c
    com.amap.api.mapcore.b d -> d
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.amap.api.mapcore.b$d -> com.amap.api.mapcore.b$d:
    float a -> a
    float b -> b
    com.amap.api.mapcore.i c -> c
    com.amap.api.mapcore.b d -> d
    boolean a(com.amap.api.mapcore.a.c) -> a
    boolean b(com.amap.api.mapcore.a.c) -> b
    void c(com.amap.api.mapcore.a.c) -> c
com.amap.api.mapcore.b$e -> com.amap.api.mapcore.b$e:
    float b -> b
    com.amap.api.mapcore.b a -> a
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
com.amap.api.mapcore.b$f -> com.amap.api.mapcore.b$f:
    com.amap.api.mapcore.b a -> a
    com.amap.api.mapcore.b b -> b
    void run() -> run
com.amap.api.mapcore.b.a -> com.amap.api.mapcore.b.a:
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object,java.lang.Object) -> a
    void a(boolean,java.lang.Object) -> a
    void b(boolean,java.lang.Object) -> b
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
com.amap.api.mapcore.b.b -> com.amap.api.mapcore.b.b:
    char[] a -> a
    byte[] b -> b
    java.lang.String a(byte[]) -> a
com.amap.api.mapcore.b.c -> com.amap.api.mapcore.b.c:
    com.amap.api.mapcore.b.c c -> c
    java.lang.String d -> d
    android.content.Context e -> e
    android.telephony.TelephonyManager f -> f
    android.net.ConnectivityManager g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String a -> a
    int b -> b
    com.amap.api.mapcore.b.c a(android.content.Context) -> a
    java.lang.String h() -> h
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String b(android.content.Context) -> b
    byte[] a(java.io.InputStream) -> a
    java.net.Proxy c(android.content.Context) -> c
    java.net.Proxy a(android.content.Context,java.net.URI) -> a
    java.net.Proxy d(android.content.Context) -> d
    java.lang.String f() -> f
    java.lang.String g() -> g
com.amap.api.mapcore.b.d -> com.amap.api.mapcore.b.d:
    byte[] a -> a
    byte[] a(byte[],byte[]) -> a
    byte[] a(byte[],java.security.Key) -> a
    java.lang.String a() -> a
    java.security.PublicKey a(android.content.Context) -> a
    byte[] a(byte[]) -> a
    java.lang.String b(byte[]) -> b
com.amap.api.mapcore.b.e -> com.amap.api.mapcore.b.e:
    java.net.HttpURLConnection a(java.lang.String,java.net.Proxy) -> a
    java.net.HttpURLConnection a(java.lang.String,byte[],java.net.Proxy) -> a
com.amap.api.mapcore.b.f -> com.amap.api.mapcore.b.f:
    void a(java.lang.String,java.lang.String,int) -> a
com.amap.api.mapcore.b.g -> com.amap.api.mapcore.b.g:
    boolean a(float,float,float,float,float,float,float,float) -> a
    boolean a(com.autonavi.amap.mapcore.FPoint[],int,int,int,int,int[]) -> a
    int a(com.autonavi.amap.mapcore.FPoint[]) -> a
    boolean a(com.autonavi.amap.mapcore.FPoint[],java.util.List) -> a
com.amap.api.mapcore.b.h -> com.amap.api.mapcore.b.h:
    int[] a -> a
    double[] b -> b
    android.graphics.Bitmap a(java.lang.String) -> a
    void a(android.graphics.drawable.Drawable) -> a
    java.lang.String a(java.lang.String,java.lang.Object) -> a
    float a(float) -> a
    float b(float) -> b
    java.nio.FloatBuffer a(float[]) -> a
    java.nio.FloatBuffer a(float[],java.nio.FloatBuffer) -> a
    int a(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap) -> a
    int a(javax.microedition.khronos.opengles.GL10,android.graphics.Bitmap,boolean) -> a
    void a(javax.microedition.khronos.opengles.GL10,int,android.graphics.Bitmap) -> a
    int a(int) -> a
    java.lang.String a(java.lang.String[]) -> a
    int a(java.lang.Object[]) -> a
    byte[] a(byte[]) -> a
    byte[] a(android.content.Context,java.lang.String) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,float) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    int c(float) -> c
    double a(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> a
    java.lang.String b(int) -> b
    boolean c(android.content.Context) -> c
    void a(javax.microedition.khronos.opengles.GL10,int) -> a
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(java.io.File) -> a
    void b(java.lang.String) -> b
    boolean a(com.amap.api.maps.model.LatLng,java.util.List) -> a
    double a(double,double,double,double,double,double) -> a
    boolean b(double,double,double,double,double,double) -> b
    boolean a(double,double,double,double,double,double,double,double) -> a
    float[] a(com.amap.api.mapcore.r,java.util.List) -> a
    com.autonavi.amap.mapcore.FPoint[] a(com.amap.api.mapcore.r) -> a
    java.util.List b(com.amap.api.mapcore.r,java.util.List) -> b
    com.autonavi.amap.mapcore.FPoint a(com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint) -> a
    boolean a(com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint,com.autonavi.amap.mapcore.FPoint) -> a
com.amap.api.mapcore.c -> com.amap.api.mapcore.c:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.d -> com.amap.api.mapcore.d:
    com.amap.api.mapcore.b a -> a
    void run() -> run
com.amap.api.mapcore.e -> com.amap.api.mapcore.e:
    com.amap.api.mapcore.b a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.mapcore.f -> com.amap.api.mapcore.f:
    com.amap.api.mapcore.r b -> b
    android.location.Location a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.amap.api.mapcore.g -> com.amap.api.mapcore.g:
    int a -> a
    java.lang.String b -> b
    int c -> c
    java.net.HttpURLConnection d -> d
    boolean a(android.content.Context) -> a
    java.lang.String a() -> a
    java.io.InputStream a(java.net.HttpURLConnection) -> a
    boolean a(java.io.InputStream) -> a
    byte[] b() -> b
com.amap.api.mapcore.h -> com.amap.api.mapcore.h:
    int a -> a
    int b -> b
    int c -> c
    float d -> d
    float e -> e
    float f -> f
    int g -> g
    int h -> h
    float i -> i
    float j -> j
    float k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    float r -> r
    float s -> s
    float t -> t
    long u -> u
    long v -> v
    float w -> w
    float x -> x
    float y -> y
    float z -> z
    float A -> A
    float B -> B
    boolean C -> C
    android.view.animation.Interpolator D -> D
    boolean E -> E
    float F -> F
    float G -> G
    int H -> H
    float I -> I
    float J -> J
    float[] K -> K
    float[] L -> L
    float M -> M
    float N -> N
    float O -> O
    float P -> P
    float Q -> Q
    void a(android.view.animation.Interpolator) -> a
    float b(float) -> b
    boolean a() -> a
    void a(boolean) -> a
    int b() -> b
    int c() -> c
    float d() -> d
    float e() -> e
    float f() -> f
    float g() -> g
    boolean h() -> h
    void a(int,int,float,float,float,int,int,float,float,float,long) -> a
    void a(int,int,int,int,int,int,int,int) -> a
    double c(float) -> c
    int d(float) -> d
    double e(float) -> e
    float a(float) -> a
    int i() -> i
    int j() -> j
com.amap.api.mapcore.i -> com.amap.api.mapcore.i:
    com.amap.api.mapcore.i$a a -> a
    float b -> b
    float c -> c
    float d -> d
    float e -> e
    float f -> f
    float g -> g
    com.amap.api.maps.model.CameraPosition h -> h
    com.amap.api.maps.model.LatLngBounds i -> i
    int j -> j
    int k -> k
    int l -> l
    android.graphics.Point m -> m
    com.autonavi.amap.mapcore.IPoint n -> n
    boolean o -> o
    com.amap.api.mapcore.i a() -> a
    com.amap.api.mapcore.i b() -> b
    com.amap.api.mapcore.i c() -> c
    com.amap.api.mapcore.i a(float,float) -> a
    com.amap.api.mapcore.i a(float) -> a
    com.amap.api.mapcore.i b(float) -> b
    com.amap.api.mapcore.i a(float,android.graphics.Point) -> a
    com.amap.api.mapcore.i a(com.amap.api.maps.model.CameraPosition) -> a
    com.amap.api.mapcore.i a(com.autonavi.amap.mapcore.IPoint) -> a
    com.amap.api.mapcore.i c(float) -> c
    com.amap.api.mapcore.i d(float) -> d
    com.amap.api.mapcore.i a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.mapcore.i a(com.amap.api.maps.model.LatLng,float) -> a
    com.amap.api.mapcore.i a(com.amap.api.maps.model.LatLng,float,float,float) -> a
    com.amap.api.mapcore.i a(com.autonavi.amap.mapcore.IPoint,float,float,float) -> a
    com.amap.api.mapcore.i a(com.amap.api.maps.model.LatLngBounds,int) -> a
    com.amap.api.mapcore.i a(com.amap.api.maps.model.LatLngBounds,int,int,int) -> a
com.amap.api.mapcore.i$a -> com.amap.api.mapcore.i$a:
    com.amap.api.mapcore.i$a a -> a
    com.amap.api.mapcore.i$a b -> b
    com.amap.api.mapcore.i$a c -> c
    com.amap.api.mapcore.i$a d -> d
    com.amap.api.mapcore.i$a e -> e
    com.amap.api.mapcore.i$a f -> f
    com.amap.api.mapcore.i$a g -> g
    com.amap.api.mapcore.i$a h -> h
    com.amap.api.mapcore.i$a i -> i
    com.amap.api.mapcore.i$a j -> j
    com.amap.api.mapcore.i$a k -> k
    com.amap.api.mapcore.i$a l -> l
    com.amap.api.mapcore.i$a m -> m
    com.amap.api.mapcore.i$a n -> n
    com.amap.api.mapcore.i$a[] o -> o
    com.amap.api.mapcore.i$a[] values() -> values
    com.amap.api.mapcore.i$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.j -> com.amap.api.mapcore.j:
    com.amap.api.maps.model.LatLng a -> a
    double b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    boolean g -> g
    java.lang.String h -> h
    com.amap.api.mapcore.r i -> i
    java.nio.FloatBuffer j -> j
    java.nio.FloatBuffer k -> k
    int l -> l
    int m -> m
    float n -> n
    int o -> o
    int p -> p
    boolean a() -> a
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.w) -> a
    int f() -> f
    void g() -> g
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void h() -> h
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng i() -> i
    void a(double) -> a
    double j() -> j
    void b(float) -> b
    float k() -> k
    void a(int) -> a
    int l() -> l
    void b(int) -> b
    int m() -> m
    float b(double) -> b
    double c(double) -> c
    void n() -> n
    boolean b(com.amap.api.maps.model.LatLng) -> b
com.amap.api.mapcore.k -> com.amap.api.mapcore.k:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.widget.ImageView d -> d
    com.amap.api.mapcore.ag e -> e
    com.amap.api.mapcore.r f -> f
    void a() -> a
    void b() -> b
com.amap.api.mapcore.k$1 -> com.amap.api.mapcore.k$1:
    com.amap.api.mapcore.k a -> a
    void onClick(android.view.View) -> onClick
com.amap.api.mapcore.k$2 -> com.amap.api.mapcore.k$2:
    com.amap.api.mapcore.k a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.amap.api.mapcore.l -> com.amap.api.mapcore.l:
    float a -> a
    float b -> b
    java.lang.String c -> c
    com.amap.api.mapcore.l$a d -> d
com.amap.api.mapcore.l$a -> com.amap.api.mapcore.l$a:
    com.amap.api.mapcore.l$a a -> a
    com.amap.api.mapcore.l$a b -> b
    com.amap.api.mapcore.l$a c -> c
    com.amap.api.mapcore.l$a d -> d
    com.amap.api.mapcore.l$a[] e -> e
    com.amap.api.mapcore.l$a[] values() -> values
    com.amap.api.mapcore.l$a valueOf(java.lang.String) -> valueOf
com.amap.api.mapcore.m -> com.amap.api.mapcore.m:
    java.util.concurrent.CopyOnWriteArrayList b -> b
    com.amap.api.mapcore.m$a a -> a
    boolean a(com.amap.api.mapcore.o) -> a
    void a(javax.microedition.khronos.opengles.GL10) -> a
com.amap.api.mapcore.m$a -> com.amap.api.mapcore.m$a:
    com.amap.api.mapcore.m a -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.n -> com.amap.api.mapcore.n:
    void b(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> b
    void a(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,int) -> a
    void a(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,java.nio.FloatBuffer,int,int) -> a
    void b(javax.microedition.khronos.opengles.GL10,int,int,java.nio.FloatBuffer,float,java.nio.FloatBuffer,int,int) -> b
com.amap.api.mapcore.o -> com.amap.api.mapcore.o:
    com.amap.api.mapcore.r a -> a
    int getZIndex() -> getZIndex
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
com.amap.api.mapcore.p -> com.amap.api.mapcore.p:
    int b -> b
    java.util.concurrent.CopyOnWriteArrayList c -> c
    com.amap.api.mapcore.p$a a -> a
    java.lang.String a(java.lang.String) -> a
    void a() -> a
    void b() -> b
    com.amap.api.mapcore.w c(java.lang.String) -> c
    void a(com.amap.api.mapcore.w) -> a
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void d() -> d
com.amap.api.mapcore.p$a -> com.amap.api.mapcore.p$a:
    com.amap.api.mapcore.p a -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.amap.api.mapcore.q -> com.amap.api.mapcore.q:
    double a -> a
    double b -> b
    com.amap.api.mapcore.r c -> c
    com.amap.api.maps.model.BitmapDescriptor d -> d
    com.amap.api.maps.model.LatLng e -> e
    float f -> f
    float g -> g
    com.amap.api.maps.model.LatLngBounds h -> h
    float i -> i
    float j -> j
    boolean k -> k
    float l -> l
    float m -> m
    float n -> n
    java.lang.String o -> o
    java.nio.FloatBuffer p -> p
    java.nio.FloatBuffer q -> q
    int r -> r
    boolean s -> s
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.w) -> a
    int f() -> f
    void g() -> g
    void o() -> o
    void p() -> p
    void q() -> q
    void a(com.autonavi.amap.mapcore.DPoint,double,double,double,double,com.autonavi.amap.mapcore.FPoint) -> a
    void r() -> r
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void a(javax.microedition.khronos.opengles.GL10,int,java.nio.FloatBuffer,java.nio.FloatBuffer) -> a
    void n() -> n
    boolean a() -> a
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng h() -> h
    void b(float) -> b
    void a(float,float) -> a
    float i() -> i
    float j() -> j
    void a(com.amap.api.maps.model.LatLngBounds) -> a
    com.amap.api.maps.model.LatLngBounds k() -> k
    void c(float) -> c
    float l() -> l
    void d(float) -> d
    float m() -> m
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    void b(float,float) -> b
com.amap.api.mapcore.r -> com.amap.api.mapcore.r:
    void a(com.amap.api.maps.CustomRenderer) -> a
    void a(com.amap.api.mapcore.o) -> a
    com.autonavi.amap.mapcore.MapProjection d() -> d
    int j() -> j
    int k() -> k
    int c() -> c
    int l() -> l
    android.view.View z() -> z
    void setZOrderOnTop(boolean) -> setZOrderOnTop
    void a(android.location.Location) -> a
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    void J() -> J
    void a(double,double,com.autonavi.amap.mapcore.IPoint) -> a
    void b(int,int,com.autonavi.amap.mapcore.FPoint) -> b
    void b(int,int,com.autonavi.amap.mapcore.DPoint) -> b
    float B() -> B
    int H() -> H
    void d(int) -> d
    com.amap.api.maps.model.CameraPosition n() -> n
    float o() -> o
    float p() -> p
    void a(com.amap.api.mapcore.i) -> a
    void b(com.amap.api.mapcore.i) -> b
    void a(com.amap.api.mapcore.i,com.amap.api.maps.AMap$CancelableCallback) -> a
    void a(com.amap.api.mapcore.i,long,com.amap.api.maps.AMap$CancelableCallback) -> a
    void q() -> q
    com.amap.api.mapcore.y a(com.amap.api.maps.model.PolylineOptions) -> a
    com.amap.api.mapcore.s a(com.amap.api.maps.model.CircleOptions) -> a
    com.amap.api.mapcore.x a(com.amap.api.maps.model.PolygonOptions) -> a
    com.amap.api.mapcore.t a(com.amap.api.maps.model.GroundOverlayOptions) -> a
    com.amap.api.maps.model.Marker a(com.amap.api.maps.model.MarkerOptions) -> a
    com.amap.api.mapcore.aj b(com.amap.api.maps.model.MarkerOptions) -> b
    void r() -> r
    int s() -> s
    void a(int) -> a
    boolean t() -> t
    void f(boolean) -> f
    boolean u() -> u
    void g(boolean) -> g
    void a(com.amap.api.maps.model.MyLocationStyle) -> a
    android.location.Location v() -> v
    void a(com.amap.api.maps.LocationSource) -> a
    com.amap.api.mapcore.ac w() -> w
    com.amap.api.mapcore.z x() -> x
    void a(com.amap.api.maps.AMap$OnCameraChangeListener) -> a
    void a(com.amap.api.maps.AMap$OnMapClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLongClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerClickListener) -> a
    void a(com.amap.api.maps.AMap$OnMarkerDragListener) -> a
    void a(com.amap.api.maps.AMap$OnMapLoadedListener) -> a
    void a(com.amap.api.maps.AMap$OnInfoWindowClickListener) -> a
    void a(com.amap.api.maps.AMap$InfoWindowAdapter) -> a
    void a(com.amap.api.mapcore.v) -> a
    boolean b(com.amap.api.mapcore.v) -> b
    void A() -> A
    void a(double,double,com.autonavi.amap.mapcore.FPoint) -> a
    void a(int,int,com.autonavi.amap.mapcore.DPoint) -> a
    void b(double,double,com.autonavi.amap.mapcore.IPoint) -> b
    void m() -> m
    void a(com.amap.api.maps.AMap$OnMyLocationChangeListener) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void f() -> f
    void a(com.amap.api.maps.AMap$onMapPrintScreenListener) -> a
    void a(com.amap.api.maps.AMap$OnMapScreenShotListener) -> a
    void c(int) -> c
    float G() -> G
    com.amap.api.maps.model.LatLngBounds D() -> D
    void onResume() -> onResume
    void onPause() -> onPause
    void e(boolean) -> e
    void a(int,int,int,int) -> a
    void a(float) -> a
    java.util.List I() -> I
    void a(int,int,com.autonavi.amap.mapcore.FPoint) -> a
    float b(int) -> b
com.amap.api.mapcore.s -> com.amap.api.mapcore.s:
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng i() -> i
    void a(double) -> a
    double j() -> j
    void b(float) -> b
    float k() -> k
    void a(int) -> a
    int l() -> l
    void b(int) -> b
    int m() -> m
    boolean b(com.amap.api.maps.model.LatLng) -> b
com.amap.api.mapcore.t -> com.amap.api.mapcore.t:
    void a(com.amap.api.maps.model.LatLng) -> a
    com.amap.api.maps.model.LatLng h() -> h
    void b(float) -> b
    void a(float,float) -> a
    float i() -> i
    float j() -> j
    void a(com.amap.api.maps.model.LatLngBounds) -> a
    com.amap.api.maps.model.LatLngBounds k() -> k
    void c(float) -> c
    float l() -> l
    void d(float) -> d
    float m() -> m
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
com.amap.api.mapcore.u -> com.amap.api.mapcore.u:
    com.amap.api.mapcore.r a() -> a
    void a(android.app.Activity,com.amap.api.maps.AMapOptions,android.os.Bundle) -> a
    void a(android.app.Activity) -> a
    void a(com.amap.api.maps.AMapOptions) -> a
    void a(android.os.Bundle) -> a
    android.view.View a(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void b(android.os.Bundle) -> b
com.amap.api.mapcore.v -> com.amap.api.mapcore.v:
    boolean a() -> a
    boolean b() -> b
    android.graphics.Rect c() -> c
    com.amap.api.maps.model.LatLng d() -> d
    com.autonavi.amap.mapcore.IPoint e() -> e
    java.lang.String f() -> f
    int g() -> g
    void a(com.amap.api.maps.model.LatLng) -> a
    void a(java.lang.String) -> a
    java.lang.String h() -> h
    void a(com.amap.api.maps.model.BitmapDescriptor) -> a
    void a(float,float) -> a
    void b(java.lang.String) -> b
    java.lang.String i() -> i
    void a(boolean) -> a
    boolean j() -> j
    void k() -> k
    void l() -> l
    boolean m() -> m
    void b(boolean) -> b
    boolean n() -> n
    void o() -> o
    boolean a(com.amap.api.mapcore.v) -> a
    int p() -> p
    void a(javax.microedition.khronos.opengles.GL10,com.amap.api.mapcore.r) -> a
    void a(java.lang.Object) -> a
    java.lang.Object q() -> q
    int r() -> r
    void c(boolean) -> c
    boolean s() -> s
    void a(float) -> a
    void a(int) -> a
    int t() -> t
    void a(java.util.ArrayList) -> a
    java.util.ArrayList u() -> u
com.amap.api.mapcore.w -> com.amap.api.mapcore.w:
    void b() -> b
    java.lang.String c() -> c
    void a(float) -> a
    float d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean a(com.amap.api.mapcore.w) -> a
    int f() -> f
    void g() -> g
    void a(javax.microedition.khronos.opengles.GL10) -> a
    void n() -> n
    boolean a() -> a
com.amap.api.mapcore.x -> com.amap.api.mapcore.x:
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void b(int) -> b
    void a(java.util.List) -> a
    java.util.List j() -> j
    int k() -> k
    boolean a(com.amap.api.maps.model.LatLng) -> a
com.amap.api.mapcore.y -> com.amap.api.mapcore.y:
    void b(float) -> b
    float h() -> h
    void a(int) -> a
    int i() -> i
    void a(java.util.List) -> a
    java.util.List j() -> j
    boolean k() -> k
    void b(boolean) -> b
    void c(boolean) -> c
    boolean l() -> l
com.amap.api.mapcore.z -> com.amap.api.mapcore.z:
    com.amap.api.maps.model.LatLng a(android.graphics.Point) -> a
    android.graphics.Point a(com.amap.api.maps.model.LatLng) -> a
    android.graphics.PointF b(com.amap.api.maps.model.LatLng) -> b
    com.amap.api.maps.model.VisibleRegion a() -> a
    float a(int) -> a
com.amap.api.maps.AMap -> com.amap.api.maps.AMap:
    int MAP_TYPE_NORMAL -> MAP_TYPE_NORMAL
    int MAP_TYPE_SATELLITE -> MAP_TYPE_SATELLITE
    com.amap.api.mapcore.r a -> a
    com.amap.api.maps.UiSettings b -> b
    com.amap.api.maps.Projection c -> c
    com.amap.api.maps.model.MyTrafficStyle d -> d
    com.amap.api.mapcore.r a() -> a
    com.amap.api.maps.model.CameraPosition getCameraPosition() -> getCameraPosition
    float getMaxZoomLevel() -> getMaxZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    void moveCamera(com.amap.api.maps.CameraUpdate) -> moveCamera
    void animateCamera(com.amap.api.maps.CameraUpdate) -> animateCamera
    void animateCamera(com.amap.api.maps.CameraUpdate,com.amap.api.maps.AMap$CancelableCallback) -> animateCamera
    void animateCamera(com.amap.api.maps.CameraUpdate,long,com.amap.api.maps.AMap$CancelableCallback) -> animateCamera
    void stopAnimation() -> stopAnimation
    com.amap.api.maps.model.Polyline addPolyline(com.amap.api.maps.model.PolylineOptions) -> addPolyline
    com.amap.api.maps.model.Circle addCircle(com.amap.api.maps.model.CircleOptions) -> addCircle
    com.amap.api.maps.model.Polygon addPolygon(com.amap.api.maps.model.PolygonOptions) -> addPolygon
    com.amap.api.maps.model.GroundOverlay addGroundOverlay(com.amap.api.maps.model.GroundOverlayOptions) -> addGroundOverlay
    com.amap.api.maps.model.Marker addMarker(com.amap.api.maps.model.MarkerOptions) -> addMarker
    java.util.List getMapScreenMarkers() -> getMapScreenMarkers
    void clear() -> clear
    int getMapType() -> getMapType
    void setMapType(int) -> setMapType
    boolean isTrafficEnabled() -> isTrafficEnabled
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    void setMyTrafficStyle(com.amap.api.maps.model.MyTrafficStyle) -> setMyTrafficStyle
    com.amap.api.maps.model.MyTrafficStyle getMyTrafficStyle() -> getMyTrafficStyle
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    android.location.Location getMyLocation() -> getMyLocation
    void setLocationSource(com.amap.api.maps.LocationSource) -> setLocationSource
    void setMyLocationStyle(com.amap.api.maps.model.MyLocationStyle) -> setMyLocationStyle
    void setMyLocationRotateAngle(float) -> setMyLocationRotateAngle
    com.amap.api.maps.UiSettings getUiSettings() -> getUiSettings
    com.amap.api.maps.Projection getProjection() -> getProjection
    void setOnCameraChangeListener(com.amap.api.maps.AMap$OnCameraChangeListener) -> setOnCameraChangeListener
    void setOnMapClickListener(com.amap.api.maps.AMap$OnMapClickListener) -> setOnMapClickListener
    void setOnMyLocationChangeListener(com.amap.api.maps.AMap$OnMyLocationChangeListener) -> setOnMyLocationChangeListener
    void setOnMapLongClickListener(com.amap.api.maps.AMap$OnMapLongClickListener) -> setOnMapLongClickListener
    void setOnMarkerClickListener(com.amap.api.maps.AMap$OnMarkerClickListener) -> setOnMarkerClickListener
    void setOnMarkerDragListener(com.amap.api.maps.AMap$OnMarkerDragListener) -> setOnMarkerDragListener
    void setOnInfoWindowClickListener(com.amap.api.maps.AMap$OnInfoWindowClickListener) -> setOnInfoWindowClickListener
    void setInfoWindowAdapter(com.amap.api.maps.AMap$InfoWindowAdapter) -> setInfoWindowAdapter
    void setOnMapLoadedListener(com.amap.api.maps.AMap$OnMapLoadedListener) -> setOnMapLoadedListener
    void getMapPrintScreen(com.amap.api.maps.AMap$onMapPrintScreenListener) -> getMapPrintScreen
    void getMapScreenShot(com.amap.api.maps.AMap$OnMapScreenShotListener) -> getMapScreenShot
    float getScalePerPixel() -> getScalePerPixel
    void runOnDrawFrame() -> runOnDrawFrame
    void setCustomRenderer(com.amap.api.maps.CustomRenderer) -> setCustomRenderer
    java.lang.String getVersion() -> getVersion
com.amap.api.maps.AMap$CancelableCallback -> com.amap.api.maps.AMap$CancelableCallback:
    void onFinish() -> onFinish
    void onCancel() -> onCancel
com.amap.api.maps.AMap$InfoWindowAdapter -> com.amap.api.maps.AMap$InfoWindowAdapter:
    android.view.View getInfoWindow(com.amap.api.maps.model.Marker) -> getInfoWindow
    android.view.View getInfoContents(com.amap.api.maps.model.Marker) -> getInfoContents
com.amap.api.maps.AMap$OnCameraChangeListener -> com.amap.api.maps.AMap$OnCameraChangeListener:
    void onCameraChange(com.amap.api.maps.model.CameraPosition) -> onCameraChange
    void onCameraChangeFinish(com.amap.api.maps.model.CameraPosition) -> onCameraChangeFinish
com.amap.api.maps.AMap$OnInfoWindowClickListener -> com.amap.api.maps.AMap$OnInfoWindowClickListener:
    void onInfoWindowClick(com.amap.api.maps.model.Marker) -> onInfoWindowClick
com.amap.api.maps.AMap$OnMapClickListener -> com.amap.api.maps.AMap$OnMapClickListener:
    void onMapClick(com.amap.api.maps.model.LatLng) -> onMapClick
com.amap.api.maps.AMap$OnMapLoadedListener -> com.amap.api.maps.AMap$OnMapLoadedListener:
    void onMapLoaded() -> onMapLoaded
com.amap.api.maps.AMap$OnMapLongClickListener -> com.amap.api.maps.AMap$OnMapLongClickListener:
    void onMapLongClick(com.amap.api.maps.model.LatLng) -> onMapLongClick
com.amap.api.maps.AMap$OnMapScreenShotListener -> com.amap.api.maps.AMap$OnMapScreenShotListener:
    void onMapScreenShot(android.graphics.Bitmap) -> onMapScreenShot
com.amap.api.maps.AMap$OnMarkerClickListener -> com.amap.api.maps.AMap$OnMarkerClickListener:
    boolean onMarkerClick(com.amap.api.maps.model.Marker) -> onMarkerClick
com.amap.api.maps.AMap$OnMarkerDragListener -> com.amap.api.maps.AMap$OnMarkerDragListener:
    void onMarkerDragStart(com.amap.api.maps.model.Marker) -> onMarkerDragStart
    void onMarkerDrag(com.amap.api.maps.model.Marker) -> onMarkerDrag
    void onMarkerDragEnd(com.amap.api.maps.model.Marker) -> onMarkerDragEnd
com.amap.api.maps.AMap$OnMyLocationChangeListener -> com.amap.api.maps.AMap$OnMyLocationChangeListener:
    void onMyLocationChange(android.location.Location) -> onMyLocationChange
com.amap.api.maps.AMap$onMapPrintScreenListener -> com.amap.api.maps.AMap$onMapPrintScreenListener:
    void onMapPrint(android.graphics.drawable.Drawable) -> onMapPrint
com.amap.api.maps.AMapException -> com.amap.api.maps.AMapException:
    java.lang.String ERROR_IO -> ERROR_IO
    java.lang.String ERROR_SOCKET -> ERROR_SOCKET
    java.lang.String ERROR_SOCKE_TIME_OUT -> ERROR_SOCKE_TIME_OUT
    java.lang.String ERROR_INVALID_PARAMETER -> ERROR_INVALID_PARAMETER
    java.lang.String ERROR_NULL_PARAMETER -> ERROR_NULL_PARAMETER
    java.lang.String ERROR_URL -> ERROR_URL
    java.lang.String ERROR_UNKNOW_HOST -> ERROR_UNKNOW_HOST
    java.lang.String ERROR_UNKNOW_SERVICE -> ERROR_UNKNOW_SERVICE
    java.lang.String ERROR_PROTOCOL -> ERROR_PROTOCOL
    java.lang.String ERROR_CONNECTION -> ERROR_CONNECTION
    java.lang.String ERROR_UNKNOWN -> ERROR_UNKNOWN
    java.lang.String ERROR_FAILURE_AUTH -> ERROR_FAILURE_AUTH
    java.lang.String a -> a
    java.lang.String getErrorMessage() -> getErrorMessage
com.amap.api.maps.AMapNativeRenderer -> com.amap.api.maps.AMapNativeRenderer:
    void nativeDrawLineByTextureID(float[],int,float,int,float,float,float,float,float,boolean) -> nativeDrawLineByTextureID
com.amap.api.maps.AMapOptions -> com.amap.api.maps.AMapOptions:
    com.amap.api.maps.AMapOptionsCreator CREATOR -> CREATOR
    int a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    com.amap.api.maps.model.CameraPosition h -> h
    boolean i -> i
    boolean j -> j
    int k -> k
    int LOGO_POSITION_BOTTOM_LEFT -> LOGO_POSITION_BOTTOM_LEFT
    int LOGO_POSITION_BOTTOM_CENTER -> LOGO_POSITION_BOTTOM_CENTER
    int LOGO_POSITION_BOTTOM_RIGHT -> LOGO_POSITION_BOTTOM_RIGHT
    com.amap.api.maps.AMapOptions logoPosition(int) -> logoPosition
    com.amap.api.maps.AMapOptions zOrderOnTop(boolean) -> zOrderOnTop
    com.amap.api.maps.AMapOptions mapType(int) -> mapType
    com.amap.api.maps.AMapOptions camera(com.amap.api.maps.model.CameraPosition) -> camera
    com.amap.api.maps.AMapOptions scaleControlsEnabled(boolean) -> scaleControlsEnabled
    com.amap.api.maps.AMapOptions zoomControlsEnabled(boolean) -> zoomControlsEnabled
    com.amap.api.maps.AMapOptions compassEnabled(boolean) -> compassEnabled
    com.amap.api.maps.AMapOptions scrollGesturesEnabled(boolean) -> scrollGesturesEnabled
    com.amap.api.maps.AMapOptions zoomGesturesEnabled(boolean) -> zoomGesturesEnabled
    com.amap.api.maps.AMapOptions tiltGesturesEnabled(boolean) -> tiltGesturesEnabled
    com.amap.api.maps.AMapOptions rotateGesturesEnabled(boolean) -> rotateGesturesEnabled
    int getLogoPosition() -> getLogoPosition
    java.lang.Boolean getZOrderOnTop() -> getZOrderOnTop
    int getMapType() -> getMapType
    com.amap.api.maps.model.CameraPosition getCamera() -> getCamera
    java.lang.Boolean getScaleControlsEnabled() -> getScaleControlsEnabled
    java.lang.Boolean getZoomControlsEnabled() -> getZoomControlsEnabled
    java.lang.Boolean getCompassEnabled() -> getCompassEnabled
    java.lang.Boolean getScrollGesturesEnabled() -> getScrollGesturesEnabled
    java.lang.Boolean getZoomGesturesEnabled() -> getZoomGesturesEnabled
    java.lang.Boolean getTiltGesturesEnabled() -> getTiltGesturesEnabled
    java.lang.Boolean getRotateGesturesEnabled() -> getRotateGesturesEnabled
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.AMapOptionsCreator -> com.amap.api.maps.AMapOptionsCreator:
    com.amap.api.maps.AMapOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.AMapOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.AMapUtils -> com.amap.api.maps.AMapUtils:
    float calculateLineDistance(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> calculateLineDistance
    float calculateArea(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> calculateArea
com.amap.api.maps.CameraUpdate -> com.amap.api.maps.CameraUpdate:
    com.amap.api.mapcore.i a -> a
    com.amap.api.mapcore.i a() -> a
com.amap.api.maps.CameraUpdateFactory -> com.amap.api.maps.CameraUpdateFactory:
    com.amap.api.maps.CameraUpdate zoomIn() -> zoomIn
    com.amap.api.maps.CameraUpdate zoomOut() -> zoomOut
    com.amap.api.maps.CameraUpdate scrollBy(float,float) -> scrollBy
    com.amap.api.maps.CameraUpdate zoomTo(float) -> zoomTo
    com.amap.api.maps.CameraUpdate zoomBy(float) -> zoomBy
    com.amap.api.maps.CameraUpdate zoomBy(float,android.graphics.Point) -> zoomBy
    com.amap.api.maps.CameraUpdate newCameraPosition(com.amap.api.maps.model.CameraPosition) -> newCameraPosition
    com.amap.api.maps.CameraUpdate newLatLng(com.amap.api.maps.model.LatLng) -> newLatLng
    com.amap.api.maps.CameraUpdate newLatLngZoom(com.amap.api.maps.model.LatLng,float) -> newLatLngZoom
    com.amap.api.maps.CameraUpdate newLatLngBounds(com.amap.api.maps.model.LatLngBounds,int) -> newLatLngBounds
    com.amap.api.maps.CameraUpdate changeLatLng(com.amap.api.maps.model.LatLng) -> changeLatLng
    com.amap.api.maps.CameraUpdate changeBearing(float) -> changeBearing
    com.amap.api.maps.CameraUpdate changeTilt(float) -> changeTilt
    com.amap.api.maps.CameraUpdate newLatLngBounds(com.amap.api.maps.model.LatLngBounds,int,int,int) -> newLatLngBounds
com.amap.api.maps.CustomRenderer -> com.amap.api.maps.CustomRenderer:
    void OnMapReferencechanged() -> OnMapReferencechanged
com.amap.api.maps.LocationSource -> com.amap.api.maps.LocationSource:
    void activate(com.amap.api.maps.LocationSource$OnLocationChangedListener) -> activate
    void deactivate() -> deactivate
com.amap.api.maps.LocationSource$OnLocationChangedListener -> com.amap.api.maps.LocationSource$OnLocationChangedListener:
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.amap.api.maps.MapFragment -> com.amap.api.maps.MapFragment:
    com.amap.api.maps.AMap a -> a
    com.amap.api.mapcore.u b -> b
    com.amap.api.maps.MapFragment newInstance() -> newInstance
    com.amap.api.maps.MapFragment newInstance(com.amap.api.maps.AMapOptions) -> newInstance
    com.amap.api.mapcore.u getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
com.amap.api.maps.MapView -> com.amap.api.maps.MapView:
    com.amap.api.mapcore.u a -> a
    com.amap.api.maps.AMap b -> b
    com.amap.api.mapcore.u getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
com.amap.api.maps.MapsInitializer -> com.amap.api.maps.MapsInitializer:
    java.lang.String sdcardDir -> sdcardDir
    void initialize(android.content.Context) -> initialize
com.amap.api.maps.Projection -> com.amap.api.maps.Projection:
    com.amap.api.mapcore.z a -> a
    com.amap.api.maps.model.LatLng fromScreenLocation(android.graphics.Point) -> fromScreenLocation
    android.graphics.Point toScreenLocation(com.amap.api.maps.model.LatLng) -> toScreenLocation
    android.graphics.PointF toMapLocation(com.amap.api.maps.model.LatLng) -> toMapLocation
    android.graphics.PointF toOpenGLLocation(com.amap.api.maps.model.LatLng) -> toOpenGLLocation
    float toOpenGLWidth(int) -> toOpenGLWidth
    com.amap.api.maps.model.VisibleRegion getVisibleRegion() -> getVisibleRegion
com.amap.api.maps.SupportMapFragment -> com.amap.api.maps.SupportMapFragment:
    com.amap.api.maps.AMap a -> a
    com.amap.api.mapcore.u b -> b
    com.amap.api.maps.SupportMapFragment newInstance() -> newInstance
    com.amap.api.maps.SupportMapFragment newInstance(com.amap.api.maps.AMapOptions) -> newInstance
    com.amap.api.mapcore.u getMapFragmentDelegate() -> getMapFragmentDelegate
    com.amap.api.maps.AMap getMap() -> getMap
    void onAttach(android.app.Activity) -> onAttach
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setArguments(android.os.Bundle) -> setArguments
com.amap.api.maps.UiSettings -> com.amap.api.maps.UiSettings:
    com.amap.api.mapcore.ac a -> a
    void setScaleControlsEnabled(boolean) -> setScaleControlsEnabled
    void setZoomControlsEnabled(boolean) -> setZoomControlsEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setMyLocationButtonEnabled(boolean) -> setMyLocationButtonEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
    void setTiltGesturesEnabled(boolean) -> setTiltGesturesEnabled
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    void setLogoPosition(int) -> setLogoPosition
    boolean isScaleControlsEnabled() -> isScaleControlsEnabled
    boolean isZoomControlsEnabled() -> isZoomControlsEnabled
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isMyLocationButtonEnabled() -> isMyLocationButtonEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    boolean isTiltGesturesEnabled() -> isTiltGesturesEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
    int getLogoPosition() -> getLogoPosition
com.amap.api.maps.model.AMapGLOverlay -> com.amap.api.maps.model.AMapGLOverlay:
    void destroy() -> destroy
com.amap.api.maps.model.BitmapDescriptor -> com.amap.api.maps.model.BitmapDescriptor:
    com.amap.api.maps.model.BitmapDescriptorCreator CREATOR -> CREATOR
    int a -> a
    int b -> b
    android.graphics.Bitmap c -> c
    com.amap.api.maps.model.BitmapDescriptor clone() -> clone
    android.graphics.Bitmap getBitmap() -> getBitmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void recycle() -> recycle
    java.lang.Object clone() -> clone
com.amap.api.maps.model.BitmapDescriptorCreator -> com.amap.api.maps.model.BitmapDescriptorCreator:
    com.amap.api.maps.model.BitmapDescriptor createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.BitmapDescriptor[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.BitmapDescriptorFactory -> com.amap.api.maps.model.BitmapDescriptorFactory:
    float HUE_RED -> HUE_RED
    float HUE_ORANGE -> HUE_ORANGE
    float HUE_YELLOW -> HUE_YELLOW
    float HUE_GREEN -> HUE_GREEN
    float HUE_CYAN -> HUE_CYAN
    float HUE_AZURE -> HUE_AZURE
    float HUE_BLUE -> HUE_BLUE
    float HUE_VIOLET -> HUE_VIOLET
    float HUE_MAGENTA -> HUE_MAGENTA
    float HUE_ROSE -> HUE_ROSE
    com.amap.api.maps.model.BitmapDescriptor fromResource(int) -> fromResource
    com.amap.api.maps.model.BitmapDescriptor fromView(android.view.View) -> fromView
    android.graphics.Bitmap a(android.view.View) -> a
    com.amap.api.maps.model.BitmapDescriptor fromPath(java.lang.String) -> fromPath
    com.amap.api.maps.model.BitmapDescriptor fromAsset(java.lang.String) -> fromAsset
    com.amap.api.maps.model.BitmapDescriptor fromFile(java.lang.String) -> fromFile
    com.amap.api.maps.model.BitmapDescriptor defaultMarker() -> defaultMarker
    com.amap.api.maps.model.BitmapDescriptor defaultMarker(float) -> defaultMarker
    com.amap.api.maps.model.BitmapDescriptor fromBitmap(android.graphics.Bitmap) -> fromBitmap
com.amap.api.maps.model.CameraPosition -> com.amap.api.maps.model.CameraPosition:
    com.amap.api.maps.model.CameraPositionCreator CREATOR -> CREATOR
    com.amap.api.maps.model.LatLng target -> target
    float zoom -> zoom
    float tilt -> tilt
    float bearing -> bearing
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    com.amap.api.maps.model.CameraPosition fromLatLngZoom(com.amap.api.maps.model.LatLng,float) -> fromLatLngZoom
    com.amap.api.maps.model.CameraPosition$Builder builder() -> builder
    com.amap.api.maps.model.CameraPosition$Builder builder(com.amap.api.maps.model.CameraPosition) -> builder
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.maps.model.CameraPosition$Builder -> com.amap.api.maps.model.CameraPosition$Builder:
    com.amap.api.maps.model.LatLng a -> a
    float b -> b
    float c -> c
    float d -> d
    com.amap.api.maps.model.CameraPosition$Builder target(com.amap.api.maps.model.LatLng) -> target
    com.amap.api.maps.model.CameraPosition$Builder zoom(float) -> zoom
    com.amap.api.maps.model.CameraPosition$Builder tilt(float) -> tilt
    com.amap.api.maps.model.CameraPosition$Builder bearing(float) -> bearing
    com.amap.api.maps.model.CameraPosition build() -> build
com.amap.api.maps.model.CameraPositionCreator -> com.amap.api.maps.model.CameraPositionCreator:
    com.amap.api.maps.model.CameraPosition createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.CameraPosition[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Circle -> com.amap.api.maps.model.Circle:
    com.amap.api.mapcore.s a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setCenter(com.amap.api.maps.model.LatLng) -> setCenter
    com.amap.api.maps.model.LatLng getCenter() -> getCenter
    void setRadius(double) -> setRadius
    double getRadius() -> getRadius
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean contains(com.amap.api.maps.model.LatLng) -> contains
com.amap.api.maps.model.CircleOptions -> com.amap.api.maps.model.CircleOptions:
    com.amap.api.maps.model.CircleOptionsCreator CREATOR -> CREATOR
    java.lang.String a -> a
    com.amap.api.maps.model.LatLng b -> b
    double c -> c
    float d -> d
    int e -> e
    int f -> f
    float g -> g
    boolean h -> h
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.amap.api.maps.model.CircleOptions center(com.amap.api.maps.model.LatLng) -> center
    com.amap.api.maps.model.CircleOptions radius(double) -> radius
    com.amap.api.maps.model.CircleOptions strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.CircleOptions strokeColor(int) -> strokeColor
    com.amap.api.maps.model.CircleOptions fillColor(int) -> fillColor
    com.amap.api.maps.model.CircleOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.CircleOptions visible(boolean) -> visible
    com.amap.api.maps.model.LatLng getCenter() -> getCenter
    double getRadius() -> getRadius
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    int getFillColor() -> getFillColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
com.amap.api.maps.model.CircleOptionsCreator -> com.amap.api.maps.model.CircleOptionsCreator:
    com.amap.api.maps.model.CircleOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.CircleOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.GroundOverlay -> com.amap.api.maps.model.GroundOverlay:
    com.amap.api.mapcore.t a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPosition(com.amap.api.maps.model.LatLng) -> setPosition
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    void setDimensions(float) -> setDimensions
    void setImage(com.amap.api.maps.model.BitmapDescriptor) -> setImage
    void setDimensions(float,float) -> setDimensions
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setPositionFromBounds(com.amap.api.maps.model.LatLngBounds) -> setPositionFromBounds
    com.amap.api.maps.model.LatLngBounds getBounds() -> getBounds
    void setBearing(float) -> setBearing
    float getBearing() -> getBearing
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.GroundOverlayOptions -> com.amap.api.maps.model.GroundOverlayOptions:
    com.amap.api.maps.model.GroundOverlayOptionsCreator CREATOR -> CREATOR
    float NO_DIMENSION -> NO_DIMENSION
    int a -> a
    com.amap.api.maps.model.BitmapDescriptor b -> b
    com.amap.api.maps.model.LatLng c -> c
    float d -> d
    float e -> e
    com.amap.api.maps.model.LatLngBounds f -> f
    float g -> g
    float h -> h
    boolean i -> i
    float j -> j
    float k -> k
    float l -> l
    com.amap.api.maps.model.GroundOverlayOptions image(com.amap.api.maps.model.BitmapDescriptor) -> image
    com.amap.api.maps.model.GroundOverlayOptions anchor(float,float) -> anchor
    com.amap.api.maps.model.GroundOverlayOptions position(com.amap.api.maps.model.LatLng,float) -> position
    com.amap.api.maps.model.GroundOverlayOptions position(com.amap.api.maps.model.LatLng,float,float) -> position
    com.amap.api.maps.model.GroundOverlayOptions a(com.amap.api.maps.model.LatLng,float,float) -> a
    com.amap.api.maps.model.GroundOverlayOptions positionFromBounds(com.amap.api.maps.model.LatLngBounds) -> positionFromBounds
    com.amap.api.maps.model.GroundOverlayOptions bearing(float) -> bearing
    com.amap.api.maps.model.GroundOverlayOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.GroundOverlayOptions visible(boolean) -> visible
    com.amap.api.maps.model.GroundOverlayOptions transparency(float) -> transparency
    com.amap.api.maps.model.BitmapDescriptor getImage() -> getImage
    com.amap.api.maps.model.LatLng getLocation() -> getLocation
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    com.amap.api.maps.model.LatLngBounds getBounds() -> getBounds
    float getBearing() -> getBearing
    float getZIndex() -> getZIndex
    float getTransparency() -> getTransparency
    float getAnchorU() -> getAnchorU
    float getAnchorV() -> getAnchorV
    boolean isVisible() -> isVisible
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.GroundOverlayOptionsCreator -> com.amap.api.maps.model.GroundOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.GroundOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.GroundOverlayOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.LatLng -> com.amap.api.maps.model.LatLng:
    com.amap.api.maps.model.LatLngCreator CREATOR -> CREATOR
    double latitude -> latitude
    double longitude -> longitude
    java.text.DecimalFormat a -> a
    double a(double) -> a
    com.amap.api.maps.model.LatLng clone() -> clone
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object clone() -> clone
com.amap.api.maps.model.LatLngBounds -> com.amap.api.maps.model.LatLngBounds:
    com.amap.api.maps.model.LatLngBoundsCreator CREATOR -> CREATOR
    int a -> a
    com.amap.api.maps.model.LatLng southwest -> southwest
    com.amap.api.maps.model.LatLng northeast -> northeast
    int a() -> a
    com.amap.api.maps.model.LatLngBounds$Builder builder() -> builder
    boolean contains(com.amap.api.maps.model.LatLng) -> contains
    boolean contains(com.amap.api.maps.model.LatLngBounds) -> contains
    boolean intersects(com.amap.api.maps.model.LatLngBounds) -> intersects
    boolean a(com.amap.api.maps.model.LatLngBounds) -> a
    com.amap.api.maps.model.LatLngBounds including(com.amap.api.maps.model.LatLng) -> including
    double c(double,double) -> c
    double d(double,double) -> d
    boolean a(double) -> a
    boolean b(double) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    double a(double,double) -> a
    double b(double,double) -> b
com.amap.api.maps.model.LatLngBounds$Builder -> com.amap.api.maps.model.LatLngBounds$Builder:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    com.amap.api.maps.model.LatLngBounds$Builder include(com.amap.api.maps.model.LatLng) -> include
    boolean a(double) -> a
    com.amap.api.maps.model.LatLngBounds build() -> build
com.amap.api.maps.model.LatLngBoundsCreator -> com.amap.api.maps.model.LatLngBoundsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.LatLngBounds createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.LatLngBounds[] newArray(int) -> newArray
    void a(com.amap.api.maps.model.LatLngBounds,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.LatLngCreator -> com.amap.api.maps.model.LatLngCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.LatLng createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.LatLng[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Marker -> com.amap.api.maps.model.Marker:
    com.amap.api.mapcore.v a -> a
    void setPeriod(int) -> setPeriod
    int getPeriod() -> getPeriod
    void setIcons(java.util.ArrayList) -> setIcons
    java.util.ArrayList getIcons() -> getIcons
    void remove() -> remove
    void destroy() -> destroy
    java.lang.String getId() -> getId
    void setPerspective(boolean) -> setPerspective
    boolean isPerspective() -> isPerspective
    void setPosition(com.amap.api.maps.model.LatLng) -> setPosition
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setSnippet(java.lang.String) -> setSnippet
    java.lang.String getSnippet() -> getSnippet
    void setIcon(com.amap.api.maps.model.BitmapDescriptor) -> setIcon
    void setAnchor(float,float) -> setAnchor
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    void showInfoWindow() -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    boolean isInfoWindowShown() -> isInfoWindowShown
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void setObject(java.lang.Object) -> setObject
    java.lang.Object getObject() -> getObject
    void setRotateAngle(float) -> setRotateAngle
com.amap.api.maps.model.MarkerOptions -> com.amap.api.maps.model.MarkerOptions:
    com.amap.api.maps.model.MarkerOptionsCreator CREATOR -> CREATOR
    com.amap.api.maps.model.LatLng b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    float e -> e
    float f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String a -> a
    boolean i -> i
    java.util.ArrayList j -> j
    int k -> k
    com.amap.api.maps.model.MarkerOptions icons(java.util.ArrayList) -> icons
    java.util.ArrayList getIcons() -> getIcons
    com.amap.api.maps.model.MarkerOptions period(int) -> period
    int getPeriod() -> getPeriod
    boolean isPerspective() -> isPerspective
    com.amap.api.maps.model.MarkerOptions perspective(boolean) -> perspective
    com.amap.api.maps.model.MarkerOptions position(com.amap.api.maps.model.LatLng) -> position
    void a() -> a
    com.amap.api.maps.model.MarkerOptions icon(com.amap.api.maps.model.BitmapDescriptor) -> icon
    com.amap.api.maps.model.MarkerOptions anchor(float,float) -> anchor
    com.amap.api.maps.model.MarkerOptions title(java.lang.String) -> title
    com.amap.api.maps.model.MarkerOptions snippet(java.lang.String) -> snippet
    com.amap.api.maps.model.MarkerOptions draggable(boolean) -> draggable
    com.amap.api.maps.model.MarkerOptions visible(boolean) -> visible
    com.amap.api.maps.model.LatLng getPosition() -> getPosition
    java.lang.String getTitle() -> getTitle
    java.lang.String getSnippet() -> getSnippet
    com.amap.api.maps.model.BitmapDescriptor getIcon() -> getIcon
    float getAnchorU() -> getAnchorU
    float getAnchorV() -> getAnchorV
    boolean isDraggable() -> isDraggable
    boolean isVisible() -> isVisible
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.MarkerOptionsCreator -> com.amap.api.maps.model.MarkerOptionsCreator:
    com.amap.api.maps.model.MarkerOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.MarkerOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.MyLocationStyle -> com.amap.api.maps.model.MyLocationStyle:
    com.amap.api.maps.model.BitmapDescriptor a -> a
    float b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    com.amap.api.maps.model.MyLocationStyle myLocationIcon(com.amap.api.maps.model.BitmapDescriptor) -> myLocationIcon
    com.amap.api.maps.model.MyLocationStyle anchor(float,float) -> anchor
    com.amap.api.maps.model.MyLocationStyle radiusFillColor(int) -> radiusFillColor
    com.amap.api.maps.model.MyLocationStyle strokeColor(int) -> strokeColor
    com.amap.api.maps.model.MyLocationStyle strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.BitmapDescriptor getMyLocationIcon() -> getMyLocationIcon
    float getAnchorU() -> getAnchorU
    float getAnchorV() -> getAnchorV
    int getRadiusFillColor() -> getRadiusFillColor
    int getStrokeColor() -> getStrokeColor
    float getStrokeWidth() -> getStrokeWidth
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.MyLocationStyleCreator -> com.amap.api.maps.model.MyLocationStyleCreator:
    com.amap.api.maps.model.MyLocationStyle createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.MyLocationStyle[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.MyTrafficStyle -> com.amap.api.maps.model.MyTrafficStyle:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int getSmoothColor() -> getSmoothColor
    void setSmoothColor(int) -> setSmoothColor
    int getSlowColor() -> getSlowColor
    void setSlowColor(int) -> setSlowColor
    int getCongestedColor() -> getCongestedColor
    void setCongestedColor(int) -> setCongestedColor
    int getSeriousCongestedColor() -> getSeriousCongestedColor
    void setSeriousCongestedColor(int) -> setSeriousCongestedColor
com.amap.api.maps.model.Polygon -> com.amap.api.maps.model.Polygon:
    com.amap.api.mapcore.x a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeColor(int) -> setStrokeColor
    int getStrokeColor() -> getStrokeColor
    void setFillColor(int) -> setFillColor
    int getFillColor() -> getFillColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean contains(com.amap.api.maps.model.LatLng) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.PolygonOptions -> com.amap.api.maps.model.PolygonOptions:
    com.amap.api.maps.model.PolygonOptionsCreator CREATOR -> CREATOR
    java.util.List b -> b
    float c -> c
    int d -> d
    int e -> e
    float f -> f
    boolean g -> g
    java.lang.String a -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.amap.api.maps.model.PolygonOptions add(com.amap.api.maps.model.LatLng) -> add
    com.amap.api.maps.model.PolygonOptions add(com.amap.api.maps.model.LatLng[]) -> add
    com.amap.api.maps.model.PolygonOptions addAll(java.lang.Iterable) -> addAll
    com.amap.api.maps.model.PolygonOptions strokeWidth(float) -> strokeWidth
    com.amap.api.maps.model.PolygonOptions strokeColor(int) -> strokeColor
    com.amap.api.maps.model.PolygonOptions fillColor(int) -> fillColor
    com.amap.api.maps.model.PolygonOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.PolygonOptions visible(boolean) -> visible
    java.util.List getPoints() -> getPoints
    float getStrokeWidth() -> getStrokeWidth
    int getStrokeColor() -> getStrokeColor
    int getFillColor() -> getFillColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
com.amap.api.maps.model.PolygonOptionsCreator -> com.amap.api.maps.model.PolygonOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.PolygonOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.PolygonOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.Polyline -> com.amap.api.maps.model.Polyline:
    com.amap.api.mapcore.y a -> a
    void remove() -> remove
    java.lang.String getId() -> getId
    void setPoints(java.util.List) -> setPoints
    java.util.List getPoints() -> getPoints
    void setGeodesic(boolean) -> setGeodesic
    boolean isGeodesic() -> isGeodesic
    void setDottedLine(boolean) -> setDottedLine
    boolean isDottedLine() -> isDottedLine
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.PolylineOptions -> com.amap.api.maps.model.PolylineOptions:
    com.amap.api.maps.model.PolylineOptionsCreator CREATOR -> CREATOR
    java.util.List b -> b
    float c -> c
    int d -> d
    float e -> e
    boolean f -> f
    java.lang.String a -> a
    boolean g -> g
    boolean h -> h
    boolean i -> i
    com.amap.api.maps.model.PolylineOptions setUseTexture(boolean) -> setUseTexture
    boolean isUseTexture() -> isUseTexture
    boolean isGeodesic() -> isGeodesic
    com.amap.api.maps.model.PolylineOptions add(com.amap.api.maps.model.LatLng) -> add
    com.amap.api.maps.model.PolylineOptions add(com.amap.api.maps.model.LatLng[]) -> add
    com.amap.api.maps.model.PolylineOptions addAll(java.lang.Iterable) -> addAll
    com.amap.api.maps.model.PolylineOptions width(float) -> width
    com.amap.api.maps.model.PolylineOptions color(int) -> color
    com.amap.api.maps.model.PolylineOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.PolylineOptions visible(boolean) -> visible
    com.amap.api.maps.model.PolylineOptions geodesic(boolean) -> geodesic
    com.amap.api.maps.model.PolylineOptions setDottedLine(boolean) -> setDottedLine
    boolean isDottedLine() -> isDottedLine
    java.util.List getPoints() -> getPoints
    float getWidth() -> getWidth
    int getColor() -> getColor
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.PolylineOptionsCreator -> com.amap.api.maps.model.PolylineOptionsCreator:
    com.amap.api.maps.model.PolylineOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.PolylineOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.RuntimeRemoteException -> com.amap.api.maps.model.RuntimeRemoteException:
com.amap.api.maps.model.Tile -> com.amap.api.maps.model.Tile:
    com.amap.api.maps.model.a CREATOR -> CREATOR
    int a -> a
    int width -> width
    int height -> height
    byte[] data -> data
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.model.TileOverlay -> com.amap.api.maps.model.TileOverlay:
    com.amap.api.mapcore.ab a -> a
    void remove() -> remove
    void clearTileCache() -> clearTileCache
    java.lang.String getId() -> getId
    void setZIndex(float) -> setZIndex
    float getZIndex() -> getZIndex
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.amap.api.maps.model.TileOverlayOptions -> com.amap.api.maps.model.TileOverlayOptions:
    com.amap.api.maps.model.TileOverlayOptionsCreator CREATOR -> CREATOR
    int a -> a
    com.amap.api.maps.model.TileProvider b -> b
    boolean c -> c
    float d -> d
    int e -> e
    int f -> f
    java.lang.String g -> g
    boolean h -> h
    boolean i -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.amap.api.maps.model.TileOverlayOptions tileProvider(com.amap.api.maps.model.TileProvider) -> tileProvider
    com.amap.api.maps.model.TileOverlayOptions zIndex(float) -> zIndex
    com.amap.api.maps.model.TileOverlayOptions visible(boolean) -> visible
    com.amap.api.maps.model.TileOverlayOptions memCacheSize(int) -> memCacheSize
    com.amap.api.maps.model.TileOverlayOptions diskCacheSize(int) -> diskCacheSize
    com.amap.api.maps.model.TileOverlayOptions diskCacheDir(java.lang.String) -> diskCacheDir
    com.amap.api.maps.model.TileOverlayOptions memoryCacheEnabled(boolean) -> memoryCacheEnabled
    com.amap.api.maps.model.TileOverlayOptions diskCacheEnabled(boolean) -> diskCacheEnabled
    com.amap.api.maps.model.TileProvider getTileProvider() -> getTileProvider
    float getZIndex() -> getZIndex
    boolean isVisible() -> isVisible
    int getMemCacheSize() -> getMemCacheSize
    int getDiskCacheSize() -> getDiskCacheSize
    java.lang.String getDiskCacheDir() -> getDiskCacheDir
    boolean getMemoryCacheEnabled() -> getMemoryCacheEnabled
    boolean getDiskCacheEnabled() -> getDiskCacheEnabled
com.amap.api.maps.model.TileOverlayOptionsCreator -> com.amap.api.maps.model.TileOverlayOptionsCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.TileOverlayOptions createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.TileOverlayOptions[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.TileProvider -> com.amap.api.maps.model.TileProvider:
    com.amap.api.maps.model.Tile NO_TILE -> NO_TILE
    com.amap.api.maps.model.Tile getTile(int,int,int) -> getTile
    int getTileWidth() -> getTileWidth
    int getTileHeight() -> getTileHeight
com.amap.api.maps.model.UrlTileProvider -> com.amap.api.maps.model.UrlTileProvider:
    int a -> a
    int b -> b
    java.net.URL getTileUrl(int,int,int) -> getTileUrl
    com.amap.api.maps.model.Tile getTile(int,int,int) -> getTile
    byte[] a(java.io.InputStream) -> a
    long a(java.io.InputStream,java.io.OutputStream) -> a
    int getTileWidth() -> getTileWidth
    int getTileHeight() -> getTileHeight
com.amap.api.maps.model.VisibleRegion -> com.amap.api.maps.model.VisibleRegion:
    com.amap.api.maps.model.VisibleRegionCreator CREATOR -> CREATOR
    int a -> a
    com.amap.api.maps.model.LatLng nearLeft -> nearLeft
    com.amap.api.maps.model.LatLng nearRight -> nearRight
    com.amap.api.maps.model.LatLng farLeft -> farLeft
    com.amap.api.maps.model.LatLng farRight -> farRight
    com.amap.api.maps.model.LatLngBounds latLngBounds -> latLngBounds
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int a() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.amap.api.maps.model.VisibleRegionCreator -> com.amap.api.maps.model.VisibleRegionCreator:
    int CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.amap.api.maps.model.VisibleRegion createFromParcel(android.os.Parcel) -> createFromParcel
    com.amap.api.maps.model.VisibleRegion[] newArray(int) -> newArray
    void a(com.amap.api.maps.model.VisibleRegion,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.model.a -> com.amap.api.maps.model.a:
    com.amap.api.maps.model.Tile a(android.os.Parcel) -> a
    com.amap.api.maps.model.Tile[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.City -> com.amap.api.maps.offlinemap.City:
    java.lang.String a -> a
    java.lang.String b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setCity(java.lang.String) -> setCity
    java.lang.String getCity() -> getCity
    void setCode(java.lang.String) -> setCode
    java.lang.String getCode() -> getCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.OfflineInitBean -> com.amap.api.maps.offlinemap.OfflineInitBean:
    boolean a -> a
    java.lang.String b -> b
    boolean isNeedUpdate() -> isNeedUpdate
    void setNeedUpdate(boolean) -> setNeedUpdate
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
com.amap.api.maps.offlinemap.OfflineMapCity -> com.amap.api.maps.offlinemap.OfflineMapCity:
    java.lang.String a -> a
    long b -> b
    int c -> c
    java.lang.String d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    long getSize() -> getSize
    void setSize(long) -> setSize
    int getState() -> getState
    void setState(int) -> setState
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.maps.offlinemap.OfflineMapManager -> com.amap.api.maps.offlinemap.OfflineMapManager:
    java.lang.String b -> b
    java.lang.String c -> c
    com.amap.api.maps.offlinemap.d d -> d
    com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener e -> e
    java.util.ArrayList f -> f
    android.content.Context g -> g
    android.os.Handler a -> a
    boolean downloadByCityCode(java.lang.String) -> downloadByCityCode
    boolean downloadByCityName(java.lang.String) -> downloadByCityName
    boolean a(java.lang.String,java.lang.String) -> a
    void restart() -> restart
    void stop() -> stop
    void pause() -> pause
    boolean remove(java.lang.String) -> remove
    com.amap.api.maps.offlinemap.OfflineMapCity getItemByCityCode(java.lang.String) -> getItemByCityCode
    com.amap.api.maps.offlinemap.OfflineMapCity getItemByCityName(java.lang.String) -> getItemByCityName
    java.util.ArrayList getOfflineMapCityList() -> getOfflineMapCityList
    java.util.ArrayList getDownloadingCityList() -> getDownloadingCityList
    boolean b(java.lang.String,java.lang.String) -> b
    boolean updateOfflineCityByCode(java.lang.String) -> updateOfflineCityByCode
    boolean updateOfflineCityByName(java.lang.String) -> updateOfflineCityByName
    java.util.List getDownloadOfflineMapCityList() -> getDownloadOfflineMapCityList
    void a() -> a
    boolean a(java.io.File) -> a
    boolean b(java.io.File) -> b
    void b() -> b
    void c() -> c
    void a(java.util.List) -> a
    void a(com.amap.api.maps.offlinemap.OfflineMapCity) -> a
    boolean b(com.amap.api.maps.offlinemap.OfflineMapCity) -> b
    void d() -> d
    boolean c(com.amap.api.maps.offlinemap.OfflineMapCity) -> c
    boolean d(com.amap.api.maps.offlinemap.OfflineMapCity) -> d
    boolean e(com.amap.api.maps.offlinemap.OfflineMapCity) -> e
    boolean a(com.amap.api.maps.offlinemap.OfflineMapCity,java.lang.String) -> a
    java.lang.String c(java.io.File) -> c
    int d(java.io.File) -> d
    com.amap.api.maps.offlinemap.OfflineMapCity e(java.io.File) -> e
    com.amap.api.maps.offlinemap.OfflineMapCity a(com.amap.api.maps.offlinemap.k) -> a
    com.amap.api.maps.offlinemap.k f(java.io.File) -> f
    void f(com.amap.api.maps.offlinemap.OfflineMapCity) -> f
    void a(com.amap.api.maps.offlinemap.City) -> a
    boolean a(int,int) -> a
    void a(android.os.Message) -> a
    com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener a(com.amap.api.maps.offlinemap.OfflineMapManager) -> a
    void a(com.amap.api.maps.offlinemap.OfflineMapManager,android.os.Message) -> a
com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener -> com.amap.api.maps.offlinemap.OfflineMapManager$OfflineMapDownloadListener:
    void onDownload(int,int,java.lang.String) -> onDownload
com.amap.api.maps.offlinemap.OfflineMapStatus -> com.amap.api.maps.offlinemap.OfflineMapStatus:
    int ERROR -> ERROR
    int STOP -> STOP
    int LOADING -> LOADING
    int UNZIP -> UNZIP
    int WAITING -> WAITING
    int PAUSE -> PAUSE
    int SUCCESS -> SUCCESS
com.amap.api.maps.offlinemap.ProtocalHandler -> com.amap.api.maps.offlinemap.ProtocalHandler:
    java.net.Proxy proxy -> proxy
    java.lang.Object task -> task
    int maxTry -> maxTry
    int timeoutSeconds -> timeoutSeconds
    int waitSeconds -> waitSeconds
    int error -> error
    java.lang.String recommandURL -> recommandURL
    void a(java.lang.Object,java.net.Proxy) -> a
    void setTask(java.lang.Object) -> setTask
    byte[] getProtoBufferRequest() -> getProtoBufferRequest
    java.lang.String getRequestString() -> getRequestString
    java.lang.Object loadData(java.io.InputStream) -> loadData
    java.lang.String getUrl() -> getUrl
    byte[] makeProtobufRequestBytes() -> makeProtobufRequestBytes
    java.lang.Object GetData() -> GetData
    java.lang.Object a() -> a
    java.io.InputStream sendRequest(java.net.HttpURLConnection) -> sendRequest
    java.lang.Object a(java.io.InputStream) -> a
    java.lang.Object onExceptionOccur() -> onExceptionOccur
    int getInt(java.io.InputStream) -> getInt
    java.lang.String getJsonString(org.json.JSONObject,java.lang.String) -> getJsonString
    boolean isNull(java.lang.String) -> isNull
    java.lang.String strEncoder(java.lang.String) -> strEncoder
    boolean isNullString(java.lang.String) -> isNullString
    int str2int(java.lang.String) -> str2int
    float str2float(java.lang.String) -> str2float
    long str2long(java.lang.String) -> str2long
    boolean str2boolean(java.lang.String) -> str2boolean
com.amap.api.maps.offlinemap.a -> com.amap.api.maps.offlinemap.a:
    com.amap.api.maps.offlinemap.City a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.City[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.b -> com.amap.api.maps.offlinemap.b:
    java.io.RandomAccessFile a -> a
    long b -> b
    int a(byte[],int,int) -> a
com.amap.api.maps.offlinemap.c -> com.amap.api.maps.offlinemap.c:
    java.lang.String a -> a
    long b -> b
    long c -> c
    int d -> d
    boolean e -> e
    boolean f -> f
    com.amap.api.maps.offlinemap.b g -> g
    java.net.HttpURLConnection h -> h
    java.io.InputStream i -> i
    void run() -> run
    void a() -> a
com.amap.api.maps.offlinemap.d -> com.amap.api.maps.offlinemap.d:
    java.util.ArrayList a -> a
    java.util.ArrayList b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    android.os.Handler e -> e
    java.lang.String g -> g
    android.content.Context h -> h
    com.amap.api.maps.offlinemap.i f -> f
    java.lang.String a() -> a
    void a(int) -> a
    void b(int) -> b
    boolean a(com.amap.api.maps.offlinemap.k) -> a
    void b() -> b
    void c() -> c
    void a(java.io.File) -> a
    void b(java.io.File) -> b
    void a(java.lang.String) -> a
    void a(com.amap.api.maps.offlinemap.k,int,int) -> a
    android.os.Message b(com.amap.api.maps.offlinemap.k,int,int) -> b
    void b(com.amap.api.maps.offlinemap.k) -> b
com.amap.api.maps.offlinemap.e -> com.amap.api.maps.offlinemap.e:
    byte[] getProtoBufferRequest() -> getProtoBufferRequest
    java.lang.String getRequestString() -> getRequestString
    com.amap.api.maps.offlinemap.OfflineInitBean a(java.io.InputStream) -> a
    java.lang.String getUrl() -> getUrl
    java.lang.Object loadData(java.io.InputStream) -> loadData
com.amap.api.maps.offlinemap.f -> com.amap.api.maps.offlinemap.f:
    com.amap.api.maps.offlinemap.OfflineMapCity a(android.os.Parcel) -> a
    com.amap.api.maps.offlinemap.OfflineMapCity[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.maps.offlinemap.g -> com.amap.api.maps.offlinemap.g:
    com.amap.api.maps.offlinemap.OfflineMapManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.maps.offlinemap.h -> com.amap.api.maps.offlinemap.h:
    android.content.Context a -> a
    void a(android.content.Context) -> a
    byte[] getProtoBufferRequest() -> getProtoBufferRequest
    java.lang.String getRequestString() -> getRequestString
    java.util.List a(java.io.InputStream) -> a
    java.util.List a(java.lang.String) -> a
    void b(java.lang.String) -> b
    long a() -> a
    java.lang.String getUrl() -> getUrl
    java.lang.Object loadData(java.io.InputStream) -> loadData
com.amap.api.maps.offlinemap.i -> com.amap.api.maps.offlinemap.i:
    com.amap.api.maps.offlinemap.j a -> a
    long[] b -> b
    long[] c -> c
    com.amap.api.maps.offlinemap.c[] d -> d
    long e -> e
    boolean f -> f
    boolean g -> g
    java.io.File h -> h
    java.io.DataOutputStream i -> i
    com.amap.api.maps.offlinemap.d j -> j
    com.amap.api.maps.offlinemap.k k -> k
    android.content.Context l -> l
    void run() -> run
    void c() -> c
    long a() -> a
    void d() -> d
    boolean e() -> e
    void a(int) -> a
    void b() -> b
com.amap.api.maps.offlinemap.j -> com.amap.api.maps.offlinemap.j:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d() -> d
com.amap.api.maps.offlinemap.k -> com.amap.api.maps.offlinemap.k:
    int a -> a
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    long i -> i
    long j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    int m -> m
    long b -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    long f() -> f
    void a(int) -> a
    int g() -> g
    void a(long) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void h() -> h
com.amap.api.maps.offlinemap.l -> com.amap.api.maps.offlinemap.l:
    void a(int) -> a
    void a(java.lang.String) -> a
    void b(int) -> b
com.amap.api.maps.offlinemap.m -> com.amap.api.maps.offlinemap.m:
    void a(java.util.zip.ZipInputStream,java.io.File,com.amap.api.maps.offlinemap.k) -> a
    void a(java.lang.String,java.lang.String,com.amap.api.maps.offlinemap.k) -> a
com.amap.api.maps.overlay.BusLineOverlay -> com.amap.api.maps.overlay.BusLineOverlay:
    com.amap.api.services.busline.BusLineItem a -> a
    com.amap.api.maps.AMap b -> b
    java.util.ArrayList c -> c
    com.amap.api.maps.model.Polyline d -> d
    java.util.List e -> e
    android.graphics.Bitmap f -> f
    android.graphics.Bitmap g -> g
    android.graphics.Bitmap h -> h
    android.content.res.AssetManager i -> i
    android.content.Context j -> j
    void addToMap() -> addToMap
    void removeFromMap() -> removeFromMap
    void a() -> a
    void zoomToSpan() -> zoomToSpan
    com.amap.api.maps.model.LatLngBounds a(java.util.List) -> a
    com.amap.api.maps.model.MarkerOptions a(int) -> a
    com.amap.api.maps.model.BitmapDescriptor getStartBitmapDescriptor() -> getStartBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getEndBitmapDescriptor() -> getEndBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getBusBitmapDescriptor() -> getBusBitmapDescriptor
    java.lang.String getTitle(int) -> getTitle
    java.lang.String getSnippet(int) -> getSnippet
    int getBusStationIndex(com.amap.api.maps.model.Marker) -> getBusStationIndex
    com.amap.api.services.busline.BusStationItem getBusStationItem(int) -> getBusStationItem
    int getBusColor() -> getBusColor
    float getBuslineWidth() -> getBuslineWidth
    com.amap.api.maps.model.BitmapDescriptor a(android.graphics.Bitmap,java.lang.String) -> a
com.amap.api.maps.overlay.BusRouteOverlay -> com.amap.api.maps.overlay.BusRouteOverlay:
    com.amap.api.services.route.BusPath a -> a
    com.amap.api.maps.model.LatLng b -> b
    void addToMap() -> addToMap
    java.lang.String a(java.util.List) -> a
    void drawLineArrow(com.amap.api.maps.model.LatLng,com.amap.api.maps.model.LatLng) -> drawLineArrow
    java.lang.String a(com.amap.api.services.route.RouteBusLineItem) -> a
    float getBuslineWidth() -> getBuslineWidth
    com.amap.api.services.core.LatLonPoint a(com.amap.api.services.route.BusStep) -> a
    com.amap.api.services.core.LatLonPoint b(com.amap.api.services.route.BusStep) -> b
com.amap.api.maps.overlay.DrivingRouteOverlay -> com.amap.api.maps.overlay.DrivingRouteOverlay:
    com.amap.api.services.route.DrivePath a -> a
    void addToMap() -> addToMap
    float getBuslineWidth() -> getBuslineWidth
com.amap.api.maps.overlay.PoiOverlay -> com.amap.api.maps.overlay.PoiOverlay:
    java.util.List a -> a
    com.amap.api.maps.AMap b -> b
    java.util.ArrayList c -> c
    void addToMap() -> addToMap
    void removeFromMap() -> removeFromMap
    void zoomToSpan() -> zoomToSpan
    com.amap.api.maps.model.LatLngBounds a() -> a
    com.amap.api.maps.model.MarkerOptions a(int) -> a
    com.amap.api.maps.model.BitmapDescriptor getBitmapDescriptor(int) -> getBitmapDescriptor
    java.lang.String getTitle(int) -> getTitle
    java.lang.String getSnippet(int) -> getSnippet
    int getPoiIndex(com.amap.api.maps.model.Marker) -> getPoiIndex
    com.amap.api.services.core.PoiItem getPoiItem(int) -> getPoiItem
com.amap.api.maps.overlay.RouteOverlay -> com.amap.api.maps.overlay.RouteOverlay:
    java.util.List stationMarkers -> stationMarkers
    java.util.List allPolyLines -> allPolyLines
    com.amap.api.maps.model.Marker startMarker -> startMarker
    com.amap.api.maps.model.Marker endMarker -> endMarker
    com.amap.api.maps.model.LatLng startPoint -> startPoint
    com.amap.api.maps.model.LatLng endPoint -> endPoint
    com.amap.api.maps.AMap mAMap -> mAMap
    android.content.Context a -> a
    android.graphics.Bitmap b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    android.graphics.Bitmap e -> e
    android.graphics.Bitmap f -> f
    android.content.res.AssetManager g -> g
    void removeFromMap() -> removeFromMap
    void a() -> a
    com.amap.api.maps.model.BitmapDescriptor getStartBitmapDescriptor() -> getStartBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getEndBitmapDescriptor() -> getEndBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getBusBitmapDescriptor() -> getBusBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getWalkBitmapDescriptor() -> getWalkBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor getDriveBitmapDescriptor() -> getDriveBitmapDescriptor
    com.amap.api.maps.model.BitmapDescriptor a(android.graphics.Bitmap,java.lang.String) -> a
    void addStartAndEndMarker() -> addStartAndEndMarker
    void zoomToSpan() -> zoomToSpan
    com.amap.api.maps.model.LatLngBounds getLatLngBounds() -> getLatLngBounds
    int getWalkColor() -> getWalkColor
    int getBusColor() -> getBusColor
    int getDriveColor() -> getDriveColor
com.amap.api.maps.overlay.WalkRouteOverlay -> com.amap.api.maps.overlay.WalkRouteOverlay:
    com.amap.api.services.route.WalkPath a -> a
    void addToMap() -> addToMap
    float getBuslineWidth() -> getBuslineWidth
com.amap.api.maps.overlay.a -> com.amap.api.maps.overlay.a:
    int a -> a
    com.amap.api.maps.model.LatLng a(com.amap.api.services.core.LatLonPoint) -> a
    java.util.ArrayList a(java.util.List) -> a
com.amap.api.services.busline.BusLineItem -> com.amap.api.services.busline.BusLineItem:
    float a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.util.Date j -> j
    java.util.Date k -> k
    java.lang.String l -> l
    float m -> m
    float n -> n
    java.util.List o -> o
    android.os.Parcelable$Creator CREATOR -> CREATOR
    float getDistance() -> getDistance
    void setDistance(float) -> setDistance
    java.lang.String getBusLineName() -> getBusLineName
    void setBusLineName(java.lang.String) -> setBusLineName
    java.lang.String getBusLineType() -> getBusLineType
    void setBusLineType(java.lang.String) -> setBusLineType
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.util.List getDirectionsCoordinates() -> getDirectionsCoordinates
    void setDirectionsCoordinates(java.util.List) -> setDirectionsCoordinates
    java.util.List getBounds() -> getBounds
    void setBounds(java.util.List) -> setBounds
    java.lang.String getBusLineId() -> getBusLineId
    void setBusLineId(java.lang.String) -> setBusLineId
    java.lang.String getOriginatingStation() -> getOriginatingStation
    void setOriginatingStation(java.lang.String) -> setOriginatingStation
    java.lang.String getTerminalStation() -> getTerminalStation
    void setTerminalStation(java.lang.String) -> setTerminalStation
    java.util.Date getFirstBusTime() -> getFirstBusTime
    void setFirstBusTime(java.util.Date) -> setFirstBusTime
    java.util.Date getLastBusTime() -> getLastBusTime
    void setLastBusTime(java.util.Date) -> setLastBusTime
    java.lang.String getBusCompany() -> getBusCompany
    void setBusCompany(java.lang.String) -> setBusCompany
    float getBasicPrice() -> getBasicPrice
    void setBasicPrice(float) -> setBasicPrice
    float getTotalPrice() -> getTotalPrice
    void setTotalPrice(float) -> setTotalPrice
    java.util.List getBusStations() -> getBusStations
    void setBusStations(java.util.List) -> setBusStations
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.busline.BusLineQuery -> com.amap.api.services.busline.BusLineQuery:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    com.amap.api.services.busline.BusLineQuery$SearchType e -> e
    boolean a() -> a
    com.amap.api.services.busline.BusLineQuery$SearchType getCategory() -> getCategory
    java.lang.String getQueryString() -> getQueryString
    void setQueryString(java.lang.String) -> setQueryString
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    int getPageSize() -> getPageSize
    void setPageSize(int) -> setPageSize
    int getPageNumber() -> getPageNumber
    void setPageNumber(int) -> setPageNumber
    void setCategory(com.amap.api.services.busline.BusLineQuery$SearchType) -> setCategory
    com.amap.api.services.busline.BusLineQuery clone() -> clone
    boolean weakEquals(com.amap.api.services.busline.BusLineQuery) -> weakEquals
    boolean equals(java.lang.Object) -> equals
    java.lang.Object clone() -> clone
com.amap.api.services.busline.BusLineQuery$SearchType -> com.amap.api.services.busline.BusLineQuery$SearchType:
    com.amap.api.services.busline.BusLineQuery$SearchType BY_LINE_ID -> BY_LINE_ID
    com.amap.api.services.busline.BusLineQuery$SearchType BY_LINE_NAME -> BY_LINE_NAME
    com.amap.api.services.busline.BusLineQuery$SearchType[] a -> a
    com.amap.api.services.busline.BusLineQuery$SearchType[] values() -> values
    com.amap.api.services.busline.BusLineQuery$SearchType valueOf(java.lang.String) -> valueOf
com.amap.api.services.busline.BusLineResult -> com.amap.api.services.busline.BusLineResult:
    int a -> a
    java.util.ArrayList b -> b
    com.amap.api.services.busline.BusLineQuery c -> c
    java.util.List d -> d
    java.util.List e -> e
    com.amap.api.services.busline.BusLineResult a(com.amap.api.services.busline.c,java.util.ArrayList) -> a
    int a(int) -> a
    int getPageCount() -> getPageCount
    com.amap.api.services.busline.BusLineQuery getQuery() -> getQuery
    java.util.List getSearchSuggestionKeywords() -> getSearchSuggestionKeywords
    java.util.List getSearchSuggestionCities() -> getSearchSuggestionCities
    java.util.List getBusLines() -> getBusLines
com.amap.api.services.busline.BusLineSearch -> com.amap.api.services.busline.BusLineSearch:
    android.content.Context b -> b
    com.amap.api.services.busline.BusLineSearch$OnBusLineSearchListener c -> c
    com.amap.api.services.busline.BusLineQuery d -> d
    com.amap.api.services.busline.BusLineQuery e -> e
    int f -> f
    java.util.ArrayList g -> g
    android.os.Handler a -> a
    com.amap.api.services.busline.BusLineResult searchBusLine() -> searchBusLine
    void a(com.amap.api.services.busline.BusLineResult) -> a
    boolean a(int) -> a
    com.amap.api.services.busline.BusLineResult b(int) -> b
    void setOnBusLineSearchListener(com.amap.api.services.busline.BusLineSearch$OnBusLineSearchListener) -> setOnBusLineSearchListener
    void searchBusLineAsyn() -> searchBusLineAsyn
    void setQuery(com.amap.api.services.busline.BusLineQuery) -> setQuery
    com.amap.api.services.busline.BusLineQuery getQuery() -> getQuery
    com.amap.api.services.busline.BusLineSearch$OnBusLineSearchListener a(com.amap.api.services.busline.BusLineSearch) -> a
com.amap.api.services.busline.BusLineSearch$1 -> com.amap.api.services.busline.BusLineSearch$1:
    com.amap.api.services.busline.BusLineSearch a -> a
    void run() -> run
com.amap.api.services.busline.BusLineSearch$OnBusLineSearchListener -> com.amap.api.services.busline.BusLineSearch$OnBusLineSearchListener:
    void onBusLineSearched(com.amap.api.services.busline.BusLineResult,int) -> onBusLineSearched
com.amap.api.services.busline.BusStationItem -> com.amap.api.services.busline.BusStationItem:
    java.lang.String a -> a
    java.lang.String b -> b
    com.amap.api.services.core.LatLonPoint c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.util.List f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getBusStationId() -> getBusStationId
    void setBusStationId(java.lang.String) -> setBusStationId
    java.lang.String getBusStationName() -> getBusStationName
    void setBusStationName(java.lang.String) -> setBusStationName
    com.amap.api.services.core.LatLonPoint getLatLonPoint() -> getLatLonPoint
    void setLatLonPoint(com.amap.api.services.core.LatLonPoint) -> setLatLonPoint
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.lang.String getAdCode() -> getAdCode
    void setAdCode(java.lang.String) -> setAdCode
    java.util.List getBusLineItems() -> getBusLineItems
    void setBusLineItems(java.util.List) -> setBusLineItems
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String a(java.util.List) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.busline.BusStationQuery -> com.amap.api.services.busline.BusStationQuery:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    boolean a() -> a
    java.lang.String getQueryString() -> getQueryString
    java.lang.String getCity() -> getCity
    int getPageSize() -> getPageSize
    int getPageNumber() -> getPageNumber
    void setQueryString(java.lang.String) -> setQueryString
    void setCity(java.lang.String) -> setCity
    void setPageSize(int) -> setPageSize
    void setPageNumber(int) -> setPageNumber
    com.amap.api.services.busline.BusStationQuery clone() -> clone
    boolean equals(java.lang.Object) -> equals
    boolean weakEquals(com.amap.api.services.busline.BusStationQuery) -> weakEquals
    java.lang.Object clone() -> clone
com.amap.api.services.busline.BusStationResult -> com.amap.api.services.busline.BusStationResult:
    int a -> a
    java.util.ArrayList b -> b
    com.amap.api.services.busline.BusStationQuery c -> c
    java.util.List d -> d
    java.util.List e -> e
    com.amap.api.services.busline.BusStationResult a(com.amap.api.services.busline.c,java.util.ArrayList) -> a
    int a(int) -> a
    int getPageCount() -> getPageCount
    com.amap.api.services.busline.BusStationQuery getQuery() -> getQuery
    java.util.List getSearchSuggestionKeywords() -> getSearchSuggestionKeywords
    java.util.List getSearchSuggestionCities() -> getSearchSuggestionCities
    java.util.List getBusStations() -> getBusStations
com.amap.api.services.busline.BusStationSearch -> com.amap.api.services.busline.BusStationSearch:
    android.content.Context b -> b
    com.amap.api.services.busline.BusStationSearch$OnBusStationSearchListener c -> c
    com.amap.api.services.busline.BusStationQuery d -> d
    com.amap.api.services.busline.BusStationQuery e -> e
    java.util.ArrayList f -> f
    int g -> g
    android.os.Handler a -> a
    com.amap.api.services.busline.BusStationResult searchBusStation() -> searchBusStation
    void a(com.amap.api.services.busline.BusStationResult) -> a
    boolean a(int) -> a
    com.amap.api.services.busline.BusStationResult b(int) -> b
    void setOnBusStationSearchListener(com.amap.api.services.busline.BusStationSearch$OnBusStationSearchListener) -> setOnBusStationSearchListener
    void searchBusStationAsyn() -> searchBusStationAsyn
    void setQuery(com.amap.api.services.busline.BusStationQuery) -> setQuery
    com.amap.api.services.busline.BusStationQuery getQuery() -> getQuery
    com.amap.api.services.busline.BusStationSearch$OnBusStationSearchListener a(com.amap.api.services.busline.BusStationSearch) -> a
com.amap.api.services.busline.BusStationSearch$1 -> com.amap.api.services.busline.BusStationSearch$1:
    com.amap.api.services.busline.BusStationSearch a -> a
    void run() -> run
com.amap.api.services.busline.BusStationSearch$OnBusStationSearchListener -> com.amap.api.services.busline.BusStationSearch$OnBusStationSearchListener:
    void onBusStationSearched(com.amap.api.services.busline.BusStationResult,int) -> onBusStationSearched
com.amap.api.services.busline.a -> com.amap.api.services.busline.a:
    com.amap.api.services.busline.BusLineItem a(android.os.Parcel) -> a
    com.amap.api.services.busline.BusLineItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.busline.b -> com.amap.api.services.busline.b:
    com.amap.api.services.busline.BusLineSearch a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.services.busline.c -> com.amap.api.services.busline.c:
    int h -> h
    java.util.List i -> i
    java.util.List j -> j
    java.lang.Object a() -> a
    int b() -> b
    byte[] c() -> c
    java.lang.String d() -> d
    java.util.ArrayList a(java.io.InputStream) -> a
    java.util.ArrayList a(org.json.JSONObject) -> a
    com.amap.api.services.busline.BusLineItem b(org.json.JSONObject) -> b
    com.amap.api.services.busline.BusLineItem c(org.json.JSONObject) -> c
    com.amap.api.services.busline.BusStationItem d(org.json.JSONObject) -> d
    com.amap.api.services.busline.BusStationItem e(org.json.JSONObject) -> e
    java.util.ArrayList f(org.json.JSONObject) -> f
    void g(org.json.JSONObject) -> g
    void h(org.json.JSONObject) -> h
    java.util.List e() -> e
    java.util.List f() -> f
    java.lang.String g() -> g
    java.lang.Object b(java.io.InputStream) -> b
com.amap.api.services.busline.d -> com.amap.api.services.busline.d:
    com.amap.api.services.busline.BusStationItem a(android.os.Parcel) -> a
    com.amap.api.services.busline.BusStationItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.busline.e -> com.amap.api.services.busline.e:
    com.amap.api.services.busline.BusStationSearch a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.services.core.AMapException -> com.amap.api.services.core.AMapException:
    java.lang.String ERROR_IO -> ERROR_IO
    java.lang.String ERROR_SOCKET -> ERROR_SOCKET
    java.lang.String ERROR_SOCKE_TIME_OUT -> ERROR_SOCKE_TIME_OUT
    java.lang.String ERROR_INVALID_PARAMETER -> ERROR_INVALID_PARAMETER
    java.lang.String ERROR_NULL_PARAMETER -> ERROR_NULL_PARAMETER
    java.lang.String ERROR_URL -> ERROR_URL
    java.lang.String ERROR_UNKNOW_HOST -> ERROR_UNKNOW_HOST
    java.lang.String ERROR_UNKNOW_SERVICE -> ERROR_UNKNOW_SERVICE
    java.lang.String ERROR_PROTOCOL -> ERROR_PROTOCOL
    java.lang.String ERROR_CONNECTION -> ERROR_CONNECTION
    java.lang.String ERROR_UNKNOWN -> ERROR_UNKNOWN
    java.lang.String ERROR_FAILURE_AUTH -> ERROR_FAILURE_AUTH
    int ERROR_CODE_IO -> ERROR_CODE_IO
    int ERROR_CODE_SOCKET -> ERROR_CODE_SOCKET
    int ERROR_CODE_SOCKE_TIME_OUT -> ERROR_CODE_SOCKE_TIME_OUT
    int ERROR_CODE_INVALID_PARAMETER -> ERROR_CODE_INVALID_PARAMETER
    int ERROR_CODE_NULL_PARAMETER -> ERROR_CODE_NULL_PARAMETER
    int ERROR_CODE_URL -> ERROR_CODE_URL
    int ERROR_CODE_UNKNOW_HOST -> ERROR_CODE_UNKNOW_HOST
    int ERROR_CODE_UNKNOW_SERVICE -> ERROR_CODE_UNKNOW_SERVICE
    int ERROR_CODE_PROTOCOL -> ERROR_CODE_PROTOCOL
    int ERROR_CODE_CONNECTION -> ERROR_CODE_CONNECTION
    int ERROR_CODE_UNKNOWN -> ERROR_CODE_UNKNOWN
    int ERROR_CODE_FAILURE_AUTH -> ERROR_CODE_FAILURE_AUTH
    java.lang.String a -> a
    int b -> b
    java.lang.String getErrorMessage() -> getErrorMessage
    int getErrorCode() -> getErrorCode
    void a(java.lang.String) -> a
com.amap.api.services.core.LatLonPoint -> com.amap.api.services.core.LatLonPoint:
    double a -> a
    double b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    com.amap.api.services.core.LatLonPoint Copy() -> Copy
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.core.PoiItem -> com.amap.api.services.core.PoiItem:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    com.amap.api.services.core.LatLonPoint mPoint -> mPoint
    java.lang.String mTitle -> mTitle
    java.lang.String mSnippet -> mSnippet
    com.amap.api.services.core.LatLonPoint g -> g
    com.amap.api.services.core.LatLonPoint h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    boolean l -> l
    boolean m -> m
    java.lang.String n -> n
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getTypeDes() -> getTypeDes
    void setTypeDes(java.lang.String) -> setTypeDes
    java.lang.String getTel() -> getTel
    void setTel(java.lang.String) -> setTel
    java.lang.String getAdCode() -> getAdCode
    void setAdCode(java.lang.String) -> setAdCode
    java.lang.String getPoiId() -> getPoiId
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    java.lang.String getTitle() -> getTitle
    java.lang.String getSnippet() -> getSnippet
    com.amap.api.services.core.LatLonPoint getLatLonPoint() -> getLatLonPoint
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    com.amap.api.services.core.LatLonPoint getEnter() -> getEnter
    void setEnter(com.amap.api.services.core.LatLonPoint) -> setEnter
    com.amap.api.services.core.LatLonPoint getExit() -> getExit
    void setExit(com.amap.api.services.core.LatLonPoint) -> setExit
    java.lang.String getWebsite() -> getWebsite
    void setWebsite(java.lang.String) -> setWebsite
    java.lang.String getPostcode() -> getPostcode
    void setPostcode(java.lang.String) -> setPostcode
    java.lang.String getEmail() -> getEmail
    void setEmail(java.lang.String) -> setEmail
    boolean isGroupbuyInfo() -> isGroupbuyInfo
    void setGroupbuyInfo(boolean) -> setGroupbuyInfo
    boolean isDiscountInfo() -> isDiscountInfo
    void setDiscountInfo(boolean) -> setDiscountInfo
    java.lang.String getDirection() -> getDirection
    void setDirection(java.lang.String) -> setDirection
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.amap.api.services.core.SuggestionCity -> com.amap.api.services.core.SuggestionCity:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String getCityName() -> getCityName
    void setCityName(java.lang.String) -> setCityName
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    java.lang.String getAdCode() -> getAdCode
    void setAdCode(java.lang.String) -> setAdCode
    int getSuggestionNum() -> getSuggestionNum
    void setSuggestionNum(int) -> setSuggestionNum
com.amap.api.services.core.a -> com.amap.api.services.core.a:
    char[] a -> a
    java.lang.String a(byte[]) -> a
com.amap.api.services.core.b -> com.amap.api.services.core.b:
    com.amap.api.services.core.b b -> b
    android.content.Context c -> c
    android.telephony.TelephonyManager d -> d
    android.net.ConnectivityManager e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String a -> a
    com.amap.api.services.core.b a(android.content.Context) -> a
    java.lang.String h() -> h
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String b(android.content.Context) -> b
    java.lang.String f() -> f
    java.lang.String g() -> g
com.amap.api.services.core.c -> com.amap.api.services.core.c:
    byte[] a(java.io.InputStream) -> a
    boolean a(java.lang.String) -> a
    double a(int) -> a
    java.net.Proxy a(android.content.Context) -> a
    java.net.Proxy a(android.content.Context,java.net.URI) -> a
    java.net.Proxy b(android.content.Context) -> b
    void b(java.lang.String) -> b
    double a(double) -> a
    java.lang.String a(com.amap.api.services.core.LatLonPoint) -> a
    java.util.Date c(java.lang.String) -> c
    java.lang.String b(java.io.InputStream) -> b
    java.util.Date d(java.lang.String) -> d
    java.lang.String a(java.util.Date) -> a
    java.util.Date e(java.lang.String) -> e
    java.lang.String a(java.util.List) -> a
com.amap.api.services.core.d -> com.amap.api.services.core.d:
    byte[] a -> a
    byte[] a(byte[],byte[]) -> a
    byte[] a(byte[],java.security.Key) -> a
    java.lang.String a() -> a
    java.security.PublicKey a(android.content.Context) -> a
    byte[] a(byte[]) -> a
    java.lang.String b(byte[]) -> b
com.amap.api.services.core.e -> com.amap.api.services.core.e:
    java.net.HttpURLConnection a(java.lang.String,java.net.Proxy) -> a
    java.net.HttpURLConnection a(java.lang.String,byte[],java.net.Proxy) -> a
com.amap.api.services.core.f -> com.amap.api.services.core.f:
    com.amap.api.services.core.LatLonPoint a(android.os.Parcel) -> a
    com.amap.api.services.core.LatLonPoint[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.core.g -> com.amap.api.services.core.g:
    com.amap.api.services.core.PoiItem a(android.os.Parcel) -> a
    com.amap.api.services.core.PoiItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.core.h -> com.amap.api.services.core.h:
    java.net.Proxy a -> a
    java.lang.Object b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    java.lang.String g -> g
    void a(java.lang.Object,java.net.Proxy) -> a
    byte[] c() -> c
    java.lang.Object b(java.io.InputStream) -> b
    java.lang.String d() -> d
    byte[] h() -> h
    java.lang.Object i() -> i
    java.lang.Object a() -> a
    java.io.InputStream a(java.net.HttpURLConnection) -> a
    java.lang.Object a(java.io.InputStream) -> a
    java.lang.Object j() -> j
    java.lang.String a(org.json.JSONObject,java.lang.String) -> a
    com.amap.api.services.core.LatLonPoint b(org.json.JSONObject,java.lang.String) -> b
    java.util.ArrayList c(org.json.JSONObject,java.lang.String) -> c
    java.util.ArrayList a(java.lang.String) -> a
    com.amap.api.services.core.LatLonPoint b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    int f(java.lang.String) -> f
    float g(java.lang.String) -> g
    long h(java.lang.String) -> h
    boolean i(java.lang.String) -> i
com.amap.api.services.geocoder.GeocodeAddress -> com.amap.api.services.geocoder.GeocodeAddress:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    com.amap.api.services.core.LatLonPoint i -> i
    java.lang.String j -> j
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getFormatAddress() -> getFormatAddress
    void setFormatAddress(java.lang.String) -> setFormatAddress
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getDistrict() -> getDistrict
    void setDistrict(java.lang.String) -> setDistrict
    java.lang.String getTownship() -> getTownship
    void setTownship(java.lang.String) -> setTownship
    java.lang.String getNeighborhood() -> getNeighborhood
    void setNeighborhood(java.lang.String) -> setNeighborhood
    java.lang.String getBuilding() -> getBuilding
    void setBuilding(java.lang.String) -> setBuilding
    java.lang.String getAdcode() -> getAdcode
    void setAdcode(java.lang.String) -> setAdcode
    com.amap.api.services.core.LatLonPoint getLatLonPoint() -> getLatLonPoint
    void setLatLonPoint(com.amap.api.services.core.LatLonPoint) -> setLatLonPoint
    java.lang.String getLevel() -> getLevel
    void setLevel(java.lang.String) -> setLevel
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.geocoder.GeocodeQuery -> com.amap.api.services.geocoder.GeocodeQuery:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String getLocationName() -> getLocationName
    void setLocationName(java.lang.String) -> setLocationName
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    boolean equals(java.lang.Object) -> equals
com.amap.api.services.geocoder.GeocodeResult -> com.amap.api.services.geocoder.GeocodeResult:
    com.amap.api.services.geocoder.GeocodeQuery a -> a
    java.util.List b -> b
    com.amap.api.services.geocoder.GeocodeQuery getGeocodeQuery() -> getGeocodeQuery
    void setGeocodeQuery(com.amap.api.services.geocoder.GeocodeQuery) -> setGeocodeQuery
    java.util.List getGeocodeAddressList() -> getGeocodeAddressList
    void setGeocodeAddressList(java.util.List) -> setGeocodeAddressList
com.amap.api.services.geocoder.GeocodeSearch -> com.amap.api.services.geocoder.GeocodeSearch:
    java.lang.String GPS -> GPS
    java.lang.String AMAP -> AMAP
    android.content.Context b -> b
    com.amap.api.services.geocoder.GeocodeSearch$OnGeocodeSearchListener c -> c
    android.os.Handler a -> a
    com.amap.api.services.geocoder.RegeocodeAddress getFromLocation(com.amap.api.services.geocoder.RegeocodeQuery) -> getFromLocation
    java.util.List getFromLocationName(com.amap.api.services.geocoder.GeocodeQuery) -> getFromLocationName
    void setOnGeocodeSearchListener(com.amap.api.services.geocoder.GeocodeSearch$OnGeocodeSearchListener) -> setOnGeocodeSearchListener
    void getFromLocationAsyn(com.amap.api.services.geocoder.RegeocodeQuery) -> getFromLocationAsyn
    void getFromLocationNameAsyn(com.amap.api.services.geocoder.GeocodeQuery) -> getFromLocationNameAsyn
    com.amap.api.services.geocoder.GeocodeSearch$OnGeocodeSearchListener a(com.amap.api.services.geocoder.GeocodeSearch) -> a
com.amap.api.services.geocoder.GeocodeSearch$1 -> com.amap.api.services.geocoder.GeocodeSearch$1:
    com.amap.api.services.geocoder.RegeocodeQuery a -> a
    com.amap.api.services.geocoder.GeocodeSearch b -> b
    void run() -> run
com.amap.api.services.geocoder.GeocodeSearch$2 -> com.amap.api.services.geocoder.GeocodeSearch$2:
    com.amap.api.services.geocoder.GeocodeQuery a -> a
    com.amap.api.services.geocoder.GeocodeSearch b -> b
    void run() -> run
com.amap.api.services.geocoder.GeocodeSearch$OnGeocodeSearchListener -> com.amap.api.services.geocoder.GeocodeSearch$OnGeocodeSearchListener:
    void onRegeocodeSearched(com.amap.api.services.geocoder.RegeocodeResult,int) -> onRegeocodeSearched
    void onGeocodeSearched(com.amap.api.services.geocoder.GeocodeResult,int) -> onGeocodeSearched
com.amap.api.services.geocoder.RegeocodeAddress -> com.amap.api.services.geocoder.RegeocodeAddress:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.amap.api.services.geocoder.StreetNumber h -> h
    java.util.List i -> i
    java.util.List j -> j
    java.util.List k -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getFormatAddress() -> getFormatAddress
    void setFormatAddress(java.lang.String) -> setFormatAddress
    java.lang.String getProvince() -> getProvince
    void setProvince(java.lang.String) -> setProvince
    java.lang.String getCity() -> getCity
    void setCity(java.lang.String) -> setCity
    java.lang.String getDistrict() -> getDistrict
    void setDistrict(java.lang.String) -> setDistrict
    java.lang.String getTownship() -> getTownship
    void setTownship(java.lang.String) -> setTownship
    java.lang.String getNeighborhood() -> getNeighborhood
    void setNeighborhood(java.lang.String) -> setNeighborhood
    java.lang.String getBuilding() -> getBuilding
    void setBuilding(java.lang.String) -> setBuilding
    com.amap.api.services.geocoder.StreetNumber getStreetNumber() -> getStreetNumber
    void setStreetNumber(com.amap.api.services.geocoder.StreetNumber) -> setStreetNumber
    java.util.List getRoads() -> getRoads
    void setRoads(java.util.List) -> setRoads
    java.util.List getPois() -> getPois
    void setPois(java.util.List) -> setPois
    java.util.List getCrossroads() -> getCrossroads
    void setCrossroads(java.util.List) -> setCrossroads
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.geocoder.RegeocodeQuery -> com.amap.api.services.geocoder.RegeocodeQuery:
    com.amap.api.services.core.LatLonPoint a -> a
    float b -> b
    java.lang.String c -> c
    com.amap.api.services.core.LatLonPoint getPoint() -> getPoint
    void setPoint(com.amap.api.services.core.LatLonPoint) -> setPoint
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    java.lang.String getLatLonType() -> getLatLonType
    void setLatLonType(java.lang.String) -> setLatLonType
    boolean equals(java.lang.Object) -> equals
com.amap.api.services.geocoder.RegeocodeResult -> com.amap.api.services.geocoder.RegeocodeResult:
    com.amap.api.services.geocoder.RegeocodeQuery a -> a
    com.amap.api.services.geocoder.RegeocodeAddress b -> b
    com.amap.api.services.geocoder.RegeocodeQuery getRegeocodeQuery() -> getRegeocodeQuery
    void setRegeocodeQuery(com.amap.api.services.geocoder.RegeocodeQuery) -> setRegeocodeQuery
    com.amap.api.services.geocoder.RegeocodeAddress getRegeocodeAddress() -> getRegeocodeAddress
    void setRegeocodeAddress(com.amap.api.services.geocoder.RegeocodeAddress) -> setRegeocodeAddress
com.amap.api.services.geocoder.RegeocodeRoad -> com.amap.api.services.geocoder.RegeocodeRoad:
    java.lang.String a -> a
    java.lang.String b -> b
    float c -> c
    java.lang.String d -> d
    com.amap.api.services.core.LatLonPoint e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    float getDistance() -> getDistance
    void setDistance(float) -> setDistance
    java.lang.String getDirection() -> getDirection
    void setDirection(java.lang.String) -> setDirection
    com.amap.api.services.core.LatLonPoint getLatLngPoint() -> getLatLngPoint
    void setLatLngPoint(com.amap.api.services.core.LatLonPoint) -> setLatLngPoint
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.geocoder.StreetNumber -> com.amap.api.services.geocoder.StreetNumber:
    java.lang.String a -> a
    java.lang.String b -> b
    com.amap.api.services.core.LatLonPoint c -> c
    java.lang.String d -> d
    float e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getStreet() -> getStreet
    void setStreet(java.lang.String) -> setStreet
    java.lang.String getNumber() -> getNumber
    void setNumber(java.lang.String) -> setNumber
    com.amap.api.services.core.LatLonPoint getLatLonPoint() -> getLatLonPoint
    void setLatLonPoint(com.amap.api.services.core.LatLonPoint) -> setLatLonPoint
    java.lang.String getDirection() -> getDirection
    void setDirection(java.lang.String) -> setDirection
    float getDistance() -> getDistance
    void setDistance(float) -> setDistance
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.geocoder.a -> com.amap.api.services.geocoder.a:
    com.amap.api.services.geocoder.GeocodeAddress[] a(int) -> a
    com.amap.api.services.geocoder.GeocodeAddress a(android.os.Parcel) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.geocoder.b -> com.amap.api.services.geocoder.b:
    com.amap.api.services.geocoder.GeocodeSearch a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.services.geocoder.c -> com.amap.api.services.geocoder.c:
    int h -> h
    java.util.ArrayList a(java.io.InputStream) -> a
    java.lang.String d() -> d
    byte[] c() -> c
    java.lang.String a() -> a
    java.lang.Object b(java.io.InputStream) -> b
com.amap.api.services.geocoder.d -> com.amap.api.services.geocoder.d:
    com.amap.api.services.geocoder.RegeocodeAddress a(android.os.Parcel) -> a
    com.amap.api.services.geocoder.RegeocodeAddress[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.geocoder.e -> com.amap.api.services.geocoder.e:
    com.amap.api.services.geocoder.RegeocodeRoad a(android.os.Parcel) -> a
    com.amap.api.services.geocoder.RegeocodeRoad[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.geocoder.f -> com.amap.api.services.geocoder.f:
    java.lang.String d() -> d
    com.amap.api.services.geocoder.RegeocodeAddress a(java.io.InputStream) -> a
    void a(org.json.JSONArray,com.amap.api.services.geocoder.RegeocodeAddress) -> a
    void b(org.json.JSONArray,com.amap.api.services.geocoder.RegeocodeAddress) -> b
    void c(org.json.JSONArray,com.amap.api.services.geocoder.RegeocodeAddress) -> c
    void a(org.json.JSONObject,com.amap.api.services.geocoder.RegeocodeAddress) -> a
    byte[] c() -> c
    java.lang.String a() -> a
    java.lang.Object b(java.io.InputStream) -> b
com.amap.api.services.geocoder.g -> com.amap.api.services.geocoder.g:
    com.amap.api.services.geocoder.StreetNumber a(android.os.Parcel) -> a
    com.amap.api.services.geocoder.StreetNumber[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.help.Inputtips -> com.amap.api.services.help.Inputtips:
    android.content.Context b -> b
    com.amap.api.services.help.Inputtips$InputtipsListener c -> c
    android.os.Handler a -> a
    void requestInputtips(java.lang.String,java.lang.String) -> requestInputtips
    android.content.Context a(com.amap.api.services.help.Inputtips) -> a
    com.amap.api.services.help.Inputtips$InputtipsListener b(com.amap.api.services.help.Inputtips) -> b
com.amap.api.services.help.Inputtips$1 -> com.amap.api.services.help.Inputtips$1:
    java.lang.String a -> a
    java.lang.String b -> b
    com.amap.api.services.help.Inputtips c -> c
    void run() -> run
com.amap.api.services.help.Inputtips$InputtipsListener -> com.amap.api.services.help.Inputtips$InputtipsListener:
    void onGetInputtips(java.util.List,int) -> onGetInputtips
com.amap.api.services.help.Tip -> com.amap.api.services.help.Tip:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getDistrict() -> getDistrict
    void setDistrict(java.lang.String) -> setDistrict
    java.lang.String getAdcode() -> getAdcode
    void setAdcode(java.lang.String) -> setAdcode
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.help.a -> com.amap.api.services.help.a:
    com.amap.api.services.help.Inputtips a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.services.help.b -> com.amap.api.services.help.b:
    byte[] c() -> c
    java.util.ArrayList a(java.io.InputStream) -> a
    java.lang.String d() -> d
    java.lang.String a() -> a
    java.lang.Object b(java.io.InputStream) -> b
com.amap.api.services.help.c -> com.amap.api.services.help.c:
    java.lang.String a -> a
    java.lang.String b -> b
com.amap.api.services.help.d -> com.amap.api.services.help.d:
    com.amap.api.services.help.Tip a(android.os.Parcel) -> a
    com.amap.api.services.help.Tip[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.poisearch.Cinema -> com.amap.api.services.poisearch.Cinema:
    boolean a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.util.List h -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean isSeatOrdering() -> isSeatOrdering
    void a(boolean) -> a
    java.lang.String getIntro() -> getIntro
    void a(java.lang.String) -> a
    java.lang.String getRating() -> getRating
    void b(java.lang.String) -> b
    java.lang.String getDeepsrc() -> getDeepsrc
    void c(java.lang.String) -> c
    java.lang.String getParking() -> getParking
    void d(java.lang.String) -> d
    java.lang.String getOpentimeGDF() -> getOpentimeGDF
    void e(java.lang.String) -> e
    java.lang.String getOpentime() -> getOpentime
    void f(java.lang.String) -> f
    java.util.List getPhotos() -> getPhotos
    void a(java.util.List) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.poisearch.Dining -> com.amap.api.services.poisearch.Dining:
    boolean a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.util.List t -> t
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean isMealOrdering() -> isMealOrdering
    void a(boolean) -> a
    java.lang.String getCuisines() -> getCuisines
    void a(java.lang.String) -> a
    java.lang.String getTag() -> getTag
    void b(java.lang.String) -> b
    java.lang.String getIntro() -> getIntro
    void c(java.lang.String) -> c
    java.lang.String getRating() -> getRating
    void d(java.lang.String) -> d
    java.lang.String getCpRating() -> getCpRating
    void e(java.lang.String) -> e
    java.lang.String getDeepsrc() -> getDeepsrc
    void f(java.lang.String) -> f
    java.lang.String getTasteRating() -> getTasteRating
    void g(java.lang.String) -> g
    java.lang.String getEnvironmentRating() -> getEnvironmentRating
    void h(java.lang.String) -> h
    java.lang.String getServiceRating() -> getServiceRating
    void i(java.lang.String) -> i
    java.lang.String getCost() -> getCost
    void j(java.lang.String) -> j
    java.lang.String getRecommend() -> getRecommend
    void k(java.lang.String) -> k
    java.lang.String getAtmosphere() -> getAtmosphere
    void l(java.lang.String) -> l
    java.lang.String getOrderingWapUrl() -> getOrderingWapUrl
    void m(java.lang.String) -> m
    java.lang.String getOrderingWebUrl() -> getOrderingWebUrl
    void n(java.lang.String) -> n
    java.lang.String getOrderinAppUrl() -> getOrderinAppUrl
    void o(java.lang.String) -> o
    java.lang.String getOpentimeGDF() -> getOpentimeGDF
    void p(java.lang.String) -> p
    java.lang.String getOpentime() -> getOpentime
    void q(java.lang.String) -> q
    java.lang.String getAddition() -> getAddition
    void r(java.lang.String) -> r
    java.util.List getPhotos() -> getPhotos
    void a(java.util.List) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.poisearch.Discount -> com.amap.api.services.poisearch.Discount:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.Date c -> c
    java.util.Date d -> d
    int e -> e
    java.util.List f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getDetail() -> getDetail
    void setDetail(java.lang.String) -> setDetail
    java.util.Date getStartTime() -> getStartTime
    void setStartTime(java.util.Date) -> setStartTime
    java.util.Date getEndTime() -> getEndTime
    void setEndTime(java.util.Date) -> setEndTime
    int getSoldCount() -> getSoldCount
    void setSoldCount(int) -> setSoldCount
    java.util.List getPhotos() -> getPhotos
    void addPhotos(com.amap.api.services.poisearch.Photo) -> addPhotos
    void initPhotos(java.util.List) -> initPhotos
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getProvider() -> getProvider
    void setProvider(java.lang.String) -> setProvider
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.poisearch.Groupbuy -> com.amap.api.services.poisearch.Groupbuy:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.Date d -> d
    java.util.Date e -> e
    int f -> f
    int g -> g
    float h -> h
    float i -> i
    float j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.util.List m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getTypeCode() -> getTypeCode
    void setTypeCode(java.lang.String) -> setTypeCode
    java.lang.String getTypeDes() -> getTypeDes
    void setTypeDes(java.lang.String) -> setTypeDes
    java.lang.String getDetail() -> getDetail
    void setDetail(java.lang.String) -> setDetail
    java.util.Date getStartTime() -> getStartTime
    void setStartTime(java.util.Date) -> setStartTime
    java.util.Date getEndTime() -> getEndTime
    void setEndTime(java.util.Date) -> setEndTime
    int getCount() -> getCount
    void setCount(int) -> setCount
    int getSoldCount() -> getSoldCount
    void setSoldCount(int) -> setSoldCount
    float getOriginalPrice() -> getOriginalPrice
    void setOriginalPrice(float) -> setOriginalPrice
    float getGroupbuyPrice() -> getGroupbuyPrice
    void setGroupbuyPrice(float) -> setGroupbuyPrice
    float getDiscount() -> getDiscount
    void setDiscount(float) -> setDiscount
    java.lang.String getTicketAddress() -> getTicketAddress
    void setTicketAddress(java.lang.String) -> setTicketAddress
    java.lang.String getTicketTel() -> getTicketTel
    void setTicketTel(java.lang.String) -> setTicketTel
    java.util.List getPhotos() -> getPhotos
    void addPhotos(com.amap.api.services.poisearch.Photo) -> addPhotos
    void initPhotos(java.util.List) -> initPhotos
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getProvider() -> getProvider
    void setProvider(java.lang.String) -> setProvider
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.poisearch.Hotel -> com.amap.api.services.poisearch.Hotel:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.util.List l -> l
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getRating() -> getRating
    void a(java.lang.String) -> a
    java.lang.String getStar() -> getStar
    void b(java.lang.String) -> b
    java.lang.String getIntro() -> getIntro
    void c(java.lang.String) -> c
    java.lang.String getLowestPrice() -> getLowestPrice
    void d(java.lang.String) -> d
    java.lang.String getFaciRating() -> getFaciRating
    void e(java.lang.String) -> e
    java.lang.String getHealthRating() -> getHealthRating
    void f(java.lang.String) -> f
    java.lang.String getEnvironmentRating() -> getEnvironmentRating
    void g(java.lang.String) -> g
    java.lang.String getServiceRating() -> getServiceRating
    void h(java.lang.String) -> h
    java.lang.String getTraffic() -> getTraffic
    void i(java.lang.String) -> i
    java.lang.String getAddition() -> getAddition
    void j(java.lang.String) -> j
    java.lang.String getDeepsrc() -> getDeepsrc
    void k(java.lang.String) -> k
    java.util.List getPhotos() -> getPhotos
    void a(java.util.List) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.poisearch.Photo -> com.amap.api.services.poisearch.Photo:
    java.lang.String a -> a
    java.lang.String b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.poisearch.PoiItemDetail -> com.amap.api.services.poisearch.PoiItemDetail:
    java.util.List f -> f
    java.util.List g -> g
    com.amap.api.services.poisearch.Dining a -> a
    com.amap.api.services.poisearch.Hotel b -> b
    com.amap.api.services.poisearch.Cinema c -> c
    com.amap.api.services.poisearch.Scenic d -> d
    com.amap.api.services.poisearch.PoiItemDetail$DeepType e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getGroupbuys() -> getGroupbuys
    void initGroupbuys(java.util.List) -> initGroupbuys
    void addGroupbuy(com.amap.api.services.poisearch.Groupbuy) -> addGroupbuy
    java.util.List getDiscounts() -> getDiscounts
    void initDiscounts(java.util.List) -> initDiscounts
    void addDiscount(com.amap.api.services.poisearch.Discount) -> addDiscount
    com.amap.api.services.poisearch.PoiItemDetail$DeepType getDeepType() -> getDeepType
    com.amap.api.services.poisearch.Dining getDining() -> getDining
    com.amap.api.services.poisearch.Hotel getHotel() -> getHotel
    com.amap.api.services.poisearch.Cinema getCinema() -> getCinema
    com.amap.api.services.poisearch.Scenic getScenic() -> getScenic
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.poisearch.PoiItemDetail$DeepType -> com.amap.api.services.poisearch.PoiItemDetail$DeepType:
    com.amap.api.services.poisearch.PoiItemDetail$DeepType UNKNOWN -> UNKNOWN
    com.amap.api.services.poisearch.PoiItemDetail$DeepType DINING -> DINING
    com.amap.api.services.poisearch.PoiItemDetail$DeepType HOTEL -> HOTEL
    com.amap.api.services.poisearch.PoiItemDetail$DeepType CINEMA -> CINEMA
    com.amap.api.services.poisearch.PoiItemDetail$DeepType SCENIC -> SCENIC
    com.amap.api.services.poisearch.PoiItemDetail$DeepType[] a -> a
    com.amap.api.services.poisearch.PoiItemDetail$DeepType[] values() -> values
    com.amap.api.services.poisearch.PoiItemDetail$DeepType valueOf(java.lang.String) -> valueOf
com.amap.api.services.poisearch.PoiResult -> com.amap.api.services.poisearch.PoiResult:
    int a -> a
    java.util.ArrayList b -> b
    com.amap.api.services.poisearch.k c -> c
    com.amap.api.services.poisearch.PoiResult a(com.amap.api.services.poisearch.k,java.util.ArrayList) -> a
    int getPageCount() -> getPageCount
    com.amap.api.services.poisearch.PoiSearch$Query getQuery() -> getQuery
    com.amap.api.services.poisearch.PoiSearch$SearchBound getBound() -> getBound
    java.util.ArrayList getPois() -> getPois
    java.util.List getSearchSuggestionKeywords() -> getSearchSuggestionKeywords
    java.util.List getSearchSuggestionCitys() -> getSearchSuggestionCitys
    int a(int) -> a
com.amap.api.services.poisearch.PoiSearch -> com.amap.api.services.poisearch.PoiSearch:
    com.amap.api.services.poisearch.PoiSearch$SearchBound b -> b
    com.amap.api.services.poisearch.PoiSearch$Query c -> c
    android.content.Context d -> d
    com.amap.api.services.poisearch.PoiSearch$OnPoiSearchListener e -> e
    com.amap.api.services.poisearch.PoiSearch$Query f -> f
    com.amap.api.services.poisearch.PoiSearch$SearchBound g -> g
    int h -> h
    java.util.ArrayList i -> i
    android.os.Handler a -> a
    void setOnPoiSearchListener(com.amap.api.services.poisearch.PoiSearch$OnPoiSearchListener) -> setOnPoiSearchListener
    boolean a() -> a
    com.amap.api.services.poisearch.PoiResult searchPOI() -> searchPOI
    void searchPOIAsyn() -> searchPOIAsyn
    com.amap.api.services.poisearch.PoiItemDetail searchPOIDetail(java.lang.String) -> searchPOIDetail
    void searchPOIDetailAsyn(java.lang.String) -> searchPOIDetailAsyn
    void setQuery(com.amap.api.services.poisearch.PoiSearch$Query) -> setQuery
    void setBound(com.amap.api.services.poisearch.PoiSearch$SearchBound) -> setBound
    com.amap.api.services.poisearch.PoiSearch$Query getQuery() -> getQuery
    com.amap.api.services.poisearch.PoiSearch$SearchBound getBound() -> getBound
    boolean b(java.lang.String,java.lang.String) -> b
    void a(com.amap.api.services.poisearch.PoiResult) -> a
    com.amap.api.services.poisearch.PoiResult getPageLocal(int) -> getPageLocal
    boolean a(int) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    com.amap.api.services.poisearch.PoiSearch$OnPoiSearchListener a(com.amap.api.services.poisearch.PoiSearch) -> a
com.amap.api.services.poisearch.PoiSearch$1 -> com.amap.api.services.poisearch.PoiSearch$1:
    com.amap.api.services.poisearch.PoiSearch a -> a
    void run() -> run
com.amap.api.services.poisearch.PoiSearch$2 -> com.amap.api.services.poisearch.PoiSearch$2:
    java.lang.String a -> a
    com.amap.api.services.poisearch.PoiSearch b -> b
    void run() -> run
com.amap.api.services.poisearch.PoiSearch$OnPoiSearchListener -> com.amap.api.services.poisearch.PoiSearch$OnPoiSearchListener:
    void onPoiSearched(com.amap.api.services.poisearch.PoiResult,int) -> onPoiSearched
    void onPoiItemDetailSearched(com.amap.api.services.poisearch.PoiItemDetail,int) -> onPoiItemDetailSearched
com.amap.api.services.poisearch.PoiSearch$Query -> com.amap.api.services.poisearch.PoiSearch$Query:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    boolean f -> f
    boolean g -> g
    java.lang.String getQueryString() -> getQueryString
    void setLimitGroupbuy(boolean) -> setLimitGroupbuy
    boolean hasGroupBuyLimit() -> hasGroupBuyLimit
    void setLimitDiscount(boolean) -> setLimitDiscount
    boolean hasDiscountLimit() -> hasDiscountLimit
    java.lang.String getCategory() -> getCategory
    java.lang.String a() -> a
    java.lang.String getCity() -> getCity
    int getPageNum() -> getPageNum
    void setPageNum(int) -> setPageNum
    void setPageSize(int) -> setPageSize
    int getPageSize() -> getPageSize
    boolean queryEquals(com.amap.api.services.poisearch.PoiSearch$Query) -> queryEquals
    boolean equals(java.lang.Object) -> equals
    com.amap.api.services.poisearch.PoiSearch$Query clone() -> clone
    java.lang.Object clone() -> clone
    java.lang.String a(com.amap.api.services.poisearch.PoiSearch$Query) -> a
    java.lang.String b(com.amap.api.services.poisearch.PoiSearch$Query) -> b
    int c(com.amap.api.services.poisearch.PoiSearch$Query) -> c
    int d(com.amap.api.services.poisearch.PoiSearch$Query) -> d
com.amap.api.services.poisearch.PoiSearch$SearchBound -> com.amap.api.services.poisearch.PoiSearch$SearchBound:
    com.amap.api.services.core.LatLonPoint a -> a
    com.amap.api.services.core.LatLonPoint b -> b
    int c -> c
    com.amap.api.services.core.LatLonPoint d -> d
    java.lang.String e -> e
    boolean f -> f
    java.util.List g -> g
    java.lang.String BOUND_SHAPE -> BOUND_SHAPE
    java.lang.String POLYGON_SHAPE -> POLYGON_SHAPE
    java.lang.String RECTANGLE_SHAPE -> RECTANGLE_SHAPE
    java.lang.String ELLIPSE_SHAPE -> ELLIPSE_SHAPE
    void a(com.amap.api.services.core.LatLonPoint,com.amap.api.services.core.LatLonPoint) -> a
    void a(com.amap.api.services.core.LatLonPoint,double,double) -> a
    com.amap.api.services.core.LatLonPoint getLowerLeft() -> getLowerLeft
    com.amap.api.services.core.LatLonPoint getUpperRight() -> getUpperRight
    com.amap.api.services.core.LatLonPoint getCenter() -> getCenter
    double getLonSpanInMeter() -> getLonSpanInMeter
    double getLatSpanInMeter() -> getLatSpanInMeter
    int getRange() -> getRange
    java.lang.String getShape() -> getShape
    boolean isDistanceSort() -> isDistanceSort
    java.util.List getPolyGonList() -> getPolyGonList
    boolean equals(java.lang.Object) -> equals
    com.amap.api.services.poisearch.PoiSearch$SearchBound clone() -> clone
    java.lang.Object clone() -> clone
com.amap.api.services.poisearch.Scenic -> com.amap.api.services.poisearch.Scenic:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.util.List m -> m
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getIntro() -> getIntro
    void a(java.lang.String) -> a
    java.lang.String getRating() -> getRating
    void b(java.lang.String) -> b
    java.lang.String getDeepsrc() -> getDeepsrc
    void c(java.lang.String) -> c
    java.lang.String getLevel() -> getLevel
    void d(java.lang.String) -> d
    java.lang.String getPrice() -> getPrice
    void e(java.lang.String) -> e
    java.lang.String getSeason() -> getSeason
    void f(java.lang.String) -> f
    java.lang.String getRecommend() -> getRecommend
    void g(java.lang.String) -> g
    java.lang.String getTheme() -> getTheme
    void h(java.lang.String) -> h
    java.lang.String getOrderWapUrl() -> getOrderWapUrl
    void i(java.lang.String) -> i
    java.lang.String getOrderWebUrl() -> getOrderWebUrl
    void j(java.lang.String) -> j
    java.lang.String getOpentimeGDF() -> getOpentimeGDF
    void k(java.lang.String) -> k
    java.lang.String getOpentime() -> getOpentime
    void l(java.lang.String) -> l
    java.util.List getPhotos() -> getPhotos
    void a(java.util.List) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.poisearch.a -> com.amap.api.services.poisearch.a:
    com.amap.api.services.poisearch.Cinema a(android.os.Parcel) -> a
    com.amap.api.services.poisearch.Cinema[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.poisearch.b -> com.amap.api.services.poisearch.b:
    com.amap.api.services.poisearch.Dining a(android.os.Parcel) -> a
    com.amap.api.services.poisearch.Dining[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.poisearch.c -> com.amap.api.services.poisearch.c:
    com.amap.api.services.poisearch.Discount a(android.os.Parcel) -> a
    com.amap.api.services.poisearch.Discount[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.poisearch.d -> com.amap.api.services.poisearch.d:
    com.amap.api.services.poisearch.Groupbuy a(android.os.Parcel) -> a
    com.amap.api.services.poisearch.Groupbuy[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.poisearch.e -> com.amap.api.services.poisearch.e:
    com.amap.api.services.poisearch.Hotel a(android.os.Parcel) -> a
    com.amap.api.services.poisearch.Hotel[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.poisearch.f -> com.amap.api.services.poisearch.f:
    com.amap.api.services.poisearch.Photo a(android.os.Parcel) -> a
    com.amap.api.services.poisearch.Photo[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.poisearch.g -> com.amap.api.services.poisearch.g:
    java.lang.String a(java.io.InputStream) -> a
    com.amap.api.services.poisearch.PoiItemDetail a(org.json.JSONObject) -> a
    boolean e(java.lang.String) -> e
com.amap.api.services.poisearch.h -> com.amap.api.services.poisearch.h:
    com.amap.api.services.poisearch.PoiItemDetail a(android.os.Parcel) -> a
    com.amap.api.services.poisearch.PoiItemDetail[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.poisearch.i -> com.amap.api.services.poisearch.i:
    com.amap.api.services.poisearch.PoiSearch a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.services.poisearch.j -> com.amap.api.services.poisearch.j:
    java.lang.String d() -> d
    com.amap.api.services.poisearch.PoiItemDetail c(java.io.InputStream) -> c
    com.amap.api.services.poisearch.PoiItemDetail b(org.json.JSONObject) -> b
    void a(com.amap.api.services.poisearch.PoiItemDetail,org.json.JSONObject,org.json.JSONObject) -> a
    void b(com.amap.api.services.poisearch.PoiItemDetail,org.json.JSONObject,org.json.JSONObject) -> b
    void c(com.amap.api.services.poisearch.PoiItemDetail,org.json.JSONObject,org.json.JSONObject) -> c
    void d(com.amap.api.services.poisearch.PoiItemDetail,org.json.JSONObject,org.json.JSONObject) -> d
    void e(com.amap.api.services.poisearch.PoiItemDetail,org.json.JSONObject,org.json.JSONObject) -> e
    boolean d(org.json.JSONObject,java.lang.String) -> d
    boolean j(java.lang.String) -> j
    boolean c(org.json.JSONObject) -> c
    void a(com.amap.api.services.poisearch.PoiItemDetail,org.json.JSONObject) -> a
    void b(com.amap.api.services.poisearch.PoiItemDetail,org.json.JSONObject) -> b
    void a(com.amap.api.services.poisearch.Groupbuy,org.json.JSONObject) -> a
    void c(com.amap.api.services.poisearch.PoiItemDetail,org.json.JSONObject) -> c
    void a(com.amap.api.services.poisearch.Discount,org.json.JSONObject) -> a
    java.util.List d(org.json.JSONObject) -> d
    byte[] c() -> c
    java.lang.String a() -> a
    java.lang.Object b(java.io.InputStream) -> b
com.amap.api.services.poisearch.k -> com.amap.api.services.poisearch.k:
    int h -> h
    int i -> i
    int j -> j
    java.util.List k -> k
    java.util.List l -> l
    void a(int) -> a
    void b(int) -> b
    int a() -> a
    int b() -> b
    com.amap.api.services.poisearch.PoiSearch$Query e() -> e
    com.amap.api.services.poisearch.PoiSearch$SearchBound f() -> f
    java.util.List g() -> g
    java.util.List k() -> k
    java.lang.String d() -> d
    java.util.ArrayList c(java.io.InputStream) -> c
    java.util.ArrayList b(org.json.JSONObject) -> b
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    byte[] c() -> c
    java.lang.String l() -> l
    java.lang.String m() -> m
    java.lang.String n() -> n
    java.lang.Object b(java.io.InputStream) -> b
com.amap.api.services.poisearch.l -> com.amap.api.services.poisearch.l:
    com.amap.api.services.poisearch.PoiSearch$Query a -> a
    com.amap.api.services.poisearch.PoiSearch$SearchBound b -> b
com.amap.api.services.poisearch.m -> com.amap.api.services.poisearch.m:
    com.amap.api.services.poisearch.Scenic a(android.os.Parcel) -> a
    com.amap.api.services.poisearch.Scenic[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.road.Crossroad -> com.amap.api.services.road.Crossroad:
    float a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    float getDistance() -> getDistance
    void setDistance(float) -> setDistance
    java.lang.String getDirection() -> getDirection
    void setDirection(java.lang.String) -> setDirection
    java.lang.String getFirstRoadId() -> getFirstRoadId
    void setFirstRoadId(java.lang.String) -> setFirstRoadId
    java.lang.String getFirstRoadName() -> getFirstRoadName
    void setFirstRoadName(java.lang.String) -> setFirstRoadName
    java.lang.String getSecondRoadId() -> getSecondRoadId
    void setSecondRoadId(java.lang.String) -> setSecondRoadId
    java.lang.String getSecondRoadName() -> getSecondRoadName
    void setSecondRoadName(java.lang.String) -> setSecondRoadName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.road.Road -> com.amap.api.services.road.Road:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    float d -> d
    java.lang.String e -> e
    com.amap.api.services.core.LatLonPoint f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setId(java.lang.String) -> setId
    void setName(java.lang.String) -> setName
    java.lang.String getCityCode() -> getCityCode
    void setCityCode(java.lang.String) -> setCityCode
    float getRoadWidth() -> getRoadWidth
    void setRoadWidth(float) -> setRoadWidth
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    com.amap.api.services.core.LatLonPoint getCenterPoint() -> getCenterPoint
    void setCenterPoint(com.amap.api.services.core.LatLonPoint) -> setCenterPoint
    java.lang.String getId() -> getId
    java.lang.String getName() -> getName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.road.a -> com.amap.api.services.road.a:
    com.amap.api.services.road.Crossroad[] a(int) -> a
    com.amap.api.services.road.Crossroad a(android.os.Parcel) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.road.b -> com.amap.api.services.road.b:
    com.amap.api.services.road.Road a(android.os.Parcel) -> a
    com.amap.api.services.road.Road[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.BusPath -> com.amap.api.services.route.BusPath:
    float a -> a
    boolean b -> b
    float c -> c
    float d -> d
    java.util.List e -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    float getCost() -> getCost
    void setCost(float) -> setCost
    boolean isNightBus() -> isNightBus
    void setNightBus(boolean) -> setNightBus
    float getDistance() -> getDistance
    float getWalkDistance() -> getWalkDistance
    void setWalkDistance(float) -> setWalkDistance
    float getBusDistance() -> getBusDistance
    void setBusDistance(float) -> setBusDistance
    java.util.List getSteps() -> getSteps
    void setSteps(java.util.List) -> setSteps
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.BusRouteResult -> com.amap.api.services.route.BusRouteResult:
    float a -> a
    java.util.List b -> b
    com.amap.api.services.route.RouteSearch$BusRouteQuery c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    float getTaxiCost() -> getTaxiCost
    void setTaxiCost(float) -> setTaxiCost
    java.util.List getPaths() -> getPaths
    void setPaths(java.util.List) -> setPaths
    com.amap.api.services.route.RouteSearch$BusRouteQuery getBusQuery() -> getBusQuery
    void setBusQuery(com.amap.api.services.route.RouteSearch$BusRouteQuery) -> setBusQuery
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.BusStep -> com.amap.api.services.route.BusStep:
    com.amap.api.services.route.RouteBusWalkItem a -> a
    java.util.List b -> b
    com.amap.api.services.route.Doorway c -> c
    com.amap.api.services.route.Doorway d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.amap.api.services.route.RouteBusWalkItem getWalk() -> getWalk
    void setWalk(com.amap.api.services.route.RouteBusWalkItem) -> setWalk
    com.amap.api.services.route.RouteBusLineItem getBusLine() -> getBusLine
    void setBusLine(com.amap.api.services.route.RouteBusLineItem) -> setBusLine
    void setBusLines(java.util.List) -> setBusLines
    com.amap.api.services.route.Doorway getEntrance() -> getEntrance
    void setEntrance(com.amap.api.services.route.Doorway) -> setEntrance
    com.amap.api.services.route.Doorway getExit() -> getExit
    void setExit(com.amap.api.services.route.Doorway) -> setExit
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.District -> com.amap.api.services.route.District:
    java.lang.String a -> a
    java.lang.String b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getDistrictName() -> getDistrictName
    void setDistrictName(java.lang.String) -> setDistrictName
    java.lang.String getDistrictAdcode() -> getDistrictAdcode
    void setDistrictAdcode(java.lang.String) -> setDistrictAdcode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.Doorway -> com.amap.api.services.route.Doorway:
    java.lang.String a -> a
    com.amap.api.services.core.LatLonPoint b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.amap.api.services.core.LatLonPoint getLatLonPoint() -> getLatLonPoint
    void setLatLonPoint(com.amap.api.services.core.LatLonPoint) -> setLatLonPoint
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.DrivePath -> com.amap.api.services.route.DrivePath:
    java.lang.String a -> a
    float b -> b
    float c -> c
    java.util.List d -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getStrategy() -> getStrategy
    void setStrategy(java.lang.String) -> setStrategy
    float getTolls() -> getTolls
    void setTolls(float) -> setTolls
    float getTollDistance() -> getTollDistance
    void setTollDistance(float) -> setTollDistance
    java.util.List getSteps() -> getSteps
    void setSteps(java.util.List) -> setSteps
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.DriveRouteResult -> com.amap.api.services.route.DriveRouteResult:
    java.util.List a -> a
    com.amap.api.services.route.RouteSearch$DriveRouteQuery b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getPaths() -> getPaths
    void setPaths(java.util.List) -> setPaths
    com.amap.api.services.route.RouteSearch$DriveRouteQuery getDriveQuery() -> getDriveQuery
    void setDriveQuery(com.amap.api.services.route.RouteSearch$DriveRouteQuery) -> setDriveQuery
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.DriveStep -> com.amap.api.services.route.DriveStep:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    float d -> d
    float e -> e
    float f -> f
    java.lang.String g -> g
    float h -> h
    java.util.List i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.util.List l -> l
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getInstruction() -> getInstruction
    void setInstruction(java.lang.String) -> setInstruction
    java.lang.String getOrientation() -> getOrientation
    void setOrientation(java.lang.String) -> setOrientation
    java.lang.String getRoad() -> getRoad
    void setRoad(java.lang.String) -> setRoad
    float getDistance() -> getDistance
    void setDistance(float) -> setDistance
    float getTolls() -> getTolls
    void setTolls(float) -> setTolls
    float getTollDistance() -> getTollDistance
    void setTollDistance(float) -> setTollDistance
    java.lang.String getTollRoad() -> getTollRoad
    void setTollRoad(java.lang.String) -> setTollRoad
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
    java.util.List getPolyline() -> getPolyline
    void setPolyline(java.util.List) -> setPolyline
    java.lang.String getAction() -> getAction
    void setAction(java.lang.String) -> setAction
    java.lang.String getAssistantAction() -> getAssistantAction
    void setAssistantAction(java.lang.String) -> setAssistantAction
    java.util.List getRouteSearchCityList() -> getRouteSearchCityList
    void setRouteSearchCityList(java.util.List) -> setRouteSearchCityList
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.Path -> com.amap.api.services.route.Path:
    float a -> a
    long b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    float getDistance() -> getDistance
    void setDistance(float) -> setDistance
    long getDuration() -> getDuration
    void setDuration(long) -> setDuration
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.RouteBusLineItem -> com.amap.api.services.route.RouteBusLineItem:
    com.amap.api.services.busline.BusStationItem a -> a
    com.amap.api.services.busline.BusStationItem b -> b
    java.util.List c -> c
    int d -> d
    java.util.List e -> e
    float f -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.amap.api.services.busline.BusStationItem getDepartureBusStation() -> getDepartureBusStation
    void setDepartureBusStation(com.amap.api.services.busline.BusStationItem) -> setDepartureBusStation
    com.amap.api.services.busline.BusStationItem getArrivalBusStation() -> getArrivalBusStation
    void setArrivalBusStation(com.amap.api.services.busline.BusStationItem) -> setArrivalBusStation
    java.util.List getPolyline() -> getPolyline
    void setPolyline(java.util.List) -> setPolyline
    int getPassStationNum() -> getPassStationNum
    void setPassStationNum(int) -> setPassStationNum
    java.util.List getPassStations() -> getPassStations
    void setPassStations(java.util.List) -> setPassStations
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.RouteBusWalkItem -> com.amap.api.services.route.RouteBusWalkItem:
    com.amap.api.services.core.LatLonPoint a -> a
    com.amap.api.services.core.LatLonPoint b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.amap.api.services.core.LatLonPoint getOrigin() -> getOrigin
    void setOrigin(com.amap.api.services.core.LatLonPoint) -> setOrigin
    com.amap.api.services.core.LatLonPoint getDestination() -> getDestination
    void setDestination(com.amap.api.services.core.LatLonPoint) -> setDestination
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.RouteResult -> com.amap.api.services.route.RouteResult:
    com.amap.api.services.core.LatLonPoint a -> a
    com.amap.api.services.core.LatLonPoint b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.amap.api.services.core.LatLonPoint getStartPos() -> getStartPos
    void setStartPos(com.amap.api.services.core.LatLonPoint) -> setStartPos
    com.amap.api.services.core.LatLonPoint getTargetPos() -> getTargetPos
    void setTargetPos(com.amap.api.services.core.LatLonPoint) -> setTargetPos
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.RouteSearch -> com.amap.api.services.route.RouteSearch:
    int BusDefault -> BusDefault
    int BusSaveMoney -> BusSaveMoney
    int BusLeaseChange -> BusLeaseChange
    int BusLeaseWalk -> BusLeaseWalk
    int BusComfortable -> BusComfortable
    int BusNoSubway -> BusNoSubway
    int DrivingDefault -> DrivingDefault
    int DrivingSaveMoney -> DrivingSaveMoney
    int DrivingShortDistance -> DrivingShortDistance
    int DrivingNoExpressways -> DrivingNoExpressways
    int DrivingAvoidCongestion -> DrivingAvoidCongestion
    int DrivingMultiStrategy -> DrivingMultiStrategy
    int DrivingNoHighWay -> DrivingNoHighWay
    int DrivingNoHighWaySaveMoney -> DrivingNoHighWaySaveMoney
    int DrivingSaveMoneyAvoidCongestion -> DrivingSaveMoneyAvoidCongestion
    int DrivingNoHighAvoidCongestionSaveMoney -> DrivingNoHighAvoidCongestionSaveMoney
    int WalkDefault -> WalkDefault
    int WalkMultipath -> WalkMultipath
    com.amap.api.services.route.RouteSearch$OnRouteSearchListener b -> b
    android.content.Context c -> c
    android.os.Handler a -> a
    void setRouteSearchListener(com.amap.api.services.route.RouteSearch$OnRouteSearchListener) -> setRouteSearchListener
    com.amap.api.services.route.WalkRouteResult calculateWalkRoute(com.amap.api.services.route.RouteSearch$WalkRouteQuery) -> calculateWalkRoute
    void calculateWalkRouteAsyn(com.amap.api.services.route.RouteSearch$WalkRouteQuery) -> calculateWalkRouteAsyn
    com.amap.api.services.route.BusRouteResult calculateBusRoute(com.amap.api.services.route.RouteSearch$BusRouteQuery) -> calculateBusRoute
    void calculateBusRouteAsyn(com.amap.api.services.route.RouteSearch$BusRouteQuery) -> calculateBusRouteAsyn
    com.amap.api.services.route.DriveRouteResult calculateDriveRoute(com.amap.api.services.route.RouteSearch$DriveRouteQuery) -> calculateDriveRoute
    void calculateDriveRouteAsyn(com.amap.api.services.route.RouteSearch$DriveRouteQuery) -> calculateDriveRouteAsyn
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(java.lang.String,java.lang.String) -> a
    com.amap.api.services.route.RouteSearch$OnRouteSearchListener a(com.amap.api.services.route.RouteSearch) -> a
com.amap.api.services.route.RouteSearch$1 -> com.amap.api.services.route.RouteSearch$1:
    com.amap.api.services.route.RouteSearch$WalkRouteQuery a -> a
    com.amap.api.services.route.RouteSearch b -> b
    void run() -> run
com.amap.api.services.route.RouteSearch$2 -> com.amap.api.services.route.RouteSearch$2:
    com.amap.api.services.route.RouteSearch$BusRouteQuery a -> a
    com.amap.api.services.route.RouteSearch b -> b
    void run() -> run
com.amap.api.services.route.RouteSearch$3 -> com.amap.api.services.route.RouteSearch$3:
    com.amap.api.services.route.RouteSearch$DriveRouteQuery a -> a
    com.amap.api.services.route.RouteSearch b -> b
    void run() -> run
com.amap.api.services.route.RouteSearch$BusRouteQuery -> com.amap.api.services.route.RouteSearch$BusRouteQuery:
    com.amap.api.services.route.RouteSearch$FromAndTo a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    com.amap.api.services.route.RouteSearch$FromAndTo getFromAndTo() -> getFromAndTo
    int getMode() -> getMode
    java.lang.String getCity() -> getCity
    int getNightFlag() -> getNightFlag
    boolean equals(java.lang.Object) -> equals
    com.amap.api.services.route.RouteSearch$BusRouteQuery clone() -> clone
    java.lang.Object clone() -> clone
com.amap.api.services.route.RouteSearch$DriveRouteQuery -> com.amap.api.services.route.RouteSearch$DriveRouteQuery:
    com.amap.api.services.route.RouteSearch$FromAndTo a -> a
    int b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.lang.String e -> e
    com.amap.api.services.route.RouteSearch$FromAndTo getFromAndTo() -> getFromAndTo
    int getMode() -> getMode
    java.util.List getPassedByPoints() -> getPassedByPoints
    java.util.List getAvoidpolygons() -> getAvoidpolygons
    java.lang.String getAvoidRoad() -> getAvoidRoad
    boolean equals(java.lang.Object) -> equals
    com.amap.api.services.route.RouteSearch$DriveRouteQuery clone() -> clone
    java.lang.Object clone() -> clone
com.amap.api.services.route.RouteSearch$FromAndTo -> com.amap.api.services.route.RouteSearch$FromAndTo:
    com.amap.api.services.core.LatLonPoint a -> a
    com.amap.api.services.core.LatLonPoint b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.amap.api.services.core.LatLonPoint getFrom() -> getFrom
    com.amap.api.services.core.LatLonPoint getTo() -> getTo
    java.lang.String getStartPoiID() -> getStartPoiID
    void setStartPoiID(java.lang.String) -> setStartPoiID
    java.lang.String getDestinationPoiID() -> getDestinationPoiID
    void setDestinationPoiID(java.lang.String) -> setDestinationPoiID
    boolean equals(java.lang.Object) -> equals
    com.amap.api.services.route.RouteSearch$FromAndTo clone() -> clone
    java.lang.Object clone() -> clone
com.amap.api.services.route.RouteSearch$OnRouteSearchListener -> com.amap.api.services.route.RouteSearch$OnRouteSearchListener:
    void onBusRouteSearched(com.amap.api.services.route.BusRouteResult,int) -> onBusRouteSearched
    void onDriveRouteSearched(com.amap.api.services.route.DriveRouteResult,int) -> onDriveRouteSearched
    void onWalkRouteSearched(com.amap.api.services.route.WalkRouteResult,int) -> onWalkRouteSearched
com.amap.api.services.route.RouteSearch$WalkRouteQuery -> com.amap.api.services.route.RouteSearch$WalkRouteQuery:
    com.amap.api.services.route.RouteSearch$FromAndTo a -> a
    int b -> b
    com.amap.api.services.route.RouteSearch$FromAndTo getFromAndTo() -> getFromAndTo
    int getMode() -> getMode
    boolean equals(java.lang.Object) -> equals
    com.amap.api.services.route.RouteSearch$WalkRouteQuery clone() -> clone
    java.lang.Object clone() -> clone
com.amap.api.services.route.RouteSearchCity -> com.amap.api.services.route.RouteSearchCity:
    java.util.List a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getDistricts() -> getDistricts
    void setDistricts(java.util.List) -> setDistricts
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.SearchCity -> com.amap.api.services.route.SearchCity:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getSearchCityName() -> getSearchCityName
    void setSearchCityName(java.lang.String) -> setSearchCityName
    java.lang.String getSearchCitycode() -> getSearchCitycode
    void setSearchCitycode(java.lang.String) -> setSearchCitycode
    java.lang.String getSearchCityAdCode() -> getSearchCityAdCode
    void setSearchCityhAdCode(java.lang.String) -> setSearchCityhAdCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.WalkPath -> com.amap.api.services.route.WalkPath:
    java.util.List a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getSteps() -> getSteps
    void setSteps(java.util.List) -> setSteps
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.WalkRouteResult -> com.amap.api.services.route.WalkRouteResult:
    java.util.List a -> a
    com.amap.api.services.route.RouteSearch$WalkRouteQuery b -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getPaths() -> getPaths
    void setPaths(java.util.List) -> setPaths
    com.amap.api.services.route.RouteSearch$WalkRouteQuery getWalkQuery() -> getWalkQuery
    void setWalkQuery(com.amap.api.services.route.RouteSearch$WalkRouteQuery) -> setWalkQuery
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.WalkStep -> com.amap.api.services.route.WalkStep:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    float d -> d
    float e -> e
    java.util.List f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getInstruction() -> getInstruction
    void setInstruction(java.lang.String) -> setInstruction
    java.lang.String getOrientation() -> getOrientation
    void setOrientation(java.lang.String) -> setOrientation
    java.lang.String getRoad() -> getRoad
    void setRoad(java.lang.String) -> setRoad
    float getDistance() -> getDistance
    void setDistance(float) -> setDistance
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
    java.util.List getPolyline() -> getPolyline
    void setPolyline(java.util.List) -> setPolyline
    java.lang.String getAction() -> getAction
    void setAction(java.lang.String) -> setAction
    java.lang.String getAssistantAction() -> getAssistantAction
    void setAssistantAction(java.lang.String) -> setAssistantAction
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.amap.api.services.route.a -> com.amap.api.services.route.a:
    com.amap.api.services.route.BusPath a(android.os.Parcel) -> a
    com.amap.api.services.route.BusPath[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.b -> com.amap.api.services.route.b:
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    java.lang.String b() -> b
com.amap.api.services.route.c -> com.amap.api.services.route.c:
    com.amap.api.services.route.BusRouteResult a(android.os.Parcel) -> a
    com.amap.api.services.route.BusRouteResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.d -> com.amap.api.services.route.d:
    byte[] c() -> c
    java.lang.String a() -> a
    com.amap.api.services.route.BusRouteResult a(java.io.InputStream) -> a
    java.lang.String d() -> d
    java.util.List a(org.json.JSONArray) -> a
    com.amap.api.services.route.BusStep a(org.json.JSONObject) -> a
    com.amap.api.services.route.RouteBusWalkItem b(org.json.JSONObject) -> b
    java.util.List c(org.json.JSONObject) -> c
    com.amap.api.services.route.Doorway d(org.json.JSONObject) -> d
    com.amap.api.services.route.WalkStep e(org.json.JSONObject) -> e
    com.amap.api.services.route.RouteBusLineItem f(org.json.JSONObject) -> f
    java.util.List g(org.json.JSONObject) -> g
    com.amap.api.services.busline.BusStationItem h(org.json.JSONObject) -> h
    java.lang.Object b(java.io.InputStream) -> b
com.amap.api.services.route.e -> com.amap.api.services.route.e:
    com.amap.api.services.route.BusStep a(android.os.Parcel) -> a
    com.amap.api.services.route.BusStep[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.f -> com.amap.api.services.route.f:
    com.amap.api.services.route.District a(android.os.Parcel) -> a
    com.amap.api.services.route.District[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.g -> com.amap.api.services.route.g:
    com.amap.api.services.route.Doorway a(android.os.Parcel) -> a
    com.amap.api.services.route.Doorway[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.h -> com.amap.api.services.route.h:
    com.amap.api.services.route.DrivePath a(android.os.Parcel) -> a
    com.amap.api.services.route.DrivePath[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.i -> com.amap.api.services.route.i:
    java.util.List c -> c
    java.util.List d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    boolean b() -> b
    java.lang.String c() -> c
    boolean d() -> d
    java.lang.String e() -> e
    boolean f() -> f
com.amap.api.services.route.j -> com.amap.api.services.route.j:
    com.amap.api.services.route.DriveRouteResult a(android.os.Parcel) -> a
    com.amap.api.services.route.DriveRouteResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.k -> com.amap.api.services.route.k:
    byte[] c() -> c
    java.lang.String a() -> a
    com.amap.api.services.route.DriveRouteResult a(java.io.InputStream) -> a
    void a(com.amap.api.services.route.DriveStep,org.json.JSONObject) -> a
    void a(com.amap.api.services.route.RouteSearchCity,org.json.JSONObject) -> a
    java.lang.String d() -> d
    java.lang.Object b(java.io.InputStream) -> b
com.amap.api.services.route.l -> com.amap.api.services.route.l:
    com.amap.api.services.route.DriveStep a(android.os.Parcel) -> a
    com.amap.api.services.route.DriveStep[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.m -> com.amap.api.services.route.m:
    com.amap.api.services.route.Path a(android.os.Parcel) -> a
    com.amap.api.services.route.Path[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.n -> com.amap.api.services.route.n:
    com.amap.api.services.route.RouteBusLineItem a(android.os.Parcel) -> a
    com.amap.api.services.route.RouteBusLineItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.o -> com.amap.api.services.route.o:
    com.amap.api.services.route.RouteBusWalkItem a(android.os.Parcel) -> a
    com.amap.api.services.route.RouteBusWalkItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.p -> com.amap.api.services.route.p:
    com.amap.api.services.route.RouteSearch$FromAndTo a -> a
    int b -> b
com.amap.api.services.route.q -> com.amap.api.services.route.q:
    com.amap.api.services.route.RouteResult a(android.os.Parcel) -> a
    com.amap.api.services.route.RouteResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.r -> com.amap.api.services.route.r:
    com.amap.api.services.route.RouteSearch a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.amap.api.services.route.s -> com.amap.api.services.route.s:
    com.amap.api.services.route.RouteSearchCity a(android.os.Parcel) -> a
    com.amap.api.services.route.RouteSearchCity[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.t -> com.amap.api.services.route.t:
com.amap.api.services.route.u -> com.amap.api.services.route.u:
    com.amap.api.services.route.SearchCity a(android.os.Parcel) -> a
    com.amap.api.services.route.SearchCity[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.v -> com.amap.api.services.route.v:
    com.amap.api.services.route.WalkPath a(android.os.Parcel) -> a
    com.amap.api.services.route.WalkPath[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.w -> com.amap.api.services.route.w:
    java.lang.String c -> c
    java.lang.String a() -> a
com.amap.api.services.route.x -> com.amap.api.services.route.x:
    com.amap.api.services.route.WalkRouteResult a(android.os.Parcel) -> a
    com.amap.api.services.route.WalkRouteResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.amap.api.services.route.y -> com.amap.api.services.route.y:
    byte[] c() -> c
    java.lang.String a() -> a
    com.amap.api.services.route.WalkRouteResult a(java.io.InputStream) -> a
    java.lang.String d() -> d
    java.lang.Object b(java.io.InputStream) -> b
com.amap.api.services.route.z -> com.amap.api.services.route.z:
    com.amap.api.services.route.WalkStep a(android.os.Parcel) -> a
    com.amap.api.services.route.WalkStep[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.aps.a -> com.a.a:
    com.aps.a a -> a
    android.content.Context b -> b
    int c -> c
    android.net.ConnectivityManager d -> d
    android.net.wifi.WifiManager e -> e
    android.telephony.TelephonyManager f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.util.Map i -> i
    com.aps.b j -> j
    android.telephony.PhoneStateListener k -> k
    int l -> l
    com.aps.a$a m -> m
    android.net.wifi.WifiInfo n -> n
    org.json.JSONObject o -> o
    java.lang.String p -> p
    com.aps.c q -> q
    long r -> r
    long s -> s
    boolean t -> t
    boolean u -> u
    long v -> v
    long w -> w
    long x -> x
    com.aps.j y -> y
    int z -> z
    java.lang.String A -> A
    com.aps.s B -> B
    com.aps.y C -> C
    long D -> D
    long E -> E
    android.telephony.CellLocation F -> F
    boolean G -> G
    com.aps.i a() -> a
    void a(android.content.Context) -> a
    com.aps.c b() -> b
    void a(java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    void a(com.aps.h,android.app.PendingIntent) -> a
    void a(android.app.PendingIntent) -> a
    void c() -> c
    void f() -> f
    void g() -> g
    void a(android.telephony.CellLocation) -> a
    boolean a(long) -> a
    java.lang.String h() -> h
    boolean a(android.net.wifi.WifiInfo) -> a
    java.lang.StringBuilder i() -> i
    java.lang.StringBuilder a(java.lang.Object) -> a
    void a(java.util.List) -> a
    boolean a(int) -> a
    java.lang.String j() -> j
    boolean k() -> k
    boolean l() -> l
    com.aps.c a(java.lang.String,boolean) -> a
    void a(java.lang.StringBuilder) -> a
    boolean m() -> m
    void b(int) -> b
    com.aps.e b(android.telephony.CellLocation) -> b
    com.aps.e a(android.telephony.NeighboringCellInfo) -> a
    void c(android.telephony.CellLocation) -> c
    void d(android.telephony.CellLocation) -> d
    void n() -> n
    void o() -> o
    boolean a(com.aps.c,com.aps.c) -> a
    boolean p() -> p
    void d() -> d
    int e() -> e
    void q() -> q
    void r() -> r
    boolean s() -> s
    com.aps.c t() -> t
    void u() -> u
    boolean a(com.aps.a) -> a
    android.telephony.TelephonyManager b(com.aps.a) -> b
    android.telephony.CellLocation a(com.aps.a,android.telephony.CellLocation) -> a
    android.telephony.CellLocation c(com.aps.a) -> c
    long a(com.aps.a,long) -> a
    int d(com.aps.a) -> d
    void a(com.aps.a,int) -> a
    java.util.List e(com.aps.a) -> e
    int b(com.aps.a,int) -> b
    android.net.wifi.WifiManager f(com.aps.a) -> f
    java.util.List a(com.aps.a,java.util.List) -> a
    java.util.List g(com.aps.a) -> g
    void h(com.aps.a) -> h
    void i(com.aps.a) -> i
    int j(com.aps.a) -> j
    boolean a(com.aps.a,boolean) -> a
    boolean b(com.aps.a,boolean) -> b
com.aps.a$1 -> com.a.b:
    com.aps.a a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthChanged(int) -> onSignalStrengthChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
com.aps.a$a -> com.a.a$a:
    com.aps.a a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aps.aa -> com.a.c:
    byte g -> g
    int a -> a
    int b -> b
    short c -> c
    short d -> d
    int e -> e
    byte f -> f
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.ab -> com.a.d:
    short a -> a
    int b -> b
    byte c -> c
com.aps.ac -> com.a.e:
    android.content.Context a -> a
    android.telephony.TelephonyManager b -> b
    android.location.LocationManager c -> c
    android.net.wifi.WifiManager d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    boolean h -> h
    int i -> i
    boolean j -> j
    long k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    int n -> n
    int o -> o
    int p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    long s -> s
    long t -> t
    boolean u -> u
    com.aps.ac v -> v
    com.aps.af w -> w
    com.aps.ag x -> x
    android.telephony.CellLocation y -> y
    com.aps.ai z -> z
    java.util.List A -> A
    java.util.Timer B -> B
    com.aps.ah C -> C
    java.lang.Thread D -> D
    java.lang.Thread E -> E
    android.os.Looper F -> F
    int G -> G
    com.aps.ac a(android.content.Context) -> a
    void a(com.aps.ah) -> a
    void a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    boolean h() -> h
    java.util.List i() -> i
    java.util.List j() -> j
    byte k() -> k
    java.util.List l() -> l
    java.util.List m() -> m
    java.lang.String n() -> n
    int o() -> o
    int p() -> p
    int q() -> q
    java.lang.String r() -> r
    byte s() -> s
    int t() -> t
    short u() -> u
    java.util.List v() -> v
    java.util.List w() -> w
    java.util.List x() -> x
    java.util.List y() -> y
    void B() -> B
    void a(android.content.BroadcastReceiver) -> a
    void b(android.content.BroadcastReceiver) -> b
    boolean b(android.content.Context) -> b
    android.os.Looper a(com.aps.ac,android.os.Looper) -> a
    java.util.Timer a(com.aps.ac,java.util.Timer) -> a
    com.aps.af a(com.aps.ac,com.aps.af) -> a
    com.aps.af a(com.aps.ac) -> a
    void a(com.aps.ac,android.telephony.PhoneStateListener) -> a
    java.lang.Thread b(com.aps.ac) -> b
    boolean a(com.aps.ac,boolean) -> a
    java.lang.Thread a(com.aps.ac,java.lang.Thread) -> a
    com.aps.ag a(com.aps.ac,com.aps.ag) -> a
    com.aps.ag c(com.aps.ac) -> c
    void a(com.aps.ac,android.location.GpsStatus$NmeaListener,long,float) -> a
    com.aps.ai a(com.aps.ac,com.aps.ai) -> a
    com.aps.ai d(com.aps.ac) -> d
    void a(com.aps.ac,android.content.BroadcastReceiver) -> a
    void e(com.aps.ac) -> e
    android.net.wifi.WifiManager f(com.aps.ac) -> f
    java.util.Timer g(com.aps.ac) -> g
    java.util.List h(com.aps.ac) -> h
    void a(com.aps.ac,java.util.List) -> a
    long a(com.aps.ac,long) -> a
    int z() -> z
    boolean b(com.aps.ac,boolean) -> b
    android.telephony.TelephonyManager i(com.aps.ac) -> i
    int a(com.aps.ac,int) -> a
    int b(com.aps.ac,int) -> b
    long b(com.aps.ac,long) -> b
    android.telephony.CellLocation a(com.aps.ac,android.telephony.CellLocation) -> a
    boolean j(com.aps.ac) -> j
    int c(com.aps.ac,int) -> c
    int k(com.aps.ac) -> k
    java.lang.String a(com.aps.ac,java.lang.String) -> a
    long c(com.aps.ac,long) -> c
    java.lang.String b(com.aps.ac,java.lang.String) -> b
    com.aps.ah A() -> A
    boolean l(com.aps.ac) -> l
com.aps.ad -> com.a.f:
    com.aps.ac a -> a
    void run() -> run
com.aps.ae -> com.a.g:
    com.aps.ac a -> a
    void run() -> run
com.aps.af -> com.a.h:
    com.aps.ac a -> a
    void onServiceStateChanged(android.telephony.ServiceState) -> onServiceStateChanged
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.aps.ag -> com.a.i:
    com.aps.ac a -> a
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
com.aps.ah -> com.a.j:
com.aps.ai -> com.a.k:
    com.aps.ac a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aps.aj -> com.a.l:
    com.aps.ai a -> a
    void run() -> run
com.aps.ak -> com.a.m:
    com.aps.s a -> a
    void run() -> run
com.aps.al -> com.a.n:
    com.aps.s a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    boolean a(android.location.Location) -> a
com.aps.am -> com.a.o:
    com.aps.s a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aps.an -> com.a.p:
    com.aps.s a -> a
    void run() -> run
com.aps.ao -> com.a.q:
    com.aps.s a -> a
    void a() -> a
com.aps.ap -> com.a.r:
    android.content.Context a -> a
    boolean b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    long j -> j
    com.aps.ao k -> k
    boolean a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    int e() -> e
    void a(int) -> a
    int f() -> f
    void b(int) -> b
    void a(com.aps.ao) -> a
    com.aps.ap a(android.content.Context) -> a
    boolean a(java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    byte[] c(int) -> c
    byte[] a(long) -> a
    int a(byte[],int) -> a
    long b(byte[],int) -> b
    void g() -> g
com.aps.aq -> com.a.s:
    int c -> c
    int d -> d
    int e -> e
    com.aps.ac f -> f
    com.aps.au a -> a
    com.aps.ar b -> b
    void a(int,int) -> a
    boolean a(android.location.Location) -> a
    boolean b(android.location.Location) -> b
com.aps.ar -> com.a.t:
    com.aps.as a -> a
    android.location.Location b -> b
com.aps.as -> com.a.u:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
com.aps.at -> com.a.v:
com.aps.au -> com.a.w:
    java.util.List a -> a
    android.location.Location b -> b
com.aps.av -> com.a.x:
    java.lang.String[] a -> a
    boolean a(java.lang.String[],java.lang.String) -> a
com.aps.aw -> com.a.y:
    java.io.RandomAccessFile a -> a
    com.aps.z b -> b
    java.io.File c -> c
    com.aps.y a(int) -> a
    java.util.BitSet a() -> a
    java.util.ArrayList a(int,int) -> a
    int a(java.util.BitSet) -> a
    int a(int,int,int) -> a
    void a(com.aps.y) -> a
    void a(java.lang.String) -> a
com.aps.ax -> com.a.z:
    java.io.RandomAccessFile a -> a
    com.aps.z b -> b
    java.lang.String c -> c
    java.io.File d -> d
    void a(long,byte[]) -> a
    void a(java.lang.String) -> a
com.aps.ay -> com.a.aa:
    byte a -> a
    short b -> b
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.b -> com.a.ab:
    java.lang.String a -> a
    javax.crypto.Cipher b -> b
    javax.crypto.Cipher c -> c
    void a(java.lang.StringBuilder,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    byte[] a(java.lang.String) -> a
    java.lang.String b(byte[]) -> b
com.aps.c -> com.a.ac:
    java.lang.String a -> a
    double b -> b
    double c -> c
    float d -> d
    float e -> e
    float f -> f
    long g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    org.json.JSONObject s -> s
    void a(java.lang.String) -> a
    double a() -> a
    void a(double) -> a
    double b() -> b
    void b(double) -> b
    float c() -> c
    void a(float) -> a
    long d() -> d
    void a(long) -> a
    java.lang.String e() -> e
    void b(java.lang.String) -> b
    java.lang.String f() -> f
    void c(java.lang.String) -> c
    java.lang.String g() -> g
    void d(java.lang.String) -> d
    java.lang.String h() -> h
    void e(java.lang.String) -> e
    java.lang.String i() -> i
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void l(java.lang.String) -> l
    org.json.JSONObject j() -> j
    void a(org.json.JSONObject) -> a
com.aps.d -> com.a.ad:
    com.aps.d a -> a
    java.util.Hashtable b -> b
    long c -> c
    com.aps.d a() -> a
    void a(java.lang.String,com.aps.c,java.lang.StringBuilder,android.content.Context) -> a
    com.aps.c a(java.lang.String,java.lang.StringBuilder,java.lang.String) -> a
    boolean b() -> b
    boolean a(java.lang.String,com.aps.c) -> a
    void c() -> c
    com.aps.d$a a(java.lang.String,java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.StringBuilder) -> a
    void a(java.lang.String,java.util.Hashtable) -> a
    double a(double[],double[]) -> a
com.aps.d$a -> com.a.ad$a:
    com.aps.c b -> b
    java.lang.String c -> c
    com.aps.d a -> a
    com.aps.c a() -> a
    void a(com.aps.c) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
com.aps.e -> com.a.ae:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
com.aps.f -> com.a.af:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    boolean g -> g
    boolean h -> h
    long i -> i
    long j -> j
    boolean k -> k
    android.util.SparseArray l -> l
    java.lang.String[] m -> m
com.aps.g -> com.a.ag:
    com.aps.i a -> a
    com.aps.i a() -> a
com.aps.h -> com.a.ah:
    double a -> a
    double b -> b
    float c -> c
    long d -> d
    long a() -> a
    void a(long) -> a
    java.lang.String b() -> b
com.aps.i -> com.a.ai:
    void a(android.content.Context) -> a
    void a(java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    com.aps.c b() -> b
    void a(com.aps.h,android.app.PendingIntent) -> a
    void a(android.app.PendingIntent) -> a
    int e() -> e
    void c() -> c
com.aps.j -> com.a.aj:
    com.aps.j a -> a
    com.aps.j a() -> a
    java.lang.String a(android.content.Context,java.lang.String,byte[]) -> a
    java.lang.String a(java.lang.String,android.content.Context,org.json.JSONObject) -> a
    org.apache.http.client.HttpClient a(android.content.Context,android.net.NetworkInfo) -> a
    boolean a(java.lang.String,int) -> a
    int a(android.net.NetworkInfo) -> a
    java.lang.String a(android.telephony.TelephonyManager) -> a
    boolean a(org.apache.http.HttpResponse) -> a
    java.lang.String[] a(org.json.JSONObject) -> a
    java.lang.String b() -> b
com.aps.k -> com.a.ak:
    java.lang.String a(java.lang.String) -> a
    com.aps.c b(java.lang.String) -> b
com.aps.k$1 -> com.a.ak$1:
com.aps.k$a -> com.a.ak$a:
    com.aps.c a -> a
    java.lang.String c -> c
    com.aps.k b -> b
    void characters(char[],int,int) -> characters
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.aps.k$b -> com.a.ak$b:
    java.lang.String a -> a
    boolean c -> c
    com.aps.k b -> b
    void characters(char[],int,int) -> characters
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
com.aps.l -> com.a.al:
    java.lang.Object a(java.lang.String,java.lang.String) -> a
    int b(java.lang.String,java.lang.String) -> b
    int a(java.lang.Object,java.lang.String,java.lang.Object[]) -> a
    java.lang.Object a(java.lang.String,java.lang.String,java.lang.Object[],java.lang.Class[]) -> a
com.aps.m -> com.a.am:
    com.aps.m a -> a
    java.text.DecimalFormat b -> b
    java.text.SimpleDateFormat c -> c
    java.lang.String a(java.lang.Object,java.lang.String) -> a
com.aps.n -> com.a.an:
    void a(java.lang.Object[]) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(java.lang.Throwable) -> a
    boolean a(com.aps.c) -> a
    int a(int) -> a
    java.lang.String[] a(android.telephony.TelephonyManager) -> a
    int a(android.telephony.CellLocation,android.content.Context) -> a
    long a() -> a
    boolean a(android.content.Context) -> a
    float a(double[]) -> a
    java.lang.Object b(android.content.Context,java.lang.String) -> b
    void a(org.apache.http.params.HttpParams,int) -> a
    int b() -> b
    byte[] a(byte[]) -> a
    android.net.NetworkInfo b(android.content.Context) -> b
com.aps.o -> com.a.ao:
    double[][] a -> a
    double[] a(double,double) -> a
    double a(double,double,double) -> a
com.aps.p -> com.a.ap:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean a(android.content.Context) -> a
    boolean a() -> a
    boolean b() -> b
    void a(java.lang.String,java.lang.String) -> a
com.aps.q -> com.a.aq:
    byte f -> f
    short a -> a
    int b -> b
    byte c -> c
    byte d -> d
    java.util.ArrayList e -> e
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.r -> com.a.ar:
    short a -> a
    int b -> b
    com.aps.t c -> c
    com.aps.q d -> d
    com.aps.aa e -> e
    com.aps.w f -> f
com.aps.s -> com.a.as:
    boolean a -> a
    android.content.Context b -> b
    android.location.LocationManager c -> c
    int d -> d
    int e -> e
    com.aps.ac f -> f
    com.aps.aq g -> g
    com.aps.ax h -> h
    com.aps.z i -> i
    com.aps.aw j -> j
    com.aps.ap k -> k
    boolean l -> l
    com.aps.v m -> m
    java.lang.Thread n -> n
    android.os.Looper o -> o
    com.aps.an p -> p
    boolean q -> q
    int r -> r
    com.aps.ao s -> s
    boolean t -> t
    java.lang.Object u -> u
    com.aps.s v -> v
    android.location.LocationListener w -> w
    android.content.BroadcastReceiver x -> x
    com.aps.s a(android.content.Context) -> a
    void a(int) -> a
    void f() -> f
    void a() -> a
    void b() -> b
    void c() -> c
    com.aps.y d() -> d
    void a(com.aps.y,java.lang.String) -> a
    boolean e() -> e
    void a(com.aps.s) -> a
    android.os.Looper a(com.aps.s,android.os.Looper) -> a
    android.location.LocationListener b(com.aps.s) -> b
    android.location.LocationManager c(com.aps.s) -> c
    com.aps.ap d(com.aps.s) -> d
    long a(com.aps.s,long) -> a
    android.location.Location a(com.aps.s,android.location.Location) -> a
    boolean e(com.aps.s) -> e
    void b(com.aps.s,android.location.Location) -> b
    void a(com.aps.s,java.lang.String) -> a
    com.aps.ax f(com.aps.s) -> f
    com.aps.aw g(com.aps.s) -> g
    int h(com.aps.s) -> h
com.aps.t -> com.a.at:
    byte l -> l
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    short f -> f
    byte g -> g
    int h -> h
    short i -> i
    byte j -> j
    java.util.ArrayList k -> k
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.u -> com.a.au:
    byte l -> l
    short a -> a
    byte[] b -> b
    byte[] c -> c
    byte[] d -> d
    short e -> e
    short f -> f
    byte g -> g
    byte[] h -> h
    byte[] i -> i
    short j -> j
    java.util.ArrayList k -> k
    java.lang.Boolean a(java.io.DataOutputStream) -> a
    byte[] a() -> a
com.aps.v -> com.a.av:
    com.aps.u a(android.location.Location,com.aps.ac,int) -> a
com.aps.w -> com.a.aw:
    byte c -> c
    byte a -> a
    java.util.ArrayList b -> b
    java.lang.Boolean a(java.io.DataOutputStream) -> a
com.aps.x -> com.a.ax:
    byte[] a -> a
    short b -> b
    byte[] c -> c
com.aps.y -> com.a.ay:
    java.io.File a -> a
    java.util.ArrayList c -> c
    int[] b -> b
    boolean d -> d
    byte[] a() -> a
    void a(boolean) -> a
    boolean b() -> b
com.aps.z -> com.a.az:
    android.content.Context a -> a
    int b -> b
    int c -> c
    int d -> d
    byte[] a(byte[],int) -> a
    void a(int) -> a
    int a() -> a
    java.io.File a(long) -> a
    java.io.File b() -> b
    java.io.File b(long) -> b
    java.io.File c(long) -> c
    byte[] a(byte[]) -> a
    com.aps.u a(android.location.Location,com.aps.ac,int) -> a
    int a(int,int) -> a
    byte[] a(java.util.BitSet) -> a
    java.util.BitSet b(byte[]) -> b
    boolean c() -> c
    java.io.File a(android.content.Context) -> a
com.autonavi.amap.mapcore.BaseMapCallImplement -> com.autonavi.amap.mapcore.BaseMapCallImplement:
    java.util.ArrayList baseMapGrids -> baseMapGrids
    java.util.ArrayList bldMapGrids -> bldMapGrids
    java.util.ArrayList bmpbmMapGirds -> bmpbmMapGirds
    java.util.ArrayList vectmcMapGirds -> vectmcMapGirds
    java.util.ArrayList stiMapGirds -> stiMapGirds
    java.util.ArrayList mapModels -> mapModels
    java.util.ArrayList screenGirds -> screenGirds
    com.autonavi.amap.mapcore.ConnectionManager connectionManager -> connectionManager
    com.autonavi.amap.mapcore.d tileProcessCtrl -> tileProcessCtrl
    com.autonavi.amap.mapcore.c connectionPool -> connectionPool
    void destory() -> destory
    void OnMapDataRequired(com.autonavi.amap.mapcore.MapCore,int,java.lang.String[]) -> OnMapDataRequired
    java.util.ArrayList getScreenGridList(int) -> getScreenGridList
    boolean isGridsInScreen(java.util.ArrayList,int) -> isGridsInScreen
    boolean isGridInList(com.autonavi.amap.mapcore.MapSourceGridData,java.util.ArrayList) -> isGridInList
    void proccessRequiredData(com.autonavi.amap.mapcore.MapCore,java.util.ArrayList,int) -> proccessRequiredData
    void sendMapDataRequest(com.autonavi.amap.mapcore.MapCore,java.util.ArrayList,int) -> sendMapDataRequest
    void OnMapSurfaceCreate(com.autonavi.amap.mapcore.MapCore) -> OnMapSurfaceCreate
    void onPause() -> onPause
    void onResume() -> onResume
    void OnMapDestory(com.autonavi.amap.mapcore.MapCore) -> OnMapDestory
    byte[] OnMapCharsWidthsRequired(com.autonavi.amap.mapcore.MapCore,int[],int,int) -> OnMapCharsWidthsRequired
    void OnMapLabelsRequired(com.autonavi.amap.mapcore.MapCore,int[],int) -> OnMapLabelsRequired
com.autonavi.amap.mapcore.ConnectionManager -> com.autonavi.amap.mapcore.ConnectionManager:
    com.autonavi.amap.mapcore.c connectionPool -> connectionPool
    int sleepTime -> sleepTime
    boolean threadFlag -> threadFlag
    int getTaskCount() -> getTaskCount
    void addConntionTask(com.autonavi.amap.mapcore.MapLoader) -> addConntionTask
    void insertConntionTask(com.autonavi.amap.mapcore.MapLoader) -> insertConntionTask
    void run() -> run
    boolean isEmptyTask() -> isEmptyTask
    void finalize() -> finalize
com.autonavi.amap.mapcore.Convert -> com.autonavi.amap.mapcore.Convert:
    int getInt(byte[],int) -> getInt
    short getShort(byte[],int) -> getShort
    int getUShort(byte[],int) -> getUShort
    boolean getBit(byte,int) -> getBit
    byte[] copyString(byte[],int,int) -> copyString
    byte[] covertBytes(byte) -> covertBytes
    byte[] convertInt(int) -> convertInt
    int getNum(byte,int,int) -> getNum
    int getNum(short,int,int) -> getNum
    byte[] convertShort(int) -> convertShort
    void writeInt(byte[],int,int) -> writeInt
    void writeShort(byte[],int,short) -> writeShort
    void moveArray(byte[],int,byte[],int,int) -> moveArray
    java.lang.String getString(byte[],int,int) -> getString
    byte[] getSubBytes(byte[],int,int) -> getSubBytes
    byte[] get1BString(java.lang.String) -> get1BString
    byte[] get2BString(java.lang.String) -> get2BString
    double convertDouble(byte[],int) -> convertDouble
    byte[] getDouble(double) -> getDouble
    void convert1bString(byte[],int,com.autonavi.amap.mapcore.a) -> convert1bString
    void convert2bString(byte[],int,com.autonavi.amap.mapcore.a) -> convert2bString
    java.lang.String bytesToHexString(byte[]) -> bytesToHexString
com.autonavi.amap.mapcore.DPoint -> com.autonavi.amap.mapcore.DPoint:
    double x -> x
    double y -> y
com.autonavi.amap.mapcore.ERROR_CODE -> com.autonavi.amap.mapcore.ERROR_CODE:
    int CONN_CREATE_FALSE -> CONN_CREATE_FALSE
    int CONN_ERROR -> CONN_ERROR
    int ERROR_NONE -> ERROR_NONE
com.autonavi.amap.mapcore.FPoint -> com.autonavi.amap.mapcore.FPoint:
    float x -> x
    float y -> y
com.autonavi.amap.mapcore.IBaseMapCallback -> com.autonavi.amap.mapcore.IBaseMapCallback:
    android.content.Context getContext() -> getContext
    boolean isMapEngineValid() -> isMapEngineValid
    void OnMapLoaderError(int) -> OnMapLoaderError
    java.lang.String getMapSvrAddress() -> getMapSvrAddress
com.autonavi.amap.mapcore.IMapCallback -> com.autonavi.amap.mapcore.IMapCallback:
    void OnMapSurfaceCreate(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapSurfaceCreate
    void OnMapSurfaceRenderer(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int) -> OnMapSurfaceRenderer
    void OnMapSufaceChanged(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore,int,int) -> OnMapSufaceChanged
    void OnMapProcessEvent(com.autonavi.amap.mapcore.MapCore) -> OnMapProcessEvent
    void OnMapDestory(javax.microedition.khronos.opengles.GL10,com.autonavi.amap.mapcore.MapCore) -> OnMapDestory
    void OnMapDataRequired(com.autonavi.amap.mapcore.MapCore,int,java.lang.String[]) -> OnMapDataRequired
    void OnMapLabelsRequired(com.autonavi.amap.mapcore.MapCore,int[],int) -> OnMapLabelsRequired
    void OnMapReferencechanged(com.autonavi.amap.mapcore.MapCore,java.lang.String,java.lang.String) -> OnMapReferencechanged
    byte[] OnMapCharsWidthsRequired(com.autonavi.amap.mapcore.MapCore,int[],int,int) -> OnMapCharsWidthsRequired
    void onSetParameter(com.autonavi.amap.mapcore.MapCore) -> onSetParameter
com.autonavi.amap.mapcore.IPoint -> com.autonavi.amap.mapcore.IPoint:
    int x -> x
    int y -> y
com.autonavi.amap.mapcore.MapCore -> com.autonavi.amap.mapcore.MapCore:
    int TEXTURE_ICON -> TEXTURE_ICON
    int TEXTURE_BACKGROUND -> TEXTURE_BACKGROUND
    int TEXTURE_ROADARROW -> TEXTURE_ROADARROW
    int TEXTURE_ROADROUND -> TEXTURE_ROADROUND
    int TEXTURE_TMC_RED -> TEXTURE_TMC_RED
    int TEXTURE_TMC_YELLOW -> TEXTURE_TMC_YELLOW
    int TEXTURE_TMC_GREEN -> TEXTURE_TMC_GREEN
    int TEXTURE_RAILWAY -> TEXTURE_RAILWAY
    int AM_DATA_BASEMAP -> AM_DATA_BASEMAP
    int AM_DATA_GEO_BUILDING -> AM_DATA_GEO_BUILDING
    int AM_DATA_BMP_BASEMAP -> AM_DATA_BMP_BASEMAP
    int AM_DATA_SATELLITE -> AM_DATA_SATELLITE
    int AM_DATA_VEC_TMC -> AM_DATA_VEC_TMC
    int AM_DATA_SCREEN -> AM_DATA_SCREEN
    int AM_DATA_MODEL -> AM_DATA_MODEL
    int MAPRENDER_ENTER -> MAPRENDER_ENTER
    int MAPRENDER_BASEMAPBEGIN -> MAPRENDER_BASEMAPBEGIN
    int MAPRENDER_BUILDINGBEGIN -> MAPRENDER_BUILDINGBEGIN
    int MAPRENDER_LABELSBEGIN -> MAPRENDER_LABELSBEGIN
    int MAPRENDER_RENDEROVER -> MAPRENDER_RENDEROVER
    int MAPRENDER_NOMORENEEDRENDER -> MAPRENDER_NOMORENEEDRENDER
    android.view.View view -> view
    com.autonavi.amap.mapcore.IMapCallback mMapcallback -> mMapcallback
    int native_instance -> native_instance
    javax.microedition.khronos.opengles.GL10 mGL -> mGL
    void setGL(javax.microedition.khronos.opengles.GL10) -> setGL
    void setMapCallback(com.autonavi.amap.mapcore.IMapCallback) -> setMapCallback
    void surfaceCreate(javax.microedition.khronos.opengles.GL10) -> surfaceCreate
    byte[] OnMapCharsWidthsRequired(int[],int,int) -> OnMapCharsWidthsRequired
    void surfaceChange(javax.microedition.khronos.opengles.GL10,int,int) -> surfaceChange
    void drawFrame(javax.microedition.khronos.opengles.GL10) -> drawFrame
    void setStyleData(byte[],int) -> setStyleData
    void setInternaltexture(byte[],int) -> setInternaltexture
    int getInstanceHandle() -> getInstanceHandle
    com.autonavi.amap.mapcore.MapProjection getMapstate() -> getMapstate
    void setMapstate(com.autonavi.amap.mapcore.MapProjection) -> setMapstate
    void setParameter(int,int,int,int,int) -> setParameter
    void putMapData(byte[],int,int,int) -> putMapData
    void putCharbitmap(int,byte[]) -> putCharbitmap
    void OnMapSurfaceCreate() -> OnMapSurfaceCreate
    void OnMapSurfaceRenderer(int) -> OnMapSurfaceRenderer
    void OnMapSufaceChanged(int,int) -> OnMapSufaceChanged
    void OnMapProcessEvent() -> OnMapProcessEvent
    void OnMapDestory() -> OnMapDestory
    void OnMapDataRequired(int,java.lang.String[]) -> OnMapDataRequired
    void OnMapLabelsRequired(int[],int) -> OnMapLabelsRequired
    void OnMapReferencechanged(java.lang.String,java.lang.String) -> OnMapReferencechanged
    void destroy() -> destroy
    int nativeNewInstance(java.lang.String) -> nativeNewInstance
    void nativeDestroy(int) -> nativeDestroy
    void nativeSetStyleData(int,byte[],int) -> nativeSetStyleData
    void nativeSetInternaltexture(int,byte[],int) -> nativeSetInternaltexture
    void nativeSurfaceCreate(int,com.autonavi.amap.mapcore.MapCore) -> nativeSurfaceCreate
    void nativeSurfaceChange(int,com.autonavi.amap.mapcore.MapCore,int,int) -> nativeSurfaceChange
    void nativeSurfaceRenderMap(int,com.autonavi.amap.mapcore.MapCore) -> nativeSurfaceRenderMap
    void nativeSetMapstate(int,int) -> nativeSetMapstate
    int nativeGetMapstate(int) -> nativeGetMapstate
    void nativeSetparameter(int,int,int,int,int,int) -> nativeSetparameter
    void nativePutMapdata(int,int,byte[]) -> nativePutMapdata
    void nativePutCharbitmap(int,int,byte[]) -> nativePutCharbitmap
com.autonavi.amap.mapcore.MapLoader -> com.autonavi.amap.mapcore.MapLoader:
    com.autonavi.amap.mapcore.BaseMapCallImplement mMapCallback -> mMapCallback
    com.autonavi.amap.mapcore.MapCore mMapCore -> mMapCore
    java.util.ArrayList mapTiles -> mapTiles
    boolean mCanceled -> mCanceled
    long createtime -> createtime
    int mapLevel -> mapLevel
    byte[] recievedDataBuffer -> recievedDataBuffer
    int recievedDataSize -> recievedDataSize
    int nextImgDataLength -> nextImgDataLength
    boolean recievedHeader -> recievedHeader
    boolean inRequest -> inRequest
    int datasource -> datasource
    void destory() -> destory
    java.lang.String getGridParma() -> getGridParma
    void OnException(int) -> OnException
    void doRequest() -> doRequest
    boolean isRequestValid() -> isRequestValid
    void onConnectionError(com.autonavi.amap.mapcore.MapLoader,int,java.lang.String) -> onConnectionError
    void onConnectionOpened(com.autonavi.amap.mapcore.MapLoader) -> onConnectionOpened
    void addReuqestTiles(com.autonavi.amap.mapcore.MapSourceGridData) -> addReuqestTiles
    void onConnectionOver(com.autonavi.amap.mapcore.MapLoader) -> onConnectionOver
    void onConnectionRecieveData(com.autonavi.amap.mapcore.MapLoader,int,byte[],int) -> onConnectionRecieveData
    void processRecivedData() -> processRecivedData
    void processRecivedTileData(byte[],int,int) -> processRecivedTileData
    void processRecivedTileDataBmp(byte[],int,int) -> processRecivedTileDataBmp
    void processRecivedTileDataVTmc(byte[],int,int) -> processRecivedTileDataVTmc
    void processRecivedModels(byte[],int,int) -> processRecivedModels
com.autonavi.amap.mapcore.MapProjection -> com.autonavi.amap.mapcore.MapProjection:
    int native_instance -> native_instance
    boolean m_bNewInstance -> m_bNewInstance
    void finalize() -> finalize
    int getInstanceHandle() -> getInstanceHandle
    void getBound(com.autonavi.amap.mapcore.IPoint) -> getBound
    void setGeoCenter(int,int) -> setGeoCenter
    void getGeoCenter(com.autonavi.amap.mapcore.IPoint) -> getGeoCenter
    void setMapCenter(float,float) -> setMapCenter
    void getMapCenter(com.autonavi.amap.mapcore.FPoint) -> getMapCenter
    void setMapZoomer(float) -> setMapZoomer
    float getMapZoomer() -> getMapZoomer
    void setMapAngle(float) -> setMapAngle
    float getMapAngle() -> getMapAngle
    void setCameraHeaderAngle(float) -> setCameraHeaderAngle
    float getCameraHeaderAngle() -> getCameraHeaderAngle
    void geo2Map(int,int,com.autonavi.amap.mapcore.FPoint) -> geo2Map
    void map2Win(float,float,com.autonavi.amap.mapcore.IPoint) -> map2Win
    void win2Map(int,int,com.autonavi.amap.mapcore.FPoint) -> win2Map
    float getMapLenWithWinbyY(int,int) -> getMapLenWithWinbyY
    float getMapLenWithWin(int) -> getMapLenWithWin
    void map2Geo(float,float,com.autonavi.amap.mapcore.IPoint) -> map2Geo
    void setCenterWithMap(float,float) -> setCenterWithMap
    void getCenterMap(com.autonavi.amap.mapcore.FPoint) -> getCenterMap
    void lonlat2Geo(double,double,com.autonavi.amap.mapcore.IPoint) -> lonlat2Geo
    void geo2LonLat(int,int,com.autonavi.amap.mapcore.DPoint) -> geo2LonLat
    int nativeCreate(int) -> nativeCreate
    void nativeDestroy(int) -> nativeDestroy
    void nativeGetBound(int,com.autonavi.amap.mapcore.IPoint) -> nativeGetBound
    void nativeSetGeoCenter(int,int,int) -> nativeSetGeoCenter
    void nativeGetGeoCenter(int,com.autonavi.amap.mapcore.IPoint) -> nativeGetGeoCenter
    void nativeSetMapCenter(int,float,float) -> nativeSetMapCenter
    void nativeGetMapCenter(int,com.autonavi.amap.mapcore.FPoint) -> nativeGetMapCenter
    void nativeSetMapZoomer(int,float) -> nativeSetMapZoomer
    float nativeGetMapZoomer(int) -> nativeGetMapZoomer
    void nativeSetMapAngle(int,float) -> nativeSetMapAngle
    float nativeGetMapAngle(int) -> nativeGetMapAngle
    void nativeSetCameraHeaderAngle(int,float) -> nativeSetCameraHeaderAngle
    float nativeGetCameraHeaderAngle(int) -> nativeGetCameraHeaderAngle
    void nativeGeo2Map(int,int,int,com.autonavi.amap.mapcore.FPoint) -> nativeGeo2Map
    void nativeMap2Win(int,float,float,com.autonavi.amap.mapcore.IPoint) -> nativeMap2Win
    void nativeWin2Map(int,int,int,com.autonavi.amap.mapcore.FPoint) -> nativeWin2Map
    float nativeGetMapLenWithWinbyY(int,int,int) -> nativeGetMapLenWithWinbyY
    float nativeGetMapLenWithWin(int,int) -> nativeGetMapLenWithWin
    void nativeMap2Geo(int,float,float,com.autonavi.amap.mapcore.IPoint) -> nativeMap2Geo
    void nativeSetCenterWithMap(int,float,float) -> nativeSetCenterWithMap
    void nativeGetCenterMap(int,com.autonavi.amap.mapcore.FPoint) -> nativeGetCenterMap
    void nativeLonLat2Geo(double,double,com.autonavi.amap.mapcore.IPoint) -> nativeLonLat2Geo
    void nativeGeo2LonLat(int,int,com.autonavi.amap.mapcore.DPoint) -> nativeGeo2LonLat
com.autonavi.amap.mapcore.MapSourceGridData -> com.autonavi.amap.mapcore.MapSourceGridData:
    java.lang.String gridName -> gridName
    int sourceType -> sourceType
    java.lang.String getKeyGridName() -> getKeyGridName
    int getSourceType() -> getSourceType
    java.lang.String getGridName() -> getGridName
com.autonavi.amap.mapcore.TextTextureGenerator -> com.autonavi.amap.mapcore.TextTextureGenerator:
    android.graphics.Paint paint -> paint
    int TEXT_FONTSIZE -> TEXT_FONTSIZE
    int AN_LABEL_MAXCHARINLINE -> AN_LABEL_MAXCHARINLINE
    int AN_LABEL_MULITYLINE_SPAN -> AN_LABEL_MULITYLINE_SPAN
    int ALIGNCENTER -> ALIGNCENTER
    int ALIGNLEFT -> ALIGNLEFT
    int ALIGNRIGHT -> ALIGNRIGHT
    int textureWidth -> textureWidth
    int textureHeight -> textureHeight
    int nMaxSizePerline -> nMaxSizePerline
    int nLabelLinesize -> nLabelLinesize
    int GetNearstSize2N(int) -> GetNearstSize2N
    android.graphics.Paint newPaint(java.lang.String,int,int) -> newPaint
    float getStringWidth(java.lang.String) -> getStringWidth
    float getFullWidth(float[]) -> getFullWidth
    byte[] getTextPixelBuffer(int) -> getTextPixelBuffer
    byte[] getPixels(android.graphics.Bitmap) -> getPixels
    void generaAsccIITexturePng() -> generaAsccIITexturePng
    byte[] getCharsWidths(int[]) -> getCharsWidths
    byte[] getCharWidths() -> getCharWidths
com.autonavi.amap.mapcore.VTMCDataCache -> com.autonavi.amap.mapcore.VTMCDataCache:
    int MAXSIZE -> MAXSIZE
    int MAX_EXPIREDTIME -> MAX_EXPIREDTIME
    java.util.Hashtable vtmcHs -> vtmcHs
    java.util.ArrayList vtmcList -> vtmcList
    com.autonavi.amap.mapcore.VTMCDataCache instance -> instance
    com.autonavi.amap.mapcore.VTMCDataCache getInstance() -> getInstance
    void reset() -> reset
    com.autonavi.amap.mapcore.e GetData(java.lang.String) -> GetData
    void putData(java.lang.String,byte[]) -> putData
com.autonavi.amap.mapcore.a -> com.autonavi.amap.mapcore.a:
    int a -> a
    java.lang.String b -> b
com.autonavi.amap.mapcore.b -> com.autonavi.amap.mapcore.b:
    java.lang.String a -> a
    int b -> b
com.autonavi.amap.mapcore.c -> com.autonavi.amap.mapcore.c:
    int a -> a
    void a(java.lang.Object) -> a
    java.lang.Object a() -> a
    boolean b() -> b
    void clear() -> clear
com.autonavi.amap.mapcore.d -> com.autonavi.amap.mapcore.d:
    java.util.Hashtable d -> d
    int a -> a
    long b -> b
    boolean c -> c
    void a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a() -> a
com.autonavi.amap.mapcore.e -> com.autonavi.amap.mapcore.e:
    byte[] a -> a
    java.lang.String b -> b
    int c -> c
com.baidu.android.pushservice.BasicPushNotificationBuilder -> com.baidu.android.pushservice.BasicPushNotificationBuilder:
    com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder a -> a
    com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder getInner() -> getInner
    android.app.Notification construct(android.content.Context) -> construct
    com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder a(com.baidu.android.pushservice.BasicPushNotificationBuilder,com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder) -> a
com.baidu.android.pushservice.BasicPushNotificationBuilder$1 -> com.baidu.android.pushservice.BasicPushNotificationBuilder$1:
    android.content.Context a -> a
    com.baidu.android.pushservice.BasicPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder -> com.baidu.android.pushservice.CustomPushNotificationBuilder:
    boolean a -> a
    com.baidu.android.pushservice.apiproxy.BridgeCustomPushNotificationBuilder getInner() -> getInner
    void setLayoutDrawable(int) -> setLayoutDrawable
    android.app.Notification construct(android.content.Context) -> construct
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    void a(int) -> a
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder getInner() -> getInner
    boolean a(com.baidu.android.pushservice.CustomPushNotificationBuilder,boolean) -> a
    boolean a(com.baidu.android.pushservice.CustomPushNotificationBuilder) -> a
    void a(com.baidu.android.pushservice.CustomPushNotificationBuilder,int) -> a
com.baidu.android.pushservice.CustomPushNotificationBuilder$1 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$1:
    android.content.Context a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    com.baidu.android.pushservice.CustomPushNotificationBuilder f -> f
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$2 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$2:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$3 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$3:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$4 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$4:
    java.lang.String a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$5 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$5:
    java.lang.String a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$6 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$6:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$7 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$7:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$8 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$8:
    android.net.Uri a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$9 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$9:
    long[] a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.IPushLightappListener -> com.baidu.android.pushservice.IPushLightappListener:
    void initialComplete(com.baidu.android.pushservice.PushLightapp) -> initialComplete
    void onSubscribeResult(int,java.lang.String) -> onSubscribeResult
    void onUnsubscribeResult(int,java.lang.String) -> onUnsubscribeResult
    void onUnbindLightResult(int,java.lang.String) -> onUnbindLightResult
com.baidu.android.pushservice.Internal -> com.baidu.android.pushservice.Internal:
    void enablePushService(android.content.Context) -> enablePushService
    void disablePushService(android.content.Context) -> disablePushService
    void disablePushConnection(android.content.Context) -> disablePushConnection
    void enablePushConnection(android.content.Context) -> enablePushConnection
    void createBdussIntent(android.content.Context) -> createBdussIntent
com.baidu.android.pushservice.Internal$1 -> com.baidu.android.pushservice.Internal$1:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$2 -> com.baidu.android.pushservice.Internal$2:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$3 -> com.baidu.android.pushservice.Internal$3:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$4 -> com.baidu.android.pushservice.Internal$4:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$5 -> com.baidu.android.pushservice.Internal$5:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.LoadExecutor -> com.baidu.android.pushservice.LoadExecutor:
    java.lang.String a -> a
    boolean loadPush(android.content.Context) -> loadPush
    boolean isPushLibLoaded(android.content.Context) -> isPushLibLoaded
    void excuteMethod(java.lang.Runnable,android.content.Context) -> excuteMethod
com.baidu.android.pushservice.LoadExecutor$1 -> com.baidu.android.pushservice.LoadExecutor$1:
    android.content.Context a -> a
    java.lang.Runnable b -> b
    void run() -> run
com.baidu.android.pushservice.PushConstants -> com.baidu.android.pushservice.PushConstants:
    java.lang.String EXTRA_PUSH_MESSAGE -> EXTRA_PUSH_MESSAGE
    java.lang.String EXTRA_PUSH_MESSAGE_STRING -> EXTRA_PUSH_MESSAGE_STRING
    java.lang.String ACTION_MESSAGE -> ACTION_MESSAGE
    java.lang.String ACTION_SDK_MESSAGE -> ACTION_SDK_MESSAGE
    java.lang.String ACTION_FB_MESSAGE -> ACTION_FB_MESSAGE
    java.lang.String ACTION_METHOD -> ACTION_METHOD
    java.lang.String ACTION_LAPP_RECEIVE -> ACTION_LAPP_RECEIVE
    java.lang.String ACTION_RECEIVE -> ACTION_RECEIVE
    java.lang.String ACTION_RECEIVER_NOTIFICATION_CLICK -> ACTION_RECEIVER_NOTIFICATION_CLICK
    java.lang.String ACTION_SDK_RECEIVE -> ACTION_SDK_RECEIVE
    java.lang.String ACTION_WEB_RECEIVE -> ACTION_WEB_RECEIVE
    java.lang.String EXTRA_WEB_BIND_API_KEY -> EXTRA_WEB_BIND_API_KEY
    java.lang.String ACTION_LAPP_MESSAGE -> ACTION_LAPP_MESSAGE
    java.lang.String METHOD_LAPP_BIND_INTENT -> METHOD_LAPP_BIND_INTENT
    java.lang.String METHOD_LAPP_UNBIND -> METHOD_LAPP_UNBIND
    java.lang.String METHOD_GET_LAPP_BIND_STATE -> METHOD_GET_LAPP_BIND_STATE
    java.lang.String EXTRA_LAPP_BIND_STATE -> EXTRA_LAPP_BIND_STATE
    java.lang.String METHOD_SET_LAPP_TAGS -> METHOD_SET_LAPP_TAGS
    java.lang.String METHOD_DEL_LAPP_TAGS -> METHOD_DEL_LAPP_TAGS
    int LOGIN_TYPE_LIGHT_APP_API_KEY -> LOGIN_TYPE_LIGHT_APP_API_KEY
    java.lang.String EXTRA_METHOD -> EXTRA_METHOD
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String EXTRA_ERROR_CODE -> EXTRA_ERROR_CODE
    java.lang.String EXTRA_CONTENT -> EXTRA_CONTENT
    java.lang.String EXTRA_TAGS_LIST -> EXTRA_TAGS_LIST
    java.lang.String EXTRA_APP_ID -> EXTRA_APP_ID
    java.lang.String EXTRA_USER_ID -> EXTRA_USER_ID
    java.lang.String EXTRA_APP -> EXTRA_APP
    java.lang.String EXTRA_ACCESS_TOKEN -> EXTRA_ACCESS_TOKEN
    java.lang.String EXTRA_API_KEY -> EXTRA_API_KEY
    java.lang.String EXTRA_BIND_NAME -> EXTRA_BIND_NAME
    java.lang.String EXTRA_BIND_STATUS -> EXTRA_BIND_STATUS
    java.lang.String EXTRA_PUSH_SDK_VERSION -> EXTRA_PUSH_SDK_VERSION
    java.lang.String EXTRA_MSG_KEY -> EXTRA_MSG_KEY
    java.lang.String EXTRA_MSG -> EXTRA_MSG
    java.lang.String EXTRA_CB_URL -> EXTRA_CB_URL
    java.lang.String EXTRA_TIMESTAMP -> EXTRA_TIMESTAMP
    java.lang.String EXTRA_MSGID -> EXTRA_MSGID
    java.lang.String EXTRA_HASHCODE -> EXTRA_HASHCODE
    java.lang.String EXTRA_OPENTYPE -> EXTRA_OPENTYPE
    java.lang.String EXTRA_EXTRA -> EXTRA_EXTRA
    int OPEN_BY_USER -> OPEN_BY_USER
    int OPEN_BY_NOTIFICATION -> OPEN_BY_NOTIFICATION
    int BIND_STATUS_ONLINE -> BIND_STATUS_ONLINE
    int BIND_STATUS_OFFLINE -> BIND_STATUS_OFFLINE
    java.lang.String METHOD_SEND_MSG_TO_SERVER -> METHOD_SEND_MSG_TO_SERVER
    java.lang.String METHOD_SEND_MSG_TO_USER -> METHOD_SEND_MSG_TO_USER
    java.lang.String METHOD_APPSTART -> METHOD_APPSTART
    java.lang.String METHOD_APPSTOP -> METHOD_APPSTOP
    java.lang.String METHOD_SEND -> METHOD_SEND
    java.lang.String METHOD_BIND -> METHOD_BIND
    java.lang.String METHOD_UNBIND -> METHOD_UNBIND
    java.lang.String EXTRA_FETCH_TYPE -> EXTRA_FETCH_TYPE
    java.lang.String EXTRA_FETCH_NUM -> EXTRA_FETCH_NUM
    java.lang.String METHOD_FETCH -> METHOD_FETCH
    java.lang.String METHOD_COUNT -> METHOD_COUNT
    java.lang.String EXTRA_MSG_IDS -> EXTRA_MSG_IDS
    java.lang.String METHOD_DELETE -> METHOD_DELETE
    java.lang.String METHOD_GBIND -> METHOD_GBIND
    java.lang.String EXTRA_GID -> EXTRA_GID
    java.lang.String METHOD_SET_TAGS -> METHOD_SET_TAGS
    java.lang.String METHOD_DEL_TAGS -> METHOD_DEL_TAGS
    java.lang.String EXTRA_TAGS -> EXTRA_TAGS
    java.lang.String EXTRA_NOTIFICATION_TITLE -> EXTRA_NOTIFICATION_TITLE
    java.lang.String EXTRA_NOTIFICATION_CONTENT -> EXTRA_NOTIFICATION_CONTENT
    java.lang.String METHOD_GUNBIND -> METHOD_GUNBIND
    java.lang.String METHOD_GINFO -> METHOD_GINFO
    java.lang.String METHOD_GLIST -> METHOD_GLIST
    java.lang.String METHOD_LISTTAGS -> METHOD_LISTTAGS
    java.lang.String METHOD_LIST_LAPP_TAGS -> METHOD_LIST_LAPP_TAGS
    java.lang.String METHOD_FETCHGMSG -> METHOD_FETCHGMSG
    java.lang.String EXTRA_GROUP_FETCH_TYPE -> EXTRA_GROUP_FETCH_TYPE
    java.lang.String EXTRA_GROUP_FETCH_NUM -> EXTRA_GROUP_FETCH_NUM
    java.lang.String METHOD_COUNTGMSG -> METHOD_COUNTGMSG
    java.lang.String METHOD_ONLINE -> METHOD_ONLINE
    int ERROR_SUCCESS -> ERROR_SUCCESS
    int ERROR_NETWORK_ERROR -> ERROR_NETWORK_ERROR
    int ERROR_SERVICE_NOT_AVAILABLE -> ERROR_SERVICE_NOT_AVAILABLE
    int ERROR_SERVICE_NOT_AVAILABLE_TEMP -> ERROR_SERVICE_NOT_AVAILABLE_TEMP
    int ERROR_UNKNOWN -> ERROR_UNKNOWN
    int ERROR_SERVER_INTERNAL_ERROR -> ERROR_SERVER_INTERNAL_ERROR
    int ERROR_METHOD_ERROR -> ERROR_METHOD_ERROR
    int ERROR_PARAMS_ERROR -> ERROR_PARAMS_ERROR
    int ERROR_AUTHENTICATION_FAILED -> ERROR_AUTHENTICATION_FAILED
    int ERROR_QUOTA_USE_UP -> ERROR_QUOTA_USE_UP
    int ERROR_DATA_NOT_FOUND -> ERROR_DATA_NOT_FOUND
    int ERROR_TIME_EXPIRES -> ERROR_TIME_EXPIRES
    int ERROR_CHANNEL_TOKEN_TIMEOUT -> ERROR_CHANNEL_TOKEN_TIMEOUT
    int ERROR_BIND_NOT_EXIST -> ERROR_BIND_NOT_EXIST
    int ERROR_BIND_OVERLOAD -> ERROR_BIND_OVERLOAD
    int LOGIN_TYPE_API_KEY -> LOGIN_TYPE_API_KEY
    int LOGIN_TYPE_ACCESS_TOKEN -> LOGIN_TYPE_ACCESS_TOKEN
    int LOGIN_TYPE_BDUSS -> LOGIN_TYPE_BDUSS
    int LOGIN_TYPE_UNKNOWN -> LOGIN_TYPE_UNKNOWN
    int ERROR_AIDL_FAIL -> ERROR_AIDL_FAIL
    java.lang.String ERROR_AIDL_FAIL_EXCEPTION -> ERROR_AIDL_FAIL_EXCEPTION
    java.lang.String ERROR_AIDL_FAIL_NO_PUSHSERVICE -> ERROR_AIDL_FAIL_NO_PUSHSERVICE
    short ORIGINAL_VERSION -> ORIGINAL_VERSION
    int a -> a
    java.lang.String b -> b
    java.lang.String rsaEncrypt(java.lang.String) -> rsaEncrypt
    android.content.Intent createMethodIntent(android.content.Context) -> createMethodIntent
    void restartPushService(android.content.Context) -> restartPushService
    void startPushService(android.content.Context) -> startPushService
    java.lang.String getErrorMsg(int) -> getErrorMsg
    byte[] a(byte[],java.lang.String,int) -> a
com.baidu.android.pushservice.PushLightapp -> com.baidu.android.pushservice.PushLightapp:
    int b -> b
    boolean c -> c
    java.lang.String d -> d
    com.baidu.android.pushservice.PushLightapp e -> e
    com.baidu.android.pushservice.IPushLightappListener f -> f
    android.content.Context g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    boolean k -> k
    int l -> l
    int m -> m
    int n -> n
    com.baidu.android.pushservice.aidl.IPushService a -> a
    android.content.ServiceConnection o -> o
    java.lang.String ACTION_REGISTER_SYNC -> ACTION_REGISTER_SYNC
    java.lang.String SHARED_NAME_SETTINGS -> SHARED_NAME_SETTINGS
    int CONTEXT_FLAG_MODE_MULTI_PROCESS -> CONTEXT_FLAG_MODE_MULTI_PROCESS
    java.lang.String KEY_PRIORITY2 -> KEY_PRIORITY2
    java.lang.String SETTINGS_KEY_CURRENT_PACKAGE_NAME -> SETTINGS_KEY_CURRENT_PACKAGE_NAME
    void e() -> e
    com.baidu.android.pushservice.PushLightapp a(android.content.Context) -> a
    void getInstanceAsync(android.content.Context,com.baidu.android.pushservice.IPushLightappListener) -> getInstanceAsync
    boolean isReady() -> isReady
    void destroy() -> destroy
    void f() -> f
    void subscribeLight(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.IPushLightappListener) -> subscribeLight
    void unsubscribeLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> unsubscribeLight
    void unbindLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> unbindLight
    java.lang.String getSubcribeApps() -> getSubcribeApps
    java.lang.String getSubscribedAppids() -> getSubscribedAppids
    java.lang.String getSubscribedAppinfos(java.lang.String) -> getSubscribedAppinfos
    java.lang.String getMsgs(java.lang.String,int,boolean,int,int) -> getMsgs
    int getUnreadMsgNumber(java.lang.String,int) -> getUnreadMsgNumber
    int setMsgRead(java.lang.String) -> setMsgRead
    int setAllMsgRead(java.lang.String,int) -> setAllMsgRead
    int deleteMsg(java.lang.String) -> deleteMsg
    int deleteAllMsg(java.lang.String,int) -> deleteAllMsg
    boolean register(java.lang.String,java.lang.String) -> register
    boolean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> register
    boolean updateBlacklist(java.lang.String,java.lang.String,int) -> updateBlacklist
    boolean removeBlacklist(java.lang.String,java.lang.String) -> removeBlacklist
    boolean setNotifySwitch(java.lang.String,boolean) -> setNotifySwitch
    int getNewMsgNum(java.lang.String) -> getNewMsgNum
    boolean clearNewMsgNum(java.lang.String) -> clearNewMsgNum
    int g() -> g
    java.lang.String b(android.content.Context) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.util.List getFriendPackages(android.content.Context) -> getFriendPackages
    boolean b(android.content.Context,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
    int a() -> a
    boolean b() -> b
    boolean a(com.baidu.android.pushservice.PushLightapp) -> a
    void b(com.baidu.android.pushservice.PushLightapp) -> b
    boolean a(com.baidu.android.pushservice.PushLightapp,boolean) -> a
    int a(int) -> a
    int c(com.baidu.android.pushservice.PushLightapp) -> c
    com.baidu.android.pushservice.IPushLightappListener c() -> c
    com.baidu.android.pushservice.PushLightapp d() -> d
    android.content.Context d(com.baidu.android.pushservice.PushLightapp) -> d
    com.baidu.android.pushservice.PushLightapp e(com.baidu.android.pushservice.PushLightapp) -> e
    void f(com.baidu.android.pushservice.PushLightapp) -> f
com.baidu.android.pushservice.PushLightapp$1 -> com.baidu.android.pushservice.PushLightapp$1:
    com.baidu.android.pushservice.PushLightapp a -> a
    void run() -> run
com.baidu.android.pushservice.PushLightapp$2 -> com.baidu.android.pushservice.PushLightapp$2:
    com.baidu.android.pushservice.PushLightapp a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.android.pushservice.PushLightapp$3 -> com.baidu.android.pushservice.PushLightapp$3:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.PushLightapp$4 -> com.baidu.android.pushservice.PushLightapp$4:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.PushLightapp$5 -> com.baidu.android.pushservice.PushLightapp$5:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
com.baidu.android.pushservice.PushManager -> com.baidu.android.pushservice.PushManager:
    java.lang.String a -> a
    void init(android.content.Context,java.lang.String,java.lang.String) -> init
    void init(android.content.Context,java.lang.String) -> init
    void initFromAKSK(android.content.Context,java.lang.String) -> initFromAKSK
    void startWork(android.content.Context,java.lang.String,java.lang.String) -> startWork
    void startWork(android.content.Context,int,java.lang.String) -> startWork
    void sdkStartWork(android.content.Context,java.lang.String,int) -> sdkStartWork
    void sdkUnbind(android.content.Context,java.lang.String) -> sdkUnbind
    void setSDKTags(android.content.Context,java.lang.String,java.util.List) -> setSDKTags
    void setLappTags(android.content.Context,java.lang.String,java.util.List) -> setLappTags
    void stopWork(android.content.Context) -> stopWork
    void resumeWork(android.content.Context) -> resumeWork
    boolean isPushEnabled(android.content.Context) -> isPushEnabled
    void activityStarted(android.app.Activity) -> activityStarted
    void activityStoped(android.app.Activity) -> activityStoped
    void setAccessToken(android.content.Context,java.lang.String) -> setAccessToken
    void setApiKey(android.content.Context,java.lang.String) -> setApiKey
    void setBduss(android.content.Context,java.lang.String) -> setBduss
    void bind(android.content.Context,int) -> bind
    void unbind(android.content.Context) -> unbind
    void fetchMessages(android.content.Context,int,int) -> fetchMessages
    void getMessageCounts(android.content.Context) -> getMessageCounts
    void deleteMessages(android.content.Context,java.lang.String[]) -> deleteMessages
    void sendMsgToUser(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMsgToUser
    void bindGroup(android.content.Context,java.lang.String) -> bindGroup
    void setTags(android.content.Context,java.util.List) -> setTags
    void listTags(android.content.Context) -> listTags
    void listSDKTags(android.content.Context,java.lang.String) -> listSDKTags
    void listLappTags(android.content.Context,java.lang.String) -> listLappTags
    void delTags(android.content.Context,java.util.List) -> delTags
    void delSDKTags(android.content.Context,java.lang.String,java.util.List) -> delSDKTags
    void delLappTags(android.content.Context,java.lang.String,java.util.List) -> delLappTags
    void unbindGroup(android.content.Context,java.lang.String) -> unbindGroup
    void getGroupInfo(android.content.Context,java.lang.String) -> getGroupInfo
    void getGroupList(android.content.Context) -> getGroupList
    void fetchGroupMessages(android.content.Context,java.lang.String,int,int) -> fetchGroupMessages
    void getGroupMessageCounts(android.content.Context,java.lang.String) -> getGroupMessageCounts
    void setDefaultNotificationBuilder(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> setDefaultNotificationBuilder
    void setNotificationBuilder(android.content.Context,int,com.baidu.android.pushservice.PushNotificationBuilder) -> setNotificationBuilder
    void setMediaNotificationBuilder(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> setMediaNotificationBuilder
    boolean isConnected(android.content.Context) -> isConnected
    boolean a(android.content.Context) -> a
    void tryConnect(android.content.Context) -> tryConnect
    void enableLbs(android.content.Context) -> enableLbs
    void disableLbs(android.content.Context) -> disableLbs
    void getLappBindState(android.content.Context,java.lang.String) -> getLappBindState
    java.util.HashMap getAppNotiMap(android.content.Context) -> getAppNotiMap
    void saveAppNotiMap(android.content.Context,java.util.HashMap) -> saveAppNotiMap
    void setNoDisturbMode(android.content.Context,int,int,int,int) -> setNoDisturbMode
com.baidu.android.pushservice.PushManager$1 -> com.baidu.android.pushservice.PushManager$1:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$10 -> com.baidu.android.pushservice.PushManager$10:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$11 -> com.baidu.android.pushservice.PushManager$11:
    android.content.Context a -> a
    int b -> b
    int c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$12 -> com.baidu.android.pushservice.PushManager$12:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$13 -> com.baidu.android.pushservice.PushManager$13:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$14 -> com.baidu.android.pushservice.PushManager$14:
    android.content.Context a -> a
    java.lang.String[] b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$15 -> com.baidu.android.pushservice.PushManager$15:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void run() -> run
com.baidu.android.pushservice.PushManager$16 -> com.baidu.android.pushservice.PushManager$16:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$17 -> com.baidu.android.pushservice.PushManager$17:
    android.content.Context a -> a
    java.util.List b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$18 -> com.baidu.android.pushservice.PushManager$18:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$19 -> com.baidu.android.pushservice.PushManager$19:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$2 -> com.baidu.android.pushservice.PushManager$2:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$20 -> com.baidu.android.pushservice.PushManager$20:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$21 -> com.baidu.android.pushservice.PushManager$21:
    android.content.Context a -> a
    java.util.List b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$22 -> com.baidu.android.pushservice.PushManager$22:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$23 -> com.baidu.android.pushservice.PushManager$23:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$24 -> com.baidu.android.pushservice.PushManager$24:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$25 -> com.baidu.android.pushservice.PushManager$25:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$26 -> com.baidu.android.pushservice.PushManager$26:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$27 -> com.baidu.android.pushservice.PushManager$27:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$28 -> com.baidu.android.pushservice.PushManager$28:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    void run() -> run
com.baidu.android.pushservice.PushManager$29 -> com.baidu.android.pushservice.PushManager$29:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$3 -> com.baidu.android.pushservice.PushManager$3:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$30 -> com.baidu.android.pushservice.PushManager$30:
    android.content.Context a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$31 -> com.baidu.android.pushservice.PushManager$31:
    android.content.Context a -> a
    int b -> b
    com.baidu.android.pushservice.PushNotificationBuilder c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$32 -> com.baidu.android.pushservice.PushManager$32:
    android.content.Context a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$33 -> com.baidu.android.pushservice.PushManager$33:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$34 -> com.baidu.android.pushservice.PushManager$34:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$35 -> com.baidu.android.pushservice.PushManager$35:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$36 -> com.baidu.android.pushservice.PushManager$36:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$37 -> com.baidu.android.pushservice.PushManager$37:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$38 -> com.baidu.android.pushservice.PushManager$38:
    java.util.HashMap a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$39 -> com.baidu.android.pushservice.PushManager$39:
    android.content.Context a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    void run() -> run
com.baidu.android.pushservice.PushManager$4 -> com.baidu.android.pushservice.PushManager$4:
    android.app.Activity a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$40 -> com.baidu.android.pushservice.PushManager$40:
    android.content.Context a -> a
    int b -> b
    java.lang.String c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$41 -> com.baidu.android.pushservice.PushManager$41:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$42 -> com.baidu.android.pushservice.PushManager$42:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$43 -> com.baidu.android.pushservice.PushManager$43:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$44 -> com.baidu.android.pushservice.PushManager$44:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$5 -> com.baidu.android.pushservice.PushManager$5:
    android.app.Activity a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$6 -> com.baidu.android.pushservice.PushManager$6:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$7 -> com.baidu.android.pushservice.PushManager$7:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$8 -> com.baidu.android.pushservice.PushManager$8:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$9 -> com.baidu.android.pushservice.PushManager$9:
    android.content.Context a -> a
    int b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder -> com.baidu.android.pushservice.PushNotificationBuilder:
    boolean a -> a
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder mInstance -> mInstance
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder getInner() -> getInner
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    void a(int) -> a
    android.app.Notification construct(android.content.Context) -> construct
    boolean a(com.baidu.android.pushservice.PushNotificationBuilder,boolean) -> a
    boolean a(com.baidu.android.pushservice.PushNotificationBuilder) -> a
    void a(com.baidu.android.pushservice.PushNotificationBuilder,int) -> a
com.baidu.android.pushservice.PushNotificationBuilder$1 -> com.baidu.android.pushservice.PushNotificationBuilder$1:
    android.content.Context a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$2 -> com.baidu.android.pushservice.PushNotificationBuilder$2:
    int a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$3 -> com.baidu.android.pushservice.PushNotificationBuilder$3:
    java.lang.String a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$4 -> com.baidu.android.pushservice.PushNotificationBuilder$4:
    java.lang.String a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$5 -> com.baidu.android.pushservice.PushNotificationBuilder$5:
    int a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$6 -> com.baidu.android.pushservice.PushNotificationBuilder$6:
    int a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$7 -> com.baidu.android.pushservice.PushNotificationBuilder$7:
    android.net.Uri a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$8 -> com.baidu.android.pushservice.PushNotificationBuilder$8:
    long[] a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushSettings -> com.baidu.android.pushservice.PushSettings:
    void enableDebugMode(android.content.Context,boolean) -> enableDebugMode
com.baidu.android.pushservice.PushSettings$1 -> com.baidu.android.pushservice.PushSettings$1:
    android.content.Context a -> a
    boolean b -> b
    void run() -> run
com.baidu.android.pushservice.aidl.IPushService -> com.baidu.android.pushservice.aidl.IPushService:
    void subscribeLight(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.aidl.IPushServiceListener) -> subscribeLight
    void unsubscribeLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> unsubscribeLight
    void unbindLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> unbindLight
    java.lang.String getSubcribedApps() -> getSubcribedApps
    java.lang.String getSubscribedAppids() -> getSubscribedAppids
    java.lang.String getSubscribedAppinfos(java.lang.String) -> getSubscribedAppinfos
    java.lang.String getMsgs(java.lang.String,int,boolean,int,int) -> getMsgs
    int getUnreadMsgNumber(java.lang.String,int) -> getUnreadMsgNumber
    int setMsgRead(java.lang.String) -> setMsgRead
    int setAllMsgRead(java.lang.String,int) -> setAllMsgRead
    int deleteMsg(java.lang.String) -> deleteMsg
    int deleteAllMsg(java.lang.String,int) -> deleteAllMsg
    boolean register(java.lang.String,java.lang.String) -> register
    boolean registerRunTime(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> registerRunTime
    boolean updateBlacklist(java.lang.String,java.lang.String,int) -> updateBlacklist
    boolean removeBlacklist(java.lang.String,java.lang.String) -> removeBlacklist
    int getNewMsgNum(java.lang.String) -> getNewMsgNum
    boolean clearNewMsgNum(java.lang.String) -> clearNewMsgNum
    boolean setNotifySwitch(java.lang.String,boolean) -> setNotifySwitch
    int getPushVersion() -> getPushVersion
com.baidu.android.pushservice.aidl.IPushService$Stub -> com.baidu.android.pushservice.aidl.IPushService$Stub:
    java.lang.String u -> u
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    com.baidu.android.pushservice.aidl.IPushService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.android.pushservice.aidl.IPushService$Stub$a -> com.baidu.android.pushservice.aidl.IPushService$Stub$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a() -> a
    void subscribeLight(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.aidl.IPushServiceListener) -> subscribeLight
    void unsubscribeLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> unsubscribeLight
    void unbindLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> unbindLight
    java.lang.String getSubcribedApps() -> getSubcribedApps
    java.lang.String getSubscribedAppids() -> getSubscribedAppids
    java.lang.String getSubscribedAppinfos(java.lang.String) -> getSubscribedAppinfos
    java.lang.String getMsgs(java.lang.String,int,boolean,int,int) -> getMsgs
    int getUnreadMsgNumber(java.lang.String,int) -> getUnreadMsgNumber
    int setMsgRead(java.lang.String) -> setMsgRead
    int setAllMsgRead(java.lang.String,int) -> setAllMsgRead
    int deleteMsg(java.lang.String) -> deleteMsg
    int deleteAllMsg(java.lang.String,int) -> deleteAllMsg
    boolean register(java.lang.String,java.lang.String) -> register
    boolean registerRunTime(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> registerRunTime
    boolean updateBlacklist(java.lang.String,java.lang.String,int) -> updateBlacklist
    boolean removeBlacklist(java.lang.String,java.lang.String) -> removeBlacklist
    int getNewMsgNum(java.lang.String) -> getNewMsgNum
    boolean clearNewMsgNum(java.lang.String) -> clearNewMsgNum
    boolean setNotifySwitch(java.lang.String,boolean) -> setNotifySwitch
    int getPushVersion() -> getPushVersion
com.baidu.android.pushservice.aidl.IPushServiceListener -> com.baidu.android.pushservice.aidl.IPushServiceListener:
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.aidl.IPushServiceListener$Stub -> com.baidu.android.pushservice.aidl.IPushServiceListener$Stub:
    java.lang.String a -> a
    int c -> c
    int d -> d
    int e -> e
    com.baidu.android.pushservice.aidl.IPushServiceListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.android.pushservice.aidl.IPushServiceListener$Stub$a -> com.baidu.android.pushservice.aidl.IPushServiceListener$Stub$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a() -> a
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder -> com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder:
    com.baidu.android.pushservice.internal.BasicPushNotificationBuilder a -> a
    com.baidu.android.pushservice.internal.BasicPushNotificationBuilder getInner() -> getInner
    android.app.Notification construct(android.content.Context) -> construct
com.baidu.android.pushservice.apiproxy.BridgeCustomPushNotificationBuilder -> com.baidu.android.pushservice.apiproxy.BridgeCustomPushNotificationBuilder:
    com.baidu.android.pushservice.internal.CustomPushNotificationBuilder getInner() -> getInner
    void setLayoutDrawable(int) -> setLayoutDrawable
    android.app.Notification construct(android.content.Context) -> construct
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    com.baidu.android.pushservice.internal.PushNotificationBuilder getInner() -> getInner
com.baidu.android.pushservice.apiproxy.BridgeInternal -> com.baidu.android.pushservice.apiproxy.BridgeInternal:
    void enablePushService(android.content.Context) -> enablePushService
    void disablePushService(android.content.Context) -> disablePushService
    void disablePushConnection(android.content.Context) -> disablePushConnection
    void enablePushConnection(android.content.Context) -> enablePushConnection
    void createBdussIntent(android.content.Context) -> createBdussIntent
com.baidu.android.pushservice.apiproxy.BridgePushConstants -> com.baidu.android.pushservice.apiproxy.BridgePushConstants:
    android.content.Intent createMethodIntent(android.content.Context) -> createMethodIntent
    void restartPushService(android.content.Context) -> restartPushService
    void startPushService(android.content.Context) -> startPushService
com.baidu.android.pushservice.apiproxy.BridgePushManager -> com.baidu.android.pushservice.apiproxy.BridgePushManager:
    void init(android.content.Context,java.lang.String,java.lang.String) -> init
    void init(android.content.Context,java.lang.String) -> init
    void initFromAKSK(android.content.Context,java.lang.String) -> initFromAKSK
    void startWork(android.content.Context,java.lang.String,java.lang.String) -> startWork
    void startWork(android.content.Context,int,java.lang.String) -> startWork
    void sdkStartWork(android.content.Context,java.lang.String,int) -> sdkStartWork
    void stopWork(android.content.Context) -> stopWork
    void resumeWork(android.content.Context) -> resumeWork
    boolean isPushEnabled(android.content.Context) -> isPushEnabled
    void activityStarted(android.app.Activity) -> activityStarted
    void activityStoped(android.app.Activity) -> activityStoped
    void setAccessToken(android.content.Context,java.lang.String) -> setAccessToken
    void setApiKey(android.content.Context,java.lang.String) -> setApiKey
    void setBduss(android.content.Context,java.lang.String) -> setBduss
    void bind(android.content.Context,int) -> bind
    void unbind(android.content.Context) -> unbind
    void fetchMessages(android.content.Context,int,int) -> fetchMessages
    void getMessageCounts(android.content.Context) -> getMessageCounts
    void deleteMessages(android.content.Context,java.lang.String[]) -> deleteMessages
    void sendMsgToUser(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMsgToUser
    void bindGroup(android.content.Context,java.lang.String) -> bindGroup
    void setTags(android.content.Context,java.util.List) -> setTags
    void listTags(android.content.Context) -> listTags
    void delTags(android.content.Context,java.util.List) -> delTags
    void unbindGroup(android.content.Context,java.lang.String) -> unbindGroup
    void getGroupInfo(android.content.Context,java.lang.String) -> getGroupInfo
    void getGroupList(android.content.Context) -> getGroupList
    void fetchGroupMessages(android.content.Context,java.lang.String,int,int) -> fetchGroupMessages
    void getGroupMessageCounts(android.content.Context,java.lang.String) -> getGroupMessageCounts
    void setDefaultNotificationBuilder(android.content.Context,com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder) -> setDefaultNotificationBuilder
    void setNotificationBuilder(android.content.Context,int,com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder) -> setNotificationBuilder
    void setMediaNotificationBuilder(android.content.Context,com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder) -> setMediaNotificationBuilder
    boolean isConnected(android.content.Context) -> isConnected
    void tryConnect(android.content.Context) -> tryConnect
    void enableLbs(android.content.Context) -> enableLbs
    void disableLbs(android.content.Context) -> disableLbs
    void sdkUnbind(android.content.Context,java.lang.String) -> sdkUnbind
    void setSDKTags(android.content.Context,java.lang.String,java.util.List) -> setSDKTags
    void setLappTags(android.content.Context,java.lang.String,java.util.List) -> setLappTags
    void listSDKTags(android.content.Context,java.lang.String) -> listSDKTags
    void delLappTags(android.content.Context,java.lang.String,java.util.List) -> delLappTags
    void listLappTags(android.content.Context,java.lang.String) -> listLappTags
    void delSDKTags(android.content.Context,java.lang.String,java.util.List) -> delSDKTags
    void getLappBindState(android.content.Context,java.lang.String) -> getLappBindState
    java.util.HashMap getAppNotiMap() -> getAppNotiMap
    void saveAppNotiMap(java.util.HashMap) -> saveAppNotiMap
    void setNoDisturbMode(android.content.Context,int,int,int,int) -> setNoDisturbMode
com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder -> com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder:
    com.baidu.android.pushservice.internal.PushNotificationBuilder mInstance -> mInstance
    com.baidu.android.pushservice.internal.PushNotificationBuilder getInner() -> getInner
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    android.app.Notification construct(android.content.Context) -> construct
com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder$1 -> com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder$1:
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder a -> a
    android.app.Notification construct(android.content.Context) -> construct
com.baidu.android.pushservice.apiproxy.BridgePushSettings -> com.baidu.android.pushservice.apiproxy.BridgePushSettings:
    void enableDebugMode(android.content.Context,boolean) -> enableDebugMode
com.baidu.android.silentupdate.SilentManager -> com.baidu.android.silentupdate.SilentManager:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    boolean g -> g
    void enableDebugMode(boolean) -> enableDebugMode
    void enableRSA(boolean) -> enableRSA
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    boolean loadLib(android.content.Context,java.lang.String,java.lang.String) -> loadLib
    boolean loadLib(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> loadLib
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.io.File) -> a
    boolean a(android.content.Context,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String b(java.io.File) -> b
    void a(java.io.InputStream,java.io.OutputStream) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String decrypt(java.lang.String,java.lang.String) -> decrypt
    void a(java.io.Closeable) -> a
com.baidu.android.silentupdate.a -> com.baidu.android.silentupdate.a:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.android.silentupdate.b -> com.baidu.android.silentupdate.b:
    java.lang.String a -> a
    boolean a(java.lang.ClassLoader,java.lang.ClassLoader) -> a
    java.lang.ClassLoader a(java.lang.String,java.lang.String,java.lang.String,android.content.Context) -> a
com.baidu.android.silentupdate.c -> com.baidu.android.silentupdate.c:
    void a(android.app.Application,java.lang.String) -> a
com.baidu.frontia.Frontia -> com.baidu.frontia.Frontia:
    java.lang.String a -> a
    com.baidu.frontia.base.impl.FrontiaImpl b -> b
    java.lang.String c -> c
    boolean init(android.content.Context,java.lang.String) -> init
    java.lang.String getApiKey() -> getApiKey
    java.lang.String getFrontiaVersion() -> getFrontiaVersion
    void setSlientUpdateEnabled(boolean) -> setSlientUpdateEnabled
    com.baidu.frontia.api.FrontiaPush getPush() -> getPush
com.baidu.frontia.FrontiaApplication -> com.baidu.frontia.FrontiaApplication:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void onCreate() -> onCreate
    void initFrontiaApplication(android.content.Context) -> initFrontiaApplication
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
com.baidu.frontia.FrontiaError -> com.baidu.frontia.FrontiaError:
    int No_Error -> No_Error
    int Error_DefaultError -> Error_DefaultError
    int Error_Unsupported_API -> Error_Unsupported_API
    int Error_No_Permission -> Error_No_Permission
    int Error_Unauthorized_IP -> Error_Unauthorized_IP
    int Error_DB_Query -> Error_DB_Query
    int Error_DB_Connect -> Error_DB_Connect
    int Error_DB_Result_Set_Empty -> Error_DB_Result_Set_Empty
    int Error_Network -> Error_Network
    int Error_Access_Server -> Error_Access_Server
    int Error_Param -> Error_Param
    int Error_AppId_Empty -> Error_AppId_Empty
    int Error_BCS -> Error_BCS
    int Error_Invalid_Bduss -> Error_Invalid_Bduss
    int Error_User_Not_Login -> Error_User_Not_Login
    int Error_User_Not_Active -> Error_User_Not_Active
    int Error_User_Not_Authorized -> Error_User_Not_Authorized
    int Error_User_Not_Exist -> Error_User_Not_Exist
    int Error_User_Already_Exist -> Error_User_Already_Exist
    int Error_File_Already_Exist -> Error_File_Already_Exist
    int Error_File_Name_Invaild -> Error_File_Name_Invaild
    int Error_File_Parent_Path_Not_Exist -> Error_File_Parent_Path_Not_Exist
    int Error_File_Not_Authorized -> Error_File_Not_Authorized
    int Error_Directory_Null -> Error_Directory_Null
    int Error_File_Not_Exist -> Error_File_Not_Exist
    int Error_File_Deal_Failed -> Error_File_Deal_Failed
    int Error_File_Create_Failed -> Error_File_Create_Failed
    int Error_File_Copy_Failed -> Error_File_Copy_Failed
    int Error_File_Delete_Failed -> Error_File_Delete_Failed
    int Error_Get_File_Meta_Failed -> Error_Get_File_Meta_Failed
    int Error_File_Move_Failed -> Error_File_Move_Failed
    int Error_File_Rename_Failed -> Error_File_Rename_Failed
    int Error_SuperFile_Create_Failed -> Error_SuperFile_Create_Failed
    int Error_SuperFile_Block_List_Empty -> Error_SuperFile_Block_List_Empty
    int Error_SuperFile_Update_Failed -> Error_SuperFile_Update_Failed
    int Error_Tag_Internal -> Error_Tag_Internal
    int Error_Tag_Param -> Error_Tag_Param
    int Error_Tag_Database -> Error_Tag_Database
    int Error_Set_Quota_Denied -> Error_Set_Quota_Denied
    int Error_Quota_Support_2_Level -> Error_Quota_Support_2_Level
    int Error_Quota_Exceed -> Error_Quota_Exceed
    int Error_Quota_Bigger_Than_ParentDir -> Error_Quota_Bigger_Than_ParentDir
    int Error_Quota_Smaller_Than_SubDir -> Error_Quota_Smaller_Than_SubDir
    int Error_Thumbnail_Failed -> Error_Thumbnail_Failed
    int Error_Invalid_Access_Token -> Error_Invalid_Access_Token
    int Error_Signature -> Error_Signature
    int Error_Object_Not_Exist -> Error_Object_Not_Exist
    int Error_ACL_Put -> Error_ACL_Put
    int Error_ACL_Query -> Error_ACL_Query
    int Error_ACL_Get -> Error_ACL_Get
    int Error_ACL_Not_Exist -> Error_ACL_Not_Exist
    int Error_Bucket_Already_Exist -> Error_Bucket_Already_Exist
    int Error_Bad_Request -> Error_Bad_Request
    int Error_BaiduBS_Internal_Error -> Error_BaiduBS_Internal_Error
    int Error_Not_Support -> Error_Not_Support
    int Error_Access_Denied -> Error_Access_Denied
    int Error_Service_Unavailable -> Error_Service_Unavailable
    int Error_Retry -> Error_Retry
    int Error_Put_Object_Data -> Error_Put_Object_Data
    int Error_Put_Object_Meta -> Error_Put_Object_Meta
    int Error_Get_Object_Data -> Error_Get_Object_Data
    int Error_Get_Object_Meta -> Error_Get_Object_Meta
    int Error_Storage_Exceed_Limit -> Error_Storage_Exceed_Limit
    int Error_Request_Exceed_Limit -> Error_Request_Exceed_Limit
    int Error_Transfer_Exceed_Limit -> Error_Transfer_Exceed_Limit
    int Error_Response_Key_Illegal -> Error_Response_Key_Illegal
    int Error_Response_Key_Not_Exist -> Error_Response_Key_Not_Exist
    int Error_CloudMatch_Not_Exist -> Error_CloudMatch_Not_Exist
    int Error_Internal_Server -> Error_Internal_Server
    int Error_Param_CloudDownaload -> Error_Param_CloudDownaload
    int Error_AppId_Is_Empty -> Error_AppId_Is_Empty
    int Error_Bduss_Is_Invalid -> Error_Bduss_Is_Invalid
    int Error_No_Permission_CloudDownload -> Error_No_Permission_CloudDownload
    int Error_User_Not_Login_CloudDownload -> Error_User_Not_Login_CloudDownload
    int Error_User_Not_Active_CloudDownload -> Error_User_Not_Active_CloudDownload
    int Error_User_Not_Authorized_CloudDownload -> Error_User_Not_Authorized_CloudDownload
    int Error_User_Not_Exsits -> Error_User_Not_Exsits
    int Error_Storage_Exceed_Limit_CloudDownload -> Error_Storage_Exceed_Limit_CloudDownload
    int Error_Object_Not_exists -> Error_Object_Not_exists
    int Error_Unsupported_Api -> Error_Unsupported_Api
    int Error_Request_Expires_Timeout -> Error_Request_Expires_Timeout
com.baidu.frontia.FrontiaQuery -> com.baidu.frontia.FrontiaQuery:
    com.baidu.frontia.base.impl.FrontiaQueryImpl a -> a
    void a(com.baidu.frontia.base.impl.FrontiaQueryImpl) -> a
    org.json.JSONObject toJSONObject() -> toJSONObject
    com.baidu.frontia.FrontiaQuery equals(java.lang.String,java.lang.Object) -> equals
    com.baidu.frontia.FrontiaQuery notEqual(java.lang.String,java.lang.Object) -> notEqual
    com.baidu.frontia.FrontiaQuery greaterThan(java.lang.String,java.lang.Object) -> greaterThan
    com.baidu.frontia.FrontiaQuery lessThan(java.lang.String,java.lang.Object) -> lessThan
    com.baidu.frontia.FrontiaQuery greaterThanEqualTo(java.lang.String,java.lang.Object) -> greaterThanEqualTo
    com.baidu.frontia.FrontiaQuery lessThanEqualTo(java.lang.String,java.lang.Object) -> lessThanEqualTo
    com.baidu.frontia.FrontiaQuery in(java.lang.String,java.lang.Object[]) -> in
    com.baidu.frontia.FrontiaQuery notIn(java.lang.String,java.lang.Object[]) -> notIn
    com.baidu.frontia.FrontiaQuery regEx(java.lang.String,java.lang.String) -> regEx
    com.baidu.frontia.FrontiaQuery startsWith(java.lang.String,java.lang.String) -> startsWith
    com.baidu.frontia.FrontiaQuery endsWith(java.lang.String,java.lang.String) -> endsWith
    com.baidu.frontia.FrontiaQuery all(java.lang.String,java.lang.Object[]) -> all
    com.baidu.frontia.FrontiaQuery size(java.lang.String,int) -> size
    com.baidu.frontia.FrontiaQuery and(com.baidu.frontia.FrontiaQuery) -> and
    com.baidu.frontia.FrontiaQuery or(com.baidu.frontia.FrontiaQuery) -> or
    com.baidu.frontia.FrontiaQuery not() -> not
    com.baidu.frontia.FrontiaQuery setLimit(int) -> setLimit
    int getLimit() -> getLimit
    com.baidu.frontia.FrontiaQuery addSort(java.lang.String,com.baidu.frontia.FrontiaQuery$SortOrder) -> addSort
    org.json.JSONObject getSort() -> getSort
    com.baidu.frontia.FrontiaQuery setSkip(int) -> setSkip
    int getSkip() -> getSkip
com.baidu.frontia.FrontiaQuery$SortOrder -> com.baidu.frontia.FrontiaQuery$SortOrder:
    com.baidu.frontia.FrontiaQuery$SortOrder ASC -> ASC
    com.baidu.frontia.FrontiaQuery$SortOrder DESC -> DESC
    com.baidu.frontia.FrontiaQuery$SortOrder[] a -> a
    com.baidu.frontia.FrontiaQuery$SortOrder[] values() -> values
    com.baidu.frontia.FrontiaQuery$SortOrder valueOf(java.lang.String) -> valueOf
com.baidu.frontia.a -> com.baidu.frontia.a:
    java.lang.String[] a() -> a
    void a(android.content.Context,java.lang.String) -> a
com.baidu.frontia.api.FrontiaDeepLink -> com.baidu.frontia.api.FrontiaDeepLink:
    java.lang.String a -> a
    com.baidu.frontia.module.deeplink.FrontiaDeepLinkImpl b -> b
    com.baidu.frontia.api.FrontiaDeepLink c -> c
    com.baidu.frontia.api.FrontiaDeepLink newInstance(android.content.Context) -> newInstance
    void launch(java.lang.String) -> launch
    void init(java.lang.String) -> init
com.baidu.frontia.api.FrontiaPush -> com.baidu.frontia.api.FrontiaPush:
    com.baidu.frontia.api.FrontiaPush a -> a
    com.baidu.frontia.module.push.FrontiaPushImpl b -> b
    android.content.Context c -> c
    com.baidu.frontia.module.push.FrontiaPushImpl a() -> a
    com.baidu.frontia.api.FrontiaPush newInstance(android.content.Context) -> newInstance
    void init(java.lang.String) -> init
    void setNotificationBuilder(int,com.baidu.frontia.api.FrontiaPushUtil$a) -> setNotificationBuilder
    void stop() -> stop
    void resume() -> resume
    boolean isPushWorking() -> isPushWorking
    void start() -> start
    void start(java.lang.String) -> start
    void setTags(java.util.List) -> setTags
    void deleteTags(java.util.List) -> deleteTags
    void listTags() -> listTags
    void enableLbs() -> enableLbs
    void disableLbs() -> disableLbs
    void pushMessage(java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void listMessage(com.baidu.frontia.FrontiaQuery,com.baidu.frontia.api.FrontiaPushListener$ListMessageListener) -> listMessage
    void describeMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener) -> describeMessage
    void replaceMessage(java.lang.String,java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> replaceMessage
    void replaceMessage(java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> replaceMessage
    void replaceMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> replaceMessage
    void removeMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> removeMessage
    void setDebugModeEnabled(boolean) -> setDebugModeEnabled
com.baidu.frontia.api.FrontiaPush$a -> com.baidu.frontia.api.FrontiaPush$a:
    com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$CommonMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$CommonMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener a(com.baidu.frontia.api.FrontiaPush$a) -> a
com.baidu.frontia.api.FrontiaPush$a$1 -> com.baidu.frontia.api.FrontiaPush$a$1:
    com.baidu.frontia.api.FrontiaPush$a a -> a
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPush$b -> com.baidu.frontia.api.FrontiaPush$b:
    com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener a(com.baidu.frontia.api.FrontiaPush$b) -> a
com.baidu.frontia.api.FrontiaPush$b$1 -> com.baidu.frontia.api.FrontiaPush$b$1:
    com.baidu.frontia.api.FrontiaPush$b a -> a
    void onSuccess(com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageResult) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPush$c -> com.baidu.frontia.api.FrontiaPush$c:
    com.baidu.frontia.api.FrontiaPushListener$ListMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$ListMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$ListMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$ListMessageListener a(com.baidu.frontia.api.FrontiaPush$c) -> a
com.baidu.frontia.api.FrontiaPush$c$1 -> com.baidu.frontia.api.FrontiaPush$c$1:
    com.baidu.frontia.api.FrontiaPush$c a -> a
    void onSuccess(java.util.List) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPush$d -> com.baidu.frontia.api.FrontiaPush$d:
    com.baidu.frontia.api.FrontiaPushListener$PushMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$PushMessageListener a(com.baidu.frontia.api.FrontiaPush$d) -> a
com.baidu.frontia.api.FrontiaPush$d$1 -> com.baidu.frontia.api.FrontiaPush$d$1:
    com.baidu.frontia.api.FrontiaPush$d a -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener -> com.baidu.frontia.api.FrontiaPushListener:
com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener -> com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener:
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener -> com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener:
    void onSuccess(com.baidu.frontia.api.FrontiaPushListener$DescribeMessageResult) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener$DescribeMessageResult -> com.baidu.frontia.api.FrontiaPushListener$DescribeMessageResult:
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageResult a -> a
    java.lang.String getId() -> getId
    java.lang.String getUserId() -> getUserId
    java.lang.String getChannelId() -> getChannelId
    java.lang.String getTag() -> getTag
    com.baidu.frontia.api.FrontiaPushUtil$Trigger getTrigger() -> getTrigger
    com.baidu.frontia.api.FrontiaPushUtil$MessageContent getMessage() -> getMessage
    org.json.JSONObject getExtras() -> getExtras
com.baidu.frontia.api.FrontiaPushListener$ListMessageListener -> com.baidu.frontia.api.FrontiaPushListener$ListMessageListener:
    void onSuccess(java.util.List) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener$PushMessageListener -> com.baidu.frontia.api.FrontiaPushListener$PushMessageListener:
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushMessageReceiver -> com.baidu.frontia.api.FrontiaPushMessageReceiver:
    java.lang.String TAG -> TAG
    java.lang.String a -> a
    java.lang.String b -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onBind(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onBind
    void onUnbind(android.content.Context,int,java.lang.String) -> onUnbind
    void onCheckBindState(android.content.Context,int,java.lang.String,boolean) -> onCheckBindState
    void onSetTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onSetTags
    void onDelTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onDelTags
    void onListTags(android.content.Context,int,java.util.List,java.lang.String) -> onListTags
    void onMessage(android.content.Context,java.lang.String,java.lang.String) -> onMessage
    void onNotificationClicked(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> onNotificationClicked
com.baidu.frontia.api.FrontiaPushUtil -> com.baidu.frontia.api.FrontiaPushUtil:
com.baidu.frontia.api.FrontiaPushUtil$AndroidContent -> com.baidu.frontia.api.FrontiaPushUtil$AndroidContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$AndroidContentImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$AndroidContentImpl a() -> a
    void setBuilderId(int) -> setBuilderId
    int getBuilderId() -> getBuilderId
    void setPKGContent(java.lang.String) -> setPKGContent
    java.lang.String getPKGContent() -> getPKGContent
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getUrl() -> getUrl
    void setNotificationStyle(com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle) -> setNotificationStyle
    com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle getNotificationStyle() -> getNotificationStyle
com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle -> com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$DefaultNotificationStyleImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$DefaultNotificationStyleImpl a() -> a
    void enableAlert() -> enableAlert
    void disableAlert() -> disableAlert
    boolean isAlertEnabled() -> isAlertEnabled
    void enableVibration() -> enableVibration
    void disableVibration() -> disableVibration
    boolean isVibrationEnabled() -> isVibrationEnabled
    void enableDismissible() -> enableDismissible
    void disableDismissible() -> disableDismissible
    boolean isDismissible() -> isDismissible
com.baidu.frontia.api.FrontiaPushUtil$DeployStatus -> com.baidu.frontia.api.FrontiaPushUtil$DeployStatus:
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus DEVELOPE -> DEVELOPE
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus PRODUCTION -> PRODUCTION
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus[] a -> a
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus[] values() -> values
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus valueOf(java.lang.String) -> valueOf
com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushBasicNotificationBuilder -> com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushBasicNotificationBuilder:
    com.baidu.android.pushservice.internal.BasicPushNotificationBuilder a -> a
    com.baidu.android.pushservice.internal.PushNotificationBuilder a() -> a
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushCustomNotificationBuilder -> com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushCustomNotificationBuilder:
    com.baidu.android.pushservice.internal.CustomPushNotificationBuilder a -> a
    com.baidu.android.pushservice.internal.PushNotificationBuilder a() -> a
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
com.baidu.frontia.api.FrontiaPushUtil$IOSContent -> com.baidu.frontia.api.FrontiaPushUtil$IOSContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$IOSContentImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$IOSContentImpl a() -> a
    void setAlertMsg(java.lang.String) -> setAlertMsg
    java.lang.String getAlertMsg() -> getAlertMsg
    void setSoundFile(java.lang.String) -> setSoundFile
    java.lang.String getSoundFile() -> getSoundFile
    void setBadge(int) -> setBadge
    int getBadge() -> getBadge
com.baidu.frontia.api.FrontiaPushUtil$MessageContent -> com.baidu.frontia.api.FrontiaPushUtil$MessageContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl a -> a
    int b -> b
    com.baidu.frontia.api.FrontiaPushUtil$MessageContent createStringMessage(java.lang.String,java.lang.String) -> createStringMessage
    com.baidu.frontia.api.FrontiaPushUtil$MessageContent createNotificationMessage(java.lang.String,java.lang.String,java.lang.String) -> createNotificationMessage
    void setMessage(java.lang.String) -> setMessage
    void setNotification(com.baidu.frontia.api.FrontiaPushUtil$NotificationContent) -> setNotification
    java.lang.String getMessageKeys() -> getMessageKeys
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus getDeployStatus() -> getDeployStatus
    java.lang.String getMessage() -> getMessage
    com.baidu.frontia.api.FrontiaPushUtil$NotificationContent getNotification() -> getNotification
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl a() -> a
com.baidu.frontia.api.FrontiaPushUtil$NotificationContent -> com.baidu.frontia.api.FrontiaPushUtil$NotificationContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$NotificationContentImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$NotificationContentImpl a() -> a
    java.lang.String getTitle() -> getTitle
    java.lang.String getDescription() -> getDescription
    void addCustomContent(java.lang.String,java.lang.String) -> addCustomContent
    org.json.JSONObject getCustomContent() -> getCustomContent
    void addAndroidContent(com.baidu.frontia.api.FrontiaPushUtil$AndroidContent) -> addAndroidContent
    com.baidu.frontia.api.FrontiaPushUtil$AndroidContent getAndroidContent() -> getAndroidContent
    void addIOSContent(com.baidu.frontia.api.FrontiaPushUtil$IOSContent) -> addIOSContent
    com.baidu.frontia.api.FrontiaPushUtil$IOSContent getIOSContent() -> getIOSContent
com.baidu.frontia.api.FrontiaPushUtil$Trigger -> com.baidu.frontia.api.FrontiaPushUtil$Trigger:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$TriggerImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$TriggerImpl a() -> a
    void setTime(java.lang.String) -> setTime
    java.lang.String getTime() -> getTime
    void setCrontab(java.lang.String) -> setCrontab
    java.lang.String getCrontab() -> getCrontab
com.baidu.frontia.api.FrontiaPushUtil$a -> com.baidu.frontia.api.FrontiaPushUtil$a:
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    com.baidu.android.pushservice.internal.PushNotificationBuilder a() -> a
com.baidu.frontia.framework.IModule -> com.baidu.frontia.framework.IModule:
    void init(java.lang.String) -> init
com.baidu.lightapp.LightAppPush -> com.baidu.lightapp.LightAppPush:
    com.baidu.lightapp.LightAppPush a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    com.baidu.lightapp.LightAppPush newInstance(android.content.Context,java.lang.String) -> newInstance
    void lightAppBind() -> lightAppBind
    void lightAppUnbind() -> lightAppUnbind
    void checkLightAppBindState() -> checkLightAppBindState
    void setLightAppTags(java.util.List) -> setLightAppTags
    void delLightAppTags(java.util.List) -> delLightAppTags
    void listLightAppTags() -> listLightAppTags
    void pushMessage(java.lang.String,java.lang.String,com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl,com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl) -> pushMessage
    void pushMessage(java.lang.String,com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl,com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl) -> pushMessage
    void pushMessage(com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl,com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl) -> pushMessage
    com.baidu.frontia.base.impl.FrontiaCmd a() -> a
    java.lang.String b() -> b
    com.baidu.frontia.base.impl.FrontiaCmd a(com.baidu.lightapp.LightAppPush) -> a
com.baidu.lightapp.LightAppPush$a -> com.baidu.lightapp.LightAppPush$a:
    org.json.JSONObject b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl e -> e
    long f -> f
    com.baidu.lightapp.LightAppPush a -> a
    com.baidu.frontia.base.impl.FrontiaCmd$CmdResult a(java.lang.Void[]) -> a
    void a(com.baidu.frontia.base.impl.FrontiaCmd$CmdResult) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.google.gson.DefaultDateTypeAdapter -> com.google.gson.DefaultDateTypeAdapter:
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> deserializeToDate
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    java.lang.reflect.Field field -> field
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getName() -> getName
    java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    java.lang.Class getDeclaredClass() -> getDeclaredClass
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.util.Collection getAnnotations() -> getAnnotations
    boolean hasModifier(int) -> hasModifier
    java.lang.Object get(java.lang.Object) -> get
    boolean isSynthetic() -> isSynthetic
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    java.lang.String modifyString(char,java.lang.String,int) -> modifyString
    java.lang.String access$100(java.lang.String) -> access$100
    java.lang.String access$200(java.lang.String,java.lang.String) -> access$200
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal calls -> calls
    java.util.Map typeTokenCache -> typeTokenCache
    java.util.List factories -> factories
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean serializeNulls -> serializeNulls
    boolean htmlSafe -> htmlSafe
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean prettyPrinting -> prettyPrinting
    com.google.gson.JsonDeserializationContext deserializationContext -> deserializationContext
    com.google.gson.JsonSerializationContext serializationContext -> serializationContext
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> access$000
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    com.google.gson.Gson this$0 -> this$0
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    com.google.gson.TypeAdapter delegate -> delegate
    void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    java.util.Map instanceCreators -> instanceCreators
    java.util.List factories -> factories
    java.util.List hierarchyFactories -> hierarchyFactories
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    com.google.gson.GsonBuilder setVersion(double) -> setVersion
    com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    com.google.gson.Gson create() -> create
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    java.util.List elements -> elements
    com.google.gson.JsonArray deepCopy() -> deepCopy
    void add(com.google.gson.JsonElement) -> add
    void addAll(com.google.gson.JsonArray) -> addAll
    int size() -> size
    java.util.Iterator iterator() -> iterator
    com.google.gson.JsonElement get(int) -> get
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    short getAsShort() -> getAsShort
    boolean getAsBoolean() -> getAsBoolean
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    com.google.gson.JsonElement deepCopy() -> deepCopy
    boolean isJsonArray() -> isJsonArray
    boolean isJsonObject() -> isJsonObject
    boolean isJsonPrimitive() -> isJsonPrimitive
    boolean isJsonNull() -> isJsonNull
    com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    short getAsShort() -> getAsShort
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    com.google.gson.JsonNull deepCopy() -> deepCopy
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    com.google.gson.internal.LinkedTreeMap members -> members
    com.google.gson.JsonObject deepCopy() -> deepCopy
    void add(java.lang.String,com.google.gson.JsonElement) -> add
    com.google.gson.JsonElement remove(java.lang.String) -> remove
    void addProperty(java.lang.String,java.lang.String) -> addProperty
    void addProperty(java.lang.String,java.lang.Number) -> addProperty
    void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    void addProperty(java.lang.String,java.lang.Character) -> addProperty
    com.google.gson.JsonElement createJsonElement(java.lang.Object) -> createJsonElement
    java.util.Set entrySet() -> entrySet
    boolean has(java.lang.String) -> has
    com.google.gson.JsonElement get(java.lang.String) -> get
    com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    com.google.gson.JsonElement parse(java.lang.String) -> parse
    com.google.gson.JsonElement parse(java.io.Reader) -> parse
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    java.lang.Class[] PRIMITIVE_TYPES -> PRIMITIVE_TYPES
    java.lang.Object value -> value
    com.google.gson.JsonPrimitive deepCopy() -> deepCopy
    void setValue(java.lang.Object) -> setValue
    boolean isBoolean() -> isBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    boolean getAsBoolean() -> getAsBoolean
    boolean isNumber() -> isNumber
    java.lang.Number getAsNumber() -> getAsNumber
    boolean isString() -> isString
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    short getAsShort() -> getAsShort
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    com.google.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    com.google.gson.JsonElement next() -> next
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.TreeTypeAdapter -> com.google.gson.TreeTypeAdapter:
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.Gson gson -> gson
    com.google.gson.reflect.TypeToken typeToken -> typeToken
    com.google.gson.TypeAdapterFactory skipPast -> skipPast
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
com.google.gson.TreeTypeAdapter$1 -> com.google.gson.TreeTypeAdapter$1:
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.TreeTypeAdapter$SingleTypeFactory:
    com.google.gson.reflect.TypeToken exactType -> exactType
    boolean matchRawType -> matchRawType
    java.lang.Class hierarchyType -> hierarchyType
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void toJson(java.io.Writer,java.lang.Object) -> toJson
    com.google.gson.TypeAdapter nullSafe() -> nullSafe
    java.lang.String toJson(java.lang.Object) -> toJson
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object fromJson(java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.String) -> fromJson
    java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    com.google.gson.TypeAdapter this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.TypeAdapterFactory -> com.google.gson.TypeAdapterFactory:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
    java.lang.String value() -> value
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
    double value() -> value
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
    double value() -> value
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    void checkArgument(boolean) -> checkArgument
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    void access$000(java.lang.reflect.Type) -> access$000
    int access$100(java.lang.Object) -> access$100
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> instanceCreators
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    com.google.gson.InstanceCreator val$typeCreator -> val$typeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> unsafeAllocator
    java.lang.Class val$rawType -> val$rawType
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    com.google.gson.InstanceCreator val$rawTypeCreator -> val$rawTypeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    java.lang.reflect.Constructor val$constructor -> val$constructor
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> version
    int modifiers -> modifiers
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    java.util.List deserializationStrategies -> deserializationStrategies
    com.google.gson.internal.Excluder clone() -> clone
    com.google.gson.internal.Excluder withVersion(double) -> withVersion
    com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    boolean isStatic(java.lang.Class) -> isStatic
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    com.google.gson.TypeAdapter delegate -> delegate
    boolean val$skipDeserialize -> val$skipDeserialize
    boolean val$skipSerialize -> val$skipSerialize
    com.google.gson.Gson val$gson -> val$gson
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.internal.Excluder this$0 -> this$0
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    com.google.gson.internal.LinkedTreeMap$Node root -> root
    int size -> size
    int modCount -> modCount
    com.google.gson.internal.LinkedTreeMap$Node header -> header
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> rotateRight
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$EntrySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> this$1
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$KeySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$KeySet$1:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> this$1
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$Node:
    com.google.gson.internal.LinkedTreeMap$Node parent -> parent
    com.google.gson.internal.LinkedTreeMap$Node left -> left
    com.google.gson.internal.LinkedTreeMap$Node right -> right
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node prev -> prev
    java.lang.Object key -> key
    java.lang.Object value -> value
    int height -> height
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedTreeMap$Node first() -> first
    com.google.gson.internal.LinkedTreeMap$Node last() -> last
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    java.lang.Class wrap(java.lang.Class) -> wrap
    java.lang.Class unwrap(java.lang.Class) -> unwrap
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$1 -> com.google.gson.internal.Streams$1:
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    java.lang.Appendable appendable -> appendable
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    char[] chars -> chars
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    com.google.gson.internal.UnsafeAllocator create() -> create
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    com.google.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter elementTypeAdapter -> elementTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    java.text.DateFormat buildIso8601Format() -> buildIso8601Format
    java.util.Date read(com.google.gson.stream.JsonReader) -> read
    java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    java.lang.Object peekStack() -> peekStack
    java.lang.Object popStack() -> popStack
    void expect(com.google.gson.stream.JsonToken) -> expect
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    java.lang.String toString() -> toString
    void promoteNameToValue() -> promoteNameToValue
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    java.lang.String pendingName -> pendingName
    com.google.gson.JsonElement product -> product
    com.google.gson.JsonElement get() -> get
    com.google.gson.JsonElement peek() -> peek
    void put(com.google.gson.JsonElement) -> put
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean complexMapKeySerialization -> complexMapKeySerialization
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> access$000
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter keyTypeAdapter -> keyTypeAdapter
    com.google.gson.TypeAdapter valueTypeAdapter -> valueTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> this$0
    java.util.Map read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
    java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.google.gson.Gson gson -> gson
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.internal.Excluder excluder -> excluder
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    java.lang.String getFieldName(java.lang.reflect.Field) -> getFieldName
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    com.google.gson.TypeAdapter typeAdapter -> typeAdapter
    com.google.gson.Gson val$context -> val$context
    com.google.gson.reflect.TypeToken val$fieldType -> val$fieldType
    java.lang.reflect.Field val$field -> val$field
    boolean val$isPrimitive -> val$isPrimitive
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Map boundFields -> boundFields
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    java.lang.String name -> name
    boolean serialized -> serialized
    boolean deserialized -> deserialized
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.bind.SqlDateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.bind.SqlDateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.bind.TimeTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.bind.TimeTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    com.google.gson.Gson context -> context
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.reflect.Type type -> type
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapter NUMBER -> NUMBER
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> NUMBER_FACTORY
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> newEnumTypeHierarchyFactory
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
    java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    java.lang.String read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    java.net.URL read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    java.net.URI read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.google.gson.internal.bind.TypeAdapters$22$1:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> val$dateTypeAdapter
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> this$0
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    java.lang.String YEAR -> YEAR
    java.lang.String MONTH -> MONTH
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String SECOND -> SECOND
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    java.lang.Class val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
    java.lang.Class val$unboxed -> val$unboxed
    java.lang.Class val$boxed -> val$boxed
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
    java.lang.Class val$base -> val$base
    java.lang.Class val$sub -> val$sub
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
    java.lang.Class val$clazz -> val$clazz
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    java.util.Map nameToConstant -> nameToConstant
    java.util.Map constantToName -> constantToName
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getType() -> getType
    boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    char[] NON_EXECUTE_PREFIX -> NON_EXECUTE_PREFIX
    long MIN_INCOMPLETE_INTEGER -> MIN_INCOMPLETE_INTEGER
    int PEEKED_NONE -> PEEKED_NONE
    int PEEKED_BEGIN_OBJECT -> PEEKED_BEGIN_OBJECT
    int PEEKED_END_OBJECT -> PEEKED_END_OBJECT
    int PEEKED_BEGIN_ARRAY -> PEEKED_BEGIN_ARRAY
    int PEEKED_END_ARRAY -> PEEKED_END_ARRAY
    int PEEKED_TRUE -> PEEKED_TRUE
    int PEEKED_FALSE -> PEEKED_FALSE
    int PEEKED_NULL -> PEEKED_NULL
    int PEEKED_SINGLE_QUOTED -> PEEKED_SINGLE_QUOTED
    int PEEKED_DOUBLE_QUOTED -> PEEKED_DOUBLE_QUOTED
    int PEEKED_UNQUOTED -> PEEKED_UNQUOTED
    int PEEKED_BUFFERED -> PEEKED_BUFFERED
    int PEEKED_SINGLE_QUOTED_NAME -> PEEKED_SINGLE_QUOTED_NAME
    int PEEKED_DOUBLE_QUOTED_NAME -> PEEKED_DOUBLE_QUOTED_NAME
    int PEEKED_UNQUOTED_NAME -> PEEKED_UNQUOTED_NAME
    int PEEKED_LONG -> PEEKED_LONG
    int PEEKED_NUMBER -> PEEKED_NUMBER
    int PEEKED_EOF -> PEEKED_EOF
    int NUMBER_CHAR_NONE -> NUMBER_CHAR_NONE
    int NUMBER_CHAR_SIGN -> NUMBER_CHAR_SIGN
    int NUMBER_CHAR_DIGIT -> NUMBER_CHAR_DIGIT
    int NUMBER_CHAR_DECIMAL -> NUMBER_CHAR_DECIMAL
    int NUMBER_CHAR_FRACTION_DIGIT -> NUMBER_CHAR_FRACTION_DIGIT
    int NUMBER_CHAR_EXP_E -> NUMBER_CHAR_EXP_E
    int NUMBER_CHAR_EXP_SIGN -> NUMBER_CHAR_EXP_SIGN
    int NUMBER_CHAR_EXP_DIGIT -> NUMBER_CHAR_EXP_DIGIT
    java.io.Reader in -> in
    boolean lenient -> lenient
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    int lineNumber -> lineNumber
    int lineStart -> lineStart
    int peeked -> peeked
    long peekedLong -> peekedLong
    int peekedNumberLength -> peekedNumberLength
    java.lang.String peekedString -> peekedString
    int[] stack -> stack
    int stackSize -> stackSize
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    int doPeek() -> doPeek
    int peekKeyword() -> peekKeyword
    int peekNumber() -> peekNumber
    boolean isLiteral(char) -> isLiteral
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    java.lang.String nextQuotedValue(char) -> nextQuotedValue
    java.lang.String nextUnquotedValue() -> nextUnquotedValue
    void skipQuotedValue(char) -> skipQuotedValue
    void skipUnquotedValue() -> skipUnquotedValue
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    void push(int) -> push
    boolean fillBuffer(int) -> fillBuffer
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    int nextNonWhitespace(boolean) -> nextNonWhitespace
    void checkLenient() -> checkLenient
    void skipToEndOfLine() -> skipToEndOfLine
    boolean skipTo(java.lang.String) -> skipTo
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> readEscapeCharacter
    java.io.IOException syntaxError(java.lang.String) -> syntaxError
    void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    int access$000(com.google.gson.stream.JsonReader) -> access$000
    int access$100(com.google.gson.stream.JsonReader) -> access$100
    int access$002(com.google.gson.stream.JsonReader,int) -> access$002
    int access$200(com.google.gson.stream.JsonReader) -> access$200
    int access$300(com.google.gson.stream.JsonReader) -> access$300
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonScope -> com.google.gson.stream.JsonScope:
    int EMPTY_ARRAY -> EMPTY_ARRAY
    int NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    int EMPTY_OBJECT -> EMPTY_OBJECT
    int DANGLING_NAME -> DANGLING_NAME
    int NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    int EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    int NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    int CLOSED -> CLOSED
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> $VALUES
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    java.lang.String[] REPLACEMENT_CHARS -> REPLACEMENT_CHARS
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> HTML_SAFE_REPLACEMENT_CHARS
    java.io.Writer out -> out
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    java.lang.String deferredName -> deferredName
    boolean serializeNulls -> serializeNulls
    void setIndent(java.lang.String) -> setIndent
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void setHtmlSafe(boolean) -> setHtmlSafe
    boolean isHtmlSafe() -> isHtmlSafe
    void setSerializeNulls(boolean) -> setSerializeNulls
    boolean getSerializeNulls() -> getSerializeNulls
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter open(int,java.lang.String) -> open
    com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> close
    void push(int) -> push
    int peek() -> peek
    void replaceTop(int) -> replaceTop
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    void writeDeferredName() -> writeDeferredName
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> string
    void newline() -> newline
    void beforeName() -> beforeName
    void beforeValue(boolean) -> beforeValue
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
com.minius.baidupush.BaiduPushReceiver -> com.minius.baidupush.BaiduPushReceiver:
    java.lang.String TAG -> a
    void onBind(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onBind
    void onMessage(android.content.Context,java.lang.String,java.lang.String) -> onMessage
    void onNotificationClicked(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> onNotificationClicked
    void onSetTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onSetTags
    void onDelTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onDelTags
    void onListTags(android.content.Context,int,java.util.List,java.lang.String) -> onListTags
    void onUnbind(android.content.Context,int,java.lang.String) -> onUnbind
    void updateContent(android.content.Context,java.lang.String) -> a
    void showBackNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void cancelNotification(int,android.content.Context) -> a
com.minius.baidupush.Utils -> com.minius.baidupush.a:
    java.lang.String logStringCache -> a
    void setPushUserId(android.content.Context,java.lang.String) -> a
com.minius.chat.imagedetail.ImageDetailFragment -> com.minius.chat.imagedetail.a:
    java.lang.String mImageUrl -> c
    android.widget.ImageView mImageView -> d
    android.widget.ProgressBar progressBar -> e
    uk.co.senab.photoview.PhotoViewAttacher mAttacher -> f
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> a
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> b
    com.minius.chat.imagedetail.ImageDetailFragment newInstance(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onDestroy() -> onDestroy
    void onDestroyView() -> onDestroyView
    android.widget.ProgressBar access$0(com.minius.chat.imagedetail.ImageDetailFragment) -> a
    uk.co.senab.photoview.PhotoViewAttacher access$1(com.minius.chat.imagedetail.ImageDetailFragment) -> b
com.minius.chat.imagedetail.ImageDetailFragment$1 -> com.minius.chat.imagedetail.b:
    com.minius.chat.imagedetail.ImageDetailFragment this$0 -> a
    void onPhotoTap(android.view.View,float,float) -> a
com.minius.chat.imagedetail.ImageDetailFragment$2 -> com.minius.chat.imagedetail.c:
    com.minius.chat.imagedetail.ImageDetailFragment this$0 -> a
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$assist$FailReason$FailType -> b
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$assist$FailReason$FailType() -> a
com.minius.chat.imagedetail.ImagePagerActivity -> com.minius.chat.imagedetail.ImagePagerActivity:
    int PerImageWidth -> q
    int PerImageHeight -> r
    com.minius.ui.ProgressHUD mProgressHUD -> s
    com.minius.ui.ProgressHUD showErrorOrSucc -> t
    com.minius.ui.CircleProgress sector -> u
    int progress -> v
    android.widget.ImageView inditor -> w
    android.os.Handler updateServerTimeHandler -> x
    boolean isRunning -> y
    com.minius.ui.HackyViewPager mPager -> z
    int pagerPosition -> A
    android.widget.TextView indicator -> B
    android.widget.ImageView backBtn -> C
    android.widget.ImageView menuBtn -> D
    java.lang.String[] urlsList -> n
    java.lang.String[] allList -> o
    java.lang.String imageDateToAlbum -> E
    com.minius.chat.imagedetail.ImagePagerActivity$MyReceiver receiver -> F
    android.view.View$OnClickListener itemsOnClick -> G
    java.lang.Runnable updateConnectServerRunnable -> p
    com.minus.lovershouse.util.ChatPicMenuPopup mChatPicMenuPopup -> H
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onClickedSaveToMiniusAlbum() -> f
    void onClickedSaveToLocalPhotoLibrary() -> g
    void saveToSD(java.lang.String) -> c
    void showProgressDialog() -> h
    void onCancel(android.content.DialogInterface) -> onCancel
    void responseForSavePicToAlbum(java.lang.String) -> b
    com.minus.lovershouse.util.ChatPicMenuPopup access$0(com.minius.chat.imagedetail.ImagePagerActivity) -> a
    void access$1(com.minius.chat.imagedetail.ImagePagerActivity) -> b
    void access$2(com.minius.chat.imagedetail.ImagePagerActivity) -> c
    boolean access$3(com.minius.chat.imagedetail.ImagePagerActivity) -> d
    int access$4(com.minius.chat.imagedetail.ImagePagerActivity) -> e
    void access$5(com.minius.chat.imagedetail.ImagePagerActivity,int) -> a
    void access$6(com.minius.chat.imagedetail.ImagePagerActivity,boolean) -> a
    android.os.Handler access$7(com.minius.chat.imagedetail.ImagePagerActivity) -> f
    com.minius.ui.ProgressHUD access$8(com.minius.chat.imagedetail.ImagePagerActivity) -> g
    void access$9(com.minius.chat.imagedetail.ImagePagerActivity,com.minius.ui.ProgressHUD) -> a
    int access$10(com.minius.chat.imagedetail.ImagePagerActivity) -> h
    int access$11(com.minius.chat.imagedetail.ImagePagerActivity) -> i
    android.widget.ImageView access$12(com.minius.chat.imagedetail.ImagePagerActivity) -> j
    com.minius.ui.CircleProgress access$13(com.minius.chat.imagedetail.ImagePagerActivity) -> k
    com.minius.chat.imagedetail.ImagePagerActivity$MyReceiver access$14(com.minius.chat.imagedetail.ImagePagerActivity) -> l
    void access$15(com.minius.chat.imagedetail.ImagePagerActivity,com.minius.chat.imagedetail.ImagePagerActivity$MyReceiver) -> a
    com.minius.ui.ProgressHUD access$16(com.minius.chat.imagedetail.ImagePagerActivity) -> m
    android.view.View$OnClickListener access$17(com.minius.chat.imagedetail.ImagePagerActivity) -> n
    void access$18(com.minius.chat.imagedetail.ImagePagerActivity,com.minus.lovershouse.util.ChatPicMenuPopup) -> a
    com.minius.ui.HackyViewPager access$19(com.minius.chat.imagedetail.ImagePagerActivity) -> o
    android.widget.TextView access$20(com.minius.chat.imagedetail.ImagePagerActivity) -> p
com.minius.chat.imagedetail.ImagePagerActivity$1 -> com.minius.chat.imagedetail.d:
    com.minius.chat.imagedetail.ImagePagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minius.chat.imagedetail.ImagePagerActivity$2 -> com.minius.chat.imagedetail.e:
    com.minius.chat.imagedetail.ImagePagerActivity this$0 -> a
    void run() -> run
com.minius.chat.imagedetail.ImagePagerActivity$3 -> com.minius.chat.imagedetail.f:
    com.minius.chat.imagedetail.ImagePagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minius.chat.imagedetail.ImagePagerActivity$4 -> com.minius.chat.imagedetail.g:
    com.minius.chat.imagedetail.ImagePagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minius.chat.imagedetail.ImagePagerActivity$5 -> com.minius.chat.imagedetail.h:
    com.minius.chat.imagedetail.ImagePagerActivity this$0 -> a
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.minius.chat.imagedetail.ImagePagerActivity$6 -> com.minius.chat.imagedetail.i:
    com.minius.chat.imagedetail.ImagePagerActivity this$0 -> a
    java.lang.String val$imagePath -> b
    void run() -> run
com.minius.chat.imagedetail.ImagePagerActivity$ImagePagerAdapter -> com.minius.chat.imagedetail.ImagePagerActivity$a:
    java.lang.String[] fileList -> a
    com.minius.chat.imagedetail.ImagePagerActivity this$0 -> b
    int getCount() -> b
    android.support.v4.app.Fragment getItem(int) -> a
com.minius.chat.imagedetail.ImagePagerActivity$MyHandler -> com.minius.chat.imagedetail.ImagePagerActivity$MyHandler:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minius.chat.imagedetail.ImagePagerActivity$MyReceiver -> com.minius.chat.imagedetail.ImagePagerActivity$b:
    com.minius.chat.imagedetail.ImagePagerActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.minius.chat.imagedetail.ImagePagerActivity$TimeConsumingTask -> com.minius.chat.imagedetail.ImagePagerActivity$c:
    com.minius.chat.imagedetail.ImagePagerActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.String[]) -> a
    void saveToAlbum(int,java.lang.String) -> a
    void onProgressUpdate(java.lang.String[]) -> b
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.minius.common.CommonBitmap -> com.minius.a.a:
    boolean isMyHeadPhotoInit -> a
    boolean isTarHeadPhotoInit -> b
    boolean isAlubmPhotoInit -> c
    boolean hasPic -> d
    java.util.Hashtable hashRefs -> e
    java.lang.ref.ReferenceQueue q -> f
    void setDefault() -> d
    com.minius.common.CommonBitmap getInstance() -> a
    void setMyHeadPhotoInit(boolean) -> a
    void setAlubmPhotoInit(boolean) -> b
    void addCacheBitmap(android.graphics.Bitmap,java.lang.Integer) -> a
    android.graphics.Bitmap getAlbumBitmap(android.content.Context,java.lang.String) -> a
    android.graphics.Bitmap getMyHeadBm() -> b
    void cleanCache() -> e
    void clearCache() -> c
com.minius.common.CommonBitmap$CommonBitmapContainer -> com.minius.a.a$a:
    com.minius.common.CommonBitmap instance -> a
    com.minius.common.CommonBitmap access$0() -> a
com.minius.common.CommonBitmap$MySoftRef -> com.minius.a.a$b:
    java.lang.Integer _key -> b
    com.minius.common.CommonBitmap this$0 -> a
    java.lang.Integer access$0(com.minius.common.CommonBitmap$MySoftRef) -> a
com.minius.error.ActErrorReport -> com.minius.error.ActErrorReport:
    java.lang.String info -> a
    android.widget.Button btnCancel -> b
    com.minius.error.ActErrorReport$BtnListener btnListener -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.widget.Button access$0(com.minius.error.ActErrorReport) -> a
com.minius.error.ActErrorReport$BtnListener -> com.minius.error.ActErrorReport$a:
    com.minius.error.ActErrorReport this$0 -> a
    void onClick(android.view.View) -> onClick
com.minius.leadpage.ConfigOperateGuide -> com.minius.leadpage.ConfigOperateGuide:
    android.widget.ImageButton guideBtn -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onResume() -> onResume
com.minius.leadpage.ConfigOperateGuide$1 -> com.minius.leadpage.a:
    com.minius.leadpage.ConfigOperateGuide this$0 -> a
    void onClick(android.view.View) -> onClick
com.minius.leadpage.GuideActivity -> com.minius.leadpage.GuideActivity:
    android.support.v4.view.ViewPager vp -> a
    com.minius.leadpage.ViewPagerAdapter vpAdapter -> b
    java.util.List views -> c
    android.widget.ImageView[] dots -> d
    int currentIndex -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initViews() -> a
    void initDots() -> b
    void setCurrentDot(int) -> c
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.minius.leadpage.OperateGuide -> com.minius.leadpage.OperateGuide:
    android.widget.ImageButton guideBtn -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onResume() -> onResume
com.minius.leadpage.OperateGuide$1 -> com.minius.leadpage.b:
    com.minius.leadpage.OperateGuide this$0 -> a
    void onClick(android.view.View) -> onClick
com.minius.leadpage.TranAnimation -> com.minius.leadpage.TranAnimation:
    android.widget.ImageView mLeft -> a
    void onCreate(android.os.Bundle) -> onCreate
com.minius.leadpage.TranAnimation$1 -> com.minius.leadpage.c:
    com.minius.leadpage.TranAnimation this$0 -> a
    void run() -> run
com.minius.leadpage.ViewPagerAdapter -> com.minius.leadpage.d:
    java.util.List views -> a
    android.app.Activity activity -> b
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void finishUpdate(android.view.View) -> b
    int getCount() -> b
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void goHome() -> d
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    android.os.Parcelable saveState() -> a
    void startUpdate(android.view.View) -> a
    void access$0(com.minius.leadpage.ViewPagerAdapter) -> a
com.minius.leadpage.ViewPagerAdapter$1 -> com.minius.leadpage.e:
    com.minius.leadpage.ViewPagerAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.minius.receiver.ConnectBroadCastReceiver -> com.minius.receiver.ConnectBroadCastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.minius.receiver.SDBroadCastReceiver -> com.minius.receiver.SDBroadCastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.minius.service.ICallback -> com.minius.service.a:
    void lockOn() -> a
com.minius.service.ICallback$Stub -> com.minius.service.a$a:
    com.minius.service.ICallback asInterface(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.minius.service.ICallback$Stub$Proxy -> com.minius.service.a$a$a:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void lockOn() -> a
com.minius.service.IService -> com.minius.service.b:
    void registerCallback(com.minius.service.ICallback) -> a
    void unregisterCallback(com.minius.service.ICallback) -> b
com.minius.service.IService$Stub -> com.minius.service.b$a:
    com.minius.service.IService asInterface(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.minius.service.IService$Stub$Proxy -> com.minius.service.b$a$a:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void registerCallback(com.minius.service.ICallback) -> a
    void unregisterCallback(com.minius.service.ICallback) -> b
com.minius.service.LockService -> com.minius.service.LockService:
    android.os.RemoteCallbackList mCallbacks -> a
    com.minius.service.LockService$MyCount mc -> b
    com.minius.service.IService$Stub mBinder -> c
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void callBack() -> a
    android.os.RemoteCallbackList access$0(com.minius.service.LockService) -> a
    void access$1(com.minius.service.LockService) -> b
com.minius.service.LockService$1 -> com.minius.service.c:
    com.minius.service.LockService this$0 -> a
    void unregisterCallback(com.minius.service.ICallback) -> b
    void registerCallback(com.minius.service.ICallback) -> a
com.minius.service.LockService$MyCount -> com.minius.service.LockService$a:
    com.minius.service.LockService this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.minius.service.MiniusService -> com.minius.service.MiniusService:
    com.minus.xsocket.handler.ControlHandler controlHandler -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void setIntentRedelivery(boolean) -> setIntentRedelivery
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void dealWithNewNoticeResend() -> a
    void onDestroy() -> onDestroy
    void showAutoCancelNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void showBackNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int) -> b
    void cancelNotification(int) -> a
com.minius.ui.CircleProgress -> com.minius.ui.CircleProgress:
    com.minius.ui.CircleProgress$CircleAttribute mCircleAttribute -> a
    int mMaxProgress -> b
    int mSubCurProgress -> c
    int targetPg -> d
    int tarInterval -> e
    int type -> f
    void defaultParam() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    int getTargetPg() -> getTargetPg
    void setTargetPg(int) -> setTargetPg
    void setMPg(int) -> setMPg
    void setmSubCurProgress(int) -> setmSubCurProgress
    void setType(int) -> setType
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
com.minius.ui.CircleProgress$CircleAttribute -> com.minius.ui.CircleProgress$a:
    boolean mBRoundPaintsFill -> a
    android.graphics.Paint mBottomPaint -> b
    int mDrawPos -> c
    android.graphics.Paint mMainPaints -> d
    int mSubPaintColor -> e
    int mBottomPaintColor -> f
    int mMainPaintColor -> g
    int mPaintWidth -> h
    android.graphics.RectF mRoundOval -> i
    android.graphics.RectF inRoundOval -> j
    int mSidePaintInterval -> k
    android.graphics.Paint mSubPaint -> l
    android.graphics.Paint mTextPaint -> m
    int mTextPaintColor -> n
    int mTextSize -> o
    com.minius.ui.CircleProgress this$0 -> p
    void autoFix(int,int) -> a
com.minius.ui.CustomDialog -> com.minius.ui.a:
com.minius.ui.CustomDialog$Builder -> com.minius.ui.a$a:
    android.content.Context context -> a
    java.lang.String title -> b
    java.lang.String titleHint -> c
    java.lang.String message -> d
    java.lang.String confirm_btnText -> e
    java.lang.String cancel_btnText -> f
    java.lang.String neutral_btnText -> g
    android.view.View contentView -> h
    android.app.Dialog myDialog -> i
    android.view.View$OnClickListener confirm_btnClickListener -> j
    android.view.View$OnClickListener cancel_btnClickListener -> k
    android.view.View$OnClickListener neutral_btnClickListener -> l
    com.minius.ui.CustomDialog$Builder setMessage(java.lang.String) -> a
    com.minius.ui.CustomDialog$Builder setTitle(java.lang.String) -> b
    void setTitleHint(java.lang.String) -> c
    void showHint(boolean) -> a
    com.minius.ui.CustomDialog$Builder setContentView(android.view.View) -> a
    void setPositiveButtonEnable(boolean) -> b
    com.minius.ui.CustomDialog$Builder setPositiveButton(java.lang.String,android.view.View$OnClickListener) -> a
    com.minius.ui.CustomDialog$Builder setNegativeButton(java.lang.String,android.view.View$OnClickListener) -> b
    com.minius.ui.CustomDialog$Builder setNeutralButton(java.lang.String,android.view.View$OnClickListener) -> c
    com.minius.ui.CustomDialog create() -> a
    android.app.Dialog getDialog() -> b
com.minius.ui.CustomDialog$Builder$1 -> com.minius.ui.b:
    com.minius.ui.CustomDialog$Builder this$1 -> a
    com.minius.ui.CustomDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.minius.ui.CustomDialog$Builder$2 -> com.minius.ui.c:
    com.minius.ui.CustomDialog$Builder this$1 -> a
    com.minius.ui.CustomDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.minius.ui.CustomDialog$Builder$3 -> com.minius.ui.d:
    com.minius.ui.CustomDialog$Builder this$1 -> a
    com.minius.ui.CustomDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.minius.ui.HackyViewPager -> com.minius.ui.HackyViewPager:
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
com.minius.ui.HeadPhotoHanddler -> com.minius.ui.e:
    float dip2px(android.content.Context,float) -> a
    int getExifOrientation(java.lang.String) -> a
    android.graphics.Bitmap handleHeadPhoto(java.lang.String,android.graphics.Bitmap,android.content.Context) -> a
    android.graphics.Bitmap getHeadPhoto(android.graphics.Bitmap) -> a
com.minius.ui.MyFrameLayout -> com.minius.ui.MyFrameLayout:
    int isCreate -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
com.minius.ui.ProgressHUD -> com.minius.ui.f:
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void setMessage(java.lang.CharSequence) -> a
    com.minius.ui.ProgressHUD show(android.content.Context,java.lang.CharSequence,boolean,boolean,android.content.DialogInterface$OnCancelListener) -> a
    com.minius.ui.ProgressHUD showSuccOrError(android.content.Context,java.lang.CharSequence,boolean) -> a
com.minus.actionsystem.ActionBtnOnItemLongClickListener -> com.minus.actionsystem.a:
    void onActionBtnLongclick(int) -> a
com.minus.actionsystem.InitFigureAppDrawable -> com.minus.actionsystem.b:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> a
    java.util.Map mImageCacheMap -> b
    java.util.Map mVGCacheMap -> c
    java.lang.ref.ReferenceQueue q -> e
    java.lang.ref.ReferenceQueue VGq -> f
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> d
    int screenWith -> g
    int screenHeight -> h
    java.lang.String path -> i
    java.lang.String girlAppearance -> j
    boolean isGirlInit -> k
    boolean isGirlEatingInit -> l
    boolean isGirlStudyInit -> m
    boolean isGirlAngryInit -> n
    boolean isGirlMissInit -> o
    java.lang.String boyAppearance -> p
    boolean isBoyInit -> q
    boolean isBoyEatingInit -> r
    boolean isBoyStudyInit -> s
    boolean isBoyAngryInit -> t
    boolean isBoyMissInit -> u
    boolean isAbuseInit -> v
    boolean isPFHBoyInit -> w
    boolean isPFHGirlInit -> x
    boolean isKissInit -> y
    boolean isHugInit -> z
    int[] girlAppID -> A
    int[] boyAppID -> B
    int[] girlEatAppID -> C
    int[] girlStudyAppID -> D
    int[] girlAngryAppID -> E
    int[] girlMissAppID -> F
    int[] boyEatAppID -> G
    int[] boyStudyAppID -> H
    int[] boyAngryAppID -> I
    int[] boyMissAppID -> J
    int[] abuseAppID -> K
    int[] pGirlHeadOrFaceAppID -> L
    int[] pBoyHeadOrFaceAppID -> M
    int[] kissAppID -> N
    int[] hugAppID -> O
    com.minus.actionsystem.InitFigureAppDrawable getInstance() -> a
    void resetGirlAppearance(java.lang.String) -> a
    void resetBoyAppearance(java.lang.String) -> b
    void setDefault() -> f
    int getImageid(java.lang.String,android.content.Context) -> a
    android.view.View getViewGroupFormCache(java.lang.String) -> c
    void addCacheVG(android.view.View,java.lang.String) -> a
    void cleanVGCache() -> g
    void clearVGCache() -> b
    android.graphics.drawable.LayerDrawable getLayerDrawableFormCache(java.lang.String,android.content.Context) -> b
    com.minus.actionsystem.InitFigureAppDrawable$LayerDrawableSoftRef addCacheLD(android.graphics.drawable.LayerDrawable,java.lang.String) -> a
    void cleanCache() -> h
    void clearCache() -> c
    android.graphics.drawable.LayerDrawable initGirl(android.content.Context) -> a
    android.graphics.drawable.LayerDrawable initBoy(android.content.Context) -> b
    android.graphics.drawable.LayerDrawable initGirlEatting(android.content.Context) -> c
    android.graphics.drawable.LayerDrawable initGirlStudy(android.content.Context) -> d
    android.graphics.drawable.LayerDrawable initGirlAngry(android.content.Context) -> e
    android.graphics.drawable.LayerDrawable initGirlMiss(android.content.Context) -> f
    android.graphics.drawable.LayerDrawable initBoyEatting(android.content.Context) -> g
    android.graphics.drawable.LayerDrawable initBoyStudy(android.content.Context) -> h
    android.graphics.drawable.LayerDrawable initBoyAngry(android.content.Context) -> i
    android.graphics.drawable.LayerDrawable initBoyMiss(android.content.Context) -> j
    android.graphics.Bitmap getCoupleAbuseID(android.content.Context) -> k
    android.graphics.Bitmap getPFaceOrPHeadID(android.content.Context,int) -> a
    android.graphics.Bitmap getKissID(android.content.Context) -> l
    int getHugGirlHair() -> d
    android.graphics.Bitmap getHugID(android.content.Context) -> m
    android.graphics.Bitmap readBitMap(android.content.Context,int) -> b
    android.view.View getAbuseVG(android.view.LayoutInflater) -> a
    android.view.View getGirlpFaceVG(android.view.LayoutInflater) -> b
    android.view.View getBoypFaceVG(android.view.LayoutInflater) -> c
    android.view.View getGirlpHeadVG(android.view.LayoutInflater) -> d
    android.view.View getBoypHeadVG(android.view.LayoutInflater) -> e
    android.view.View getKissVG(android.view.LayoutInflater) -> f
    android.view.View getHugVG(android.view.LayoutInflater) -> g
    void destoryAll() -> e
com.minus.actionsystem.InitFigureAppDrawable$InitFigureAppDrawableContainer -> com.minus.actionsystem.b$a:
    com.minus.actionsystem.InitFigureAppDrawable instance -> a
    com.minus.actionsystem.InitFigureAppDrawable access$0() -> a
com.minus.actionsystem.InitFigureAppDrawable$LayerDrawableSoftRef -> com.minus.actionsystem.b$b:
    java.lang.String _key -> b
    com.minus.actionsystem.InitFigureAppDrawable this$0 -> a
    java.lang.String access$0(com.minus.actionsystem.InitFigureAppDrawable$LayerDrawableSoftRef) -> a
com.minus.actionsystem.InitFigureAppDrawable$ViewSoftRef -> com.minus.actionsystem.b$c:
    java.lang.String _key -> b
    com.minus.actionsystem.InitFigureAppDrawable this$0 -> a
    java.lang.String access$0(com.minus.actionsystem.InitFigureAppDrawable$ViewSoftRef) -> a
com.minus.actionsystem.MainActivityItemClickListener -> com.minus.actionsystem.c:
    void onclick(int) -> b
com.minus.actionsystem.MenuItemView -> com.minus.actionsystem.MenuItemView:
    int flagX -> a
    int flagY -> b
    float radius -> c
    int status -> d
    boolean myChange -> e
    int positon -> f
    int viewHeight -> g
    android.content.Context context -> h
    void init(android.content.Context) -> a
    void setPosition(int,int) -> a
    void setPosition() -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getFlagX() -> getFlagX
    void setFlagX(int) -> setFlagX
    int getFlagY() -> getFlagY
    void setFlagY(int) -> setFlagY
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    int getStatus() -> getStatus
    void setStatus(int) -> setStatus
    void setMyChange(boolean) -> setMyChange
com.minus.actionsystem.MyAnimations -> com.minus.actionsystem.d:
    boolean clockwise -> a
    void startAnimations(android.content.Context,com.minus.actionsystem.MenuItemView,int) -> a
    void toShowAnimations(android.view.ViewGroup,int) -> b
    android.view.animation.Animation getMiniAnimation(int) -> a
    android.view.animation.Animation getMaxAnimation(int) -> b
    float dip2px(android.content.Context,float) -> a
    void access$0(android.view.ViewGroup,int) -> a
com.minus.actionsystem.MyAnimations$1 -> com.minus.actionsystem.e:
    com.minus.actionsystem.MenuItemView val$view -> a
    android.view.View val$childView -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.minus.actionsystem.MyAnimations$2 -> com.minus.actionsystem.f:
    com.minus.actionsystem.MenuItemView val$view -> a
    int val$item -> b
    com.minus.actionsystem.MainActivityItemClickListener val$listener -> c
    void onClick(android.view.View) -> onClick
com.minus.actionsystem.MyAnimations$3 -> com.minus.actionsystem.g:
    com.minus.actionsystem.MenuItemView val$view -> a
    int val$item -> b
    com.minus.actionsystem.ActionBtnOnItemLongClickListener val$LongClicklistener -> c
    boolean onLongClick(android.view.View) -> onLongClick
com.minus.calendar.CalendarAddActivity -> com.minus.calendar.CalendarAddActivity:
    android.widget.ImageView cancleButton -> a
    android.widget.ImageView completeButton -> b
    android.widget.EditText title -> c
    android.widget.TextView date -> d
    android.widget.Spinner prompt -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void initTopView() -> a
    void initBodyView() -> b
    android.widget.EditText access$0(com.minus.calendar.CalendarAddActivity) -> a
    android.widget.TextView access$1(com.minus.calendar.CalendarAddActivity) -> b
    android.widget.Spinner access$2(com.minus.calendar.CalendarAddActivity) -> c
com.minus.calendar.CalendarAddActivity$1 -> com.minus.calendar.a:
    com.minus.calendar.CalendarAddActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.calendar.CalendarAddActivity$2 -> com.minus.calendar.b:
    com.minus.calendar.CalendarAddActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.calendar.CalendarAddActivity$3 -> com.minus.calendar.c:
    com.minus.calendar.CalendarAddActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.calendar.CalendarAddActivity$4 -> com.minus.calendar.d:
    com.minus.calendar.CalendarAddActivity this$0 -> a
    android.widget.TextView val$prompt_title -> b
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.minus.calendar.CalendarAddActivity$5 -> com.minus.calendar.e:
    com.minus.calendar.CalendarAddActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.minus.calendar.CalendarAddActivity access$0(com.minus.calendar.CalendarAddActivity$5) -> a
com.minus.calendar.CalendarAddActivity$5$1 -> com.minus.calendar.f:
    com.minus.calendar.CalendarAddActivity$5 this$1 -> a
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.minus.calendar.CalendarItem -> com.minus.calendar.g:
    android.app.Activity mActivity -> a
    com.minus.table.CalendarTable mCalendarTable -> b
    android.view.View mPreview -> c
    android.view.View mDetailView -> d
    android.view.View getPreview() -> a
    void initPreview() -> b
    void refreshPreview() -> c
    void initDetailView() -> d
    void initDetailViewTop() -> e
    void addDetailViewToFather() -> f
    void removeDetailViewFromFather() -> g
    void initDetailViewBody() -> h
    void setPrompt(int) -> a
com.minus.calendar.CalendarItem$1 -> com.minus.calendar.h:
    com.minus.calendar.CalendarItem this$0 -> a
    android.widget.RelativeLayout val$delete -> b
    boolean onLongClick(android.view.View) -> onLongClick
com.minus.calendar.CalendarItem$2 -> com.minus.calendar.i:
    com.minus.calendar.CalendarItem this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.calendar.CalendarItem$3 -> com.minus.calendar.j:
    com.minus.calendar.CalendarItem this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.calendar.CalendarItem$4 -> com.minus.calendar.k:
    com.minus.calendar.CalendarItem this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.calendar.CalendarItem$5 -> com.minus.calendar.l:
    com.minus.calendar.CalendarItem this$0 -> a
    android.widget.EditText val$title -> b
    android.widget.TextView val$date -> c
    android.widget.Spinner val$prompt -> d
    void onClick(android.view.View) -> onClick
com.minus.calendar.CalendarItem$6 -> com.minus.calendar.m:
    com.minus.calendar.CalendarItem this$0 -> a
    android.widget.TextView val$date -> b
    android.widget.TextView val$dateCount -> c
    android.widget.Spinner val$prompt -> d
    void onClick(android.view.View) -> onClick
    com.minus.calendar.CalendarItem access$0(com.minus.calendar.CalendarItem$6) -> a
com.minus.calendar.CalendarItem$6$1 -> com.minus.calendar.n:
    com.minus.calendar.CalendarItem$6 this$1 -> a
    android.widget.TextView val$date -> b
    android.widget.TextView val$dateCount -> c
    android.widget.Spinner val$prompt -> d
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.minus.calendar.CalendarItem$7 -> com.minus.calendar.o:
    com.minus.calendar.CalendarItem this$0 -> a
    android.widget.Spinner val$prompt -> b
    void onClick(android.view.View) -> onClick
com.minus.calendar.CalendarItem$8 -> com.minus.calendar.p:
    com.minus.calendar.CalendarItem this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.minus.calendar.CalendarMainActivity -> com.minus.calendar.CalendarMainActivity:
    boolean isCalendarMainActivityRunning -> a
    boolean isSysCalendarFirstTimeLoad -> b
    android.widget.ImageView mBackBtn -> c
    android.widget.ImageView mAddBtn -> d
    android.widget.LinearLayout mBody -> e
    java.util.List mItems -> f
    com.minus.calendar.CalendarMainActivity$MyReceiver mReceiver -> g
    android.content.SharedPreferences mPreferences -> h
    com.minus.sql_interface.Database mDB -> i
    boolean isValidMemoDate(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void confirmSysCalendar(java.util.List) -> a
    void refreshBodyView() -> a
    void initTopView() -> b
    void initBodyView() -> c
    void checkAndSynchronize() -> d
    android.content.SharedPreferences access$0(com.minus.calendar.CalendarMainActivity) -> a
    com.minus.sql_interface.Database access$1(com.minus.calendar.CalendarMainActivity) -> b
com.minus.calendar.CalendarMainActivity$1 -> com.minus.calendar.q:
    com.minus.calendar.CalendarMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.calendar.CalendarMainActivity$2 -> com.minus.calendar.r:
    com.minus.calendar.CalendarMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.calendar.CalendarMainActivity$BackGroundState -> com.minus.calendar.CalendarMainActivity$a:
    com.minus.calendar.CalendarMainActivity$BackGroundState DEFAULT -> a
    com.minus.calendar.CalendarMainActivity$BackGroundState OMIT_LAST_MODIFY_TIME_READ_ONCE -> b
    com.minus.calendar.CalendarMainActivity$BackGroundState[] ENUM$VALUES -> c
    com.minus.calendar.CalendarMainActivity$BackGroundState[] values() -> values
    com.minus.calendar.CalendarMainActivity$BackGroundState valueOf(java.lang.String) -> valueOf
com.minus.calendar.CalendarMainActivity$MyReceiver -> com.minus.calendar.CalendarMainActivity$b:
    com.minus.calendar.CalendarMainActivity$BackGroundState backGroundState -> b
    java.lang.String mLastModifyRead -> c
    com.minus.calendar.CalendarMainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.minus.calendar.CalendarSysBirthday -> com.minus.calendar.s:
    void initPreview() -> b
    void refreshPreview() -> c
    void setPrompt(int) -> a
    void initDetailView() -> d
com.minus.calendar.CalendarSysBirthday$1 -> com.minus.calendar.t:
    com.minus.calendar.CalendarSysBirthday this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.minus.calendar.CalendarSysTogether -> com.minus.calendar.u:
    void initPreview() -> b
    void refreshPreview() -> c
    void setPrompt(int) -> a
    void initDetailView() -> d
com.minus.calendar.CalendarSysTogether$1 -> com.minus.calendar.v:
    com.minus.calendar.CalendarSysTogether this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.minus.calendar.CalendarSysTogether$2 -> com.minus.calendar.w:
    com.minus.calendar.CalendarSysTogether this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.calendar.CommonFunction -> com.minus.calendar.x:
    int calculateDay(java.lang.String) -> a
    int calculateDay(java.lang.String,java.lang.String) -> a
    java.lang.String standardizeDate(java.lang.String) -> b
    int compareTime(java.lang.String,java.lang.String) -> b
    int calculateLengthWithByte(java.lang.String) -> c
    java.lang.String subStringWithByte(java.lang.String,int) -> a
com.minus.calendar.MaxLengthWatcher -> com.minus.calendar.y:
    int mMaxLen -> a
    android.widget.EditText mEditText -> b
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.minus.cropimage.CaptureView -> com.minus.cropimage.CaptureView:
    android.graphics.Paint outsideCapturePaint -> a
    android.graphics.Paint lineCapturePaint -> b
    android.graphics.Rect viewRect -> c
    android.graphics.Rect captureRect -> d
    int mMotionEdge -> e
    float mLastX -> f
    float mLastY -> g
    android.graphics.drawable.Drawable horStretchArrows -> h
    android.graphics.drawable.Drawable verStretchArrows -> i
    int horStretchArrowsHalfWidth -> j
    int horStretchArrowsHalfHeigth -> k
    int verStretchArrowsHalfWidth -> l
    int verStretchArrowsHalfHeigth -> m
    com.minus.cropimage.CaptureView mCaptureView -> n
    com.minus.cropimage.CaptureView$ActionMode mMode -> o
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setFullScreen(boolean) -> setFullScreen
    void setMode(com.minus.cropimage.CaptureView$ActionMode) -> setMode
    int getGrow(float,float) -> a
    void handleMotion(int,float,float) -> a
    void moveBy(float,float) -> b
    void growBy(float,float) -> c
    android.graphics.Rect getCaptureRect() -> getCaptureRect
com.minus.cropimage.CaptureView$ActionMode -> com.minus.cropimage.CaptureView$a:
    com.minus.cropimage.CaptureView$ActionMode None -> a
    com.minus.cropimage.CaptureView$ActionMode Move -> b
    com.minus.cropimage.CaptureView$ActionMode Grow -> c
    com.minus.cropimage.CaptureView$ActionMode[] ENUM$VALUES -> d
    com.minus.cropimage.CaptureView$ActionMode[] values() -> values
    com.minus.cropimage.CaptureView$ActionMode valueOf(java.lang.String) -> valueOf
com.minus.cropimage.CropActivity -> com.minus.cropimage.CropActivity:
    com.minus.cropimage.CaptureView mCaptureView -> a
    android.widget.Button btnCrop -> b
    android.widget.Button btnCancel -> c
    android.graphics.Bitmap mBitmap -> d
    android.os.Handler mHandler -> e
    java.lang.String flag -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    android.graphics.Bitmap cropImage() -> a
    android.graphics.Bitmap regulationBitmap(android.graphics.Bitmap) -> a
    void startBackgroundJob(java.lang.String,java.lang.String,java.lang.Runnable,android.os.Handler) -> a
    java.lang.String access$0(com.minus.cropimage.CropActivity) -> a
    android.os.Handler access$1(com.minus.cropimage.CropActivity) -> b
    android.graphics.Bitmap access$2(com.minus.cropimage.CropActivity) -> c
com.minus.cropimage.CropActivity$1 -> com.minus.cropimage.CropActivity$1:
    com.minus.cropimage.CropActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.cropimage.CropActivity$2 -> com.minus.cropimage.a:
    com.minus.cropimage.CropActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.minus.cropimage.CropActivity access$0(com.minus.cropimage.CropActivity$2) -> a
com.minus.cropimage.CropActivity$2$1 -> com.minus.cropimage.b:
    com.minus.cropimage.CropActivity$2 this$1 -> a
    void run() -> run
com.minus.cropimage.CropActivity$3 -> com.minus.cropimage.c:
    com.minus.cropimage.CropActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.cropimage.CropActivity$CropJob -> com.minus.cropimage.CropActivity$a:
    android.app.ProgressDialog mDialog -> b
    java.lang.Runnable mJob -> c
    com.minus.cropimage.CropActivity this$0 -> a
    void run() -> run
com.minus.diary.DiaryActivity -> com.minus.diary.DiaryActivity:
    java.lang.String userAccount -> a
    java.lang.String mySmallName -> b
    java.lang.String tarSmallName -> c
    java.util.Timer connectTimer -> f
    android.graphics.Bitmap tarHeadLayerDrawable -> g
    android.graphics.Bitmap myHeadLayerDrawable -> h
    java.util.List refreshList -> i
    android.widget.ImageView Back_View -> j
    android.widget.ImageView Write_View -> k
    android.widget.RelativeLayout dairyMainRL -> n
    android.view.View Current_view -> d
    com.minus.diary.DiaryActivity$MyAdapter mAdapter -> o
    com.minus.lovershouse.util.RTPullListView mListview -> p
    com.minus.sql_interface.Database db -> e
    com.minus.diary.DiaryActivity$MyReceiver receiver -> q
    com.minus.diary.DiaryActivity$MyHandler mHandler -> r
    android.app.AlertDialog myDialog -> s
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void reloadData() -> a
    void initViewAndData() -> g
    void onResume() -> onResume
    void onPause() -> onPause
    void showDeleteAlert() -> b
    void Delete_NO(android.view.View) -> Delete_NO
    void Delete_YES(android.view.View) -> Delete_YES
    void getReadLastModifyTimeFromServer() -> c
    void refreshDiary(java.util.List) -> a
    void responseForRemoveDiary(java.lang.String) -> a
    void responseForNewDiary(java.lang.String) -> b
    void responseForModifyDiary(java.lang.String) -> c
    void responseForDiaryLastModifyTime(java.lang.String) -> d
    boolean isDiaryContain(java.lang.String,java.lang.String) -> a
    boolean isServerTimeListContainsEditDate(java.lang.String[],java.lang.String) -> a
    void responseForDiaryTimeList(java.lang.String) -> e
    void respondsForDiaryOneRecord(java.util.List) -> b
    void processResponse(java.lang.String) -> f
    void refreshFromServer() -> h
    void sendInfoToServer() -> d
    void showNoDiaryView() -> e
    void dismissNoDiaryViewIfExist() -> f
    void access$0(com.minus.diary.DiaryActivity,android.graphics.Bitmap) -> a
    void access$1(com.minus.diary.DiaryActivity,android.graphics.Bitmap) -> b
    android.graphics.Bitmap access$2(com.minus.diary.DiaryActivity) -> a
    android.graphics.Bitmap access$3(com.minus.diary.DiaryActivity) -> b
    com.minus.diary.DiaryActivity$MyHandler access$4(com.minus.diary.DiaryActivity) -> c
    com.minus.diary.DiaryActivity$MyAdapter access$5(com.minus.diary.DiaryActivity) -> d
com.minus.diary.DiaryActivity$1 -> com.minus.diary.a:
    com.minus.diary.DiaryActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.minus.diary.DiaryActivity$2 -> com.minus.diary.b:
    com.minus.diary.DiaryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.diary.DiaryActivity$3 -> com.minus.diary.c:
    com.minus.diary.DiaryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.diary.DiaryActivity$4 -> com.minus.diary.d:
    com.minus.diary.DiaryActivity this$0 -> a
    void run() -> run
    com.minus.diary.DiaryActivity access$0(com.minus.diary.DiaryActivity$4) -> a
com.minus.diary.DiaryActivity$4$1 -> com.minus.diary.e:
    com.minus.diary.DiaryActivity$4 this$1 -> a
    void run() -> run
com.minus.diary.DiaryActivity$MyAdapter -> com.minus.diary.DiaryActivity$a:
    android.content.Context context -> b
    java.util.List listData -> c
    android.view.LayoutInflater inflater -> d
    com.minus.diary.DiaryActivity this$0 -> a
    void init(android.content.Context) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void access$0(com.minus.diary.DiaryActivity$MyAdapter,java.util.List) -> a
    java.util.List access$1(com.minus.diary.DiaryActivity$MyAdapter) -> a
com.minus.diary.DiaryActivity$MyHandler -> com.minus.diary.DiaryActivity$MyHandler:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.diary.DiaryActivity$MyOnClickListener -> com.minus.diary.DiaryActivity$b:
    int index -> b
    com.minus.diary.DiaryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.diary.DiaryActivity$MyReceiver -> com.minus.diary.DiaryActivity$c:
    com.minus.diary.DiaryActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.minus.diary.DiaryActivity$ViewHolder -> com.minus.diary.DiaryActivity$d:
    int pos -> b
    android.widget.ImageView headphoto -> c
    android.widget.TextView name -> d
    android.widget.TextView title -> e
    android.widget.TextView content -> f
    android.widget.ImageView New -> g
    android.widget.TextView date -> h
    boolean isSelected -> i
    boolean isComing -> j
    java.lang.String initdate -> k
    java.lang.String account -> l
    android.widget.ImageView ModiferButton -> m
    android.widget.ImageView DeleteButton -> n
    com.minus.diary.DiaryActivity this$0 -> a
    android.widget.TextView access$0(com.minus.diary.DiaryActivity$ViewHolder) -> a
    android.widget.TextView access$1(com.minus.diary.DiaryActivity$ViewHolder) -> b
    java.lang.String access$2(com.minus.diary.DiaryActivity$ViewHolder) -> c
    void access$4(com.minus.diary.DiaryActivity$ViewHolder,android.widget.TextView) -> a
    void access$5(com.minus.diary.DiaryActivity$ViewHolder,android.widget.ImageView) -> a
    void access$6(com.minus.diary.DiaryActivity$ViewHolder,android.widget.ImageView) -> b
    void access$7(com.minus.diary.DiaryActivity$ViewHolder,android.widget.TextView) -> b
    void access$8(com.minus.diary.DiaryActivity$ViewHolder,android.widget.TextView) -> c
    void access$9(com.minus.diary.DiaryActivity$ViewHolder,android.widget.TextView) -> d
    void access$10(com.minus.diary.DiaryActivity$ViewHolder,android.widget.ImageView) -> c
    void access$11(com.minus.diary.DiaryActivity$ViewHolder,android.widget.ImageView) -> d
    void access$12(com.minus.diary.DiaryActivity$ViewHolder,boolean) -> a
    void access$13(com.minus.diary.DiaryActivity$ViewHolder,java.lang.String) -> a
    java.lang.String access$14(com.minus.diary.DiaryActivity$ViewHolder) -> d
    void access$15(com.minus.diary.DiaryActivity$ViewHolder,boolean) -> b
    android.widget.ImageView access$16(com.minus.diary.DiaryActivity$ViewHolder) -> e
    android.widget.ImageView access$17(com.minus.diary.DiaryActivity$ViewHolder) -> f
    android.widget.ImageView access$18(com.minus.diary.DiaryActivity$ViewHolder) -> g
    android.widget.TextView access$19(com.minus.diary.DiaryActivity$ViewHolder) -> h
    void access$20(com.minus.diary.DiaryActivity$ViewHolder,int) -> a
    void access$21(com.minus.diary.DiaryActivity$ViewHolder,java.lang.String) -> b
    android.widget.TextView access$22(com.minus.diary.DiaryActivity$ViewHolder) -> i
    android.widget.ImageView access$23(com.minus.diary.DiaryActivity$ViewHolder) -> j
    boolean access$24(com.minus.diary.DiaryActivity$ViewHolder) -> k
    boolean access$25(com.minus.diary.DiaryActivity$ViewHolder) -> l
    int access$26(com.minus.diary.DiaryActivity$ViewHolder) -> m
com.minus.diary.EditDiaryActivity -> com.minus.diary.EditDiaryActivity:
    android.widget.ImageView Back_Button -> b
    android.widget.ImageView Commit_Button -> c
    android.widget.ImageView headphoto_View -> d
    android.widget.EditText Title_View -> e
    android.widget.EditText Content_View -> f
    com.minius.ui.CustomDialog$Builder mBuilder -> g
    com.minus.sql_interface.Database db -> a
    com.minus.lovershouse.singleton.GlobalApplication mIns -> h
    boolean IsModifer -> i
    android.content.SharedPreferences preferences -> j
    android.content.SharedPreferences$Editor editor -> k
    java.lang.String diaryAcc -> n
    java.lang.String diaryAuthor -> o
    java.lang.String diaryIniDate -> p
    java.lang.String diaryTitle -> q
    java.lang.String diaryArticle -> r
    android.graphics.Bitmap diaryHeadLayerDrawable -> s
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void initSefInfo() -> a
    void initData() -> b
    void onResume() -> onResume
    void warnNull(java.lang.String) -> a
    void onClickPublishButton() -> c
    void onClick(android.view.View) -> onClick
    void showCancelModifyAlert() -> d
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    com.minius.ui.CustomDialog$Builder access$0(com.minus.diary.EditDiaryActivity) -> a
com.minus.diary.EditDiaryActivity$1 -> com.minus.diary.f:
    com.minus.diary.EditDiaryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.diary.EditDiaryActivity$2 -> com.minus.diary.g:
    com.minus.diary.EditDiaryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.gallery.AlbumAddPopup -> com.minus.gallery.a:
    android.widget.TextView btn_take_photo -> a
    android.widget.TextView btn_pick_photo -> b
    android.widget.TextView btn_cancel -> c
    android.widget.TextView tipTv -> d
    android.view.View mMenuView -> e
    boolean checkCameraHardware(android.content.Context) -> a
    void setTipText(java.lang.String) -> a
    android.view.View access$0(com.minus.gallery.AlbumAddPopup) -> a
com.minus.gallery.AlbumAddPopup$1 -> com.minus.gallery.b:
    com.minus.gallery.AlbumAddPopup this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.gallery.AlbumAddPopup$2 -> com.minus.gallery.c:
    com.minus.gallery.AlbumAddPopup this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.minus.gallery.AlbumImageHandler -> com.minus.gallery.d:
    boolean isUploadingImage -> a
    int uploadImagePacketIndex -> b
    java.lang.String uploadImageDate -> c
    android.graphics.Bitmap uploadImageData -> d
    android.os.Handler pgHandler -> e
    int PerImageWidthdp -> f
    int PerImageHeightdp -> g
    int PerImageWidthpx -> h
    int PerImageHeightpx -> i
    void init() -> e
    com.minus.gallery.AlbumImageHandler getInstance() -> a
    void onClickedDismissUploadImage() -> b
    int getExifOrientation(java.lang.String) -> a
    com.minus.table.GalleryTable saveAndSendImage(java.lang.String) -> b
    void uploadImageWithAccount(java.lang.String,java.lang.String,android.graphics.Bitmap,int) -> a
    byte[] Bitmap2Bytes(android.graphics.Bitmap) -> a
    void responseForUploadConfirmProgress() -> c
    void setHandler(android.os.Handler) -> a
    boolean isUploadingImage() -> d
com.minus.gallery.AlbumImageHandler$AlbumImageHandlerContainer -> com.minus.gallery.d$a:
    com.minus.gallery.AlbumImageHandler instance -> a
    com.minus.gallery.AlbumImageHandler access$0() -> a
com.minus.gallery.AlbumOperateImgPopup -> com.minus.gallery.e:
    android.widget.TextView btn_showInMain -> a
    android.widget.TextView btn_saveImage -> b
    android.widget.TextView btn_deleteImage -> c
    android.widget.TextView btn_galleryCancleOperation -> d
    android.view.View mMenuView -> e
    android.view.View access$0(com.minus.gallery.AlbumOperateImgPopup) -> a
com.minus.gallery.AlbumOperateImgPopup$1 -> com.minus.gallery.f:
    com.minus.gallery.AlbumOperateImgPopup this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.gallery.AlbumOperateImgPopup$2 -> com.minus.gallery.g:
    com.minus.gallery.AlbumOperateImgPopup this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.minus.gallery.AlbumPgPopup -> com.minus.gallery.h:
    android.widget.Button btn_cancel -> a
    com.minus.gallery.NumberProgressBar bnp -> b
    android.widget.TextView tipTv -> c
    android.view.View mMenuView -> d
    void setTipText(java.lang.String) -> a
    void setPg(int) -> a
    com.minus.gallery.NumberProgressBar access$0(com.minus.gallery.AlbumPgPopup) -> a
com.minus.gallery.AlbumPgPopup$1 -> com.minus.gallery.i:
    com.minus.gallery.AlbumPgPopup this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.gallery.GalleryActivity -> com.minus.gallery.GalleryActivity:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> b
    int MAINIMGHEIGHT -> e
    int MAINIMGWIDTH -> f
    com.minius.ui.CustomDialog$Builder mBuilder -> g
    android.widget.FrameLayout galleryTop -> h
    android.widget.ImageView nopicIV -> i
    android.widget.FrameLayout contentView -> j
    android.widget.ImageView backBtn -> k
    android.widget.ImageView addBtn -> n
    android.widget.Gallery gallery -> o
    com.minus.gallery.GalleryActivity$GalleryAdapter galleryAdapter -> c
    com.minus.gallery.QImageView mainImageView -> p
    android.widget.RelativeLayout mainRL -> q
    android.graphics.Bitmap m -> d
    java.util.List refreshTimeList -> r
    com.minus.sql_interface.Database db -> s
    com.minus.gallery.GalleryActivity$MyReceiver receiver -> t
    com.minus.gallery.GalleryActivity$MyHandler mHandler -> u
    com.minius.ui.ProgressHUD showErrorOrSucc -> v
    com.minus.gallery.AlbumAddPopup mAlbumAddPopup -> w
    com.minus.gallery.AlbumPgPopup mAlbumPgPopup -> x
    com.minus.gallery.AlbumOperateImgPopup mOperateImgPopup -> y
    java.util.Timer connectTimer -> z
    com.minus.gallery.GalleryActivity$MyGestureListener mMyGestureListener -> A
    int iniPos -> B
    boolean isGalleryActivityVisible -> C
    com.minius.ui.ProgressHUD mRefreshHUD -> D
    com.minius.ui.CircleProgress sector -> E
    java.lang.Runnable seleImgRunnable -> F
    android.view.View$OnClickListener itemsOnClick -> G
    android.view.View$OnClickListener operateImgOnClick -> H
    int count -> I
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void showProgressHUD(java.lang.String,int) -> a
    void onStop() -> onStop
    void showInitialAlbum(int) -> a
    void cancelUploadImage() -> a
    void refreshFromServer() -> f
    void sendInfoToServer() -> b
    void onDestroy() -> onDestroy
    void initView() -> c
    void imageBrower(int) -> c
    void initGalleryAndMainPager() -> g
    void scheduleDismissOnScreenControls() -> h
    void getImageFromSd(java.lang.String,int,boolean) -> a
    void onClick(android.view.View) -> onClick
    void onClickedDisplayHomePage() -> i
    void saveToSD(java.lang.String) -> d
    void onClickedSaveToLocalPhotoLibrary() -> j
    void onClickedDeletePic() -> k
    android.net.Uri getOutputMediaFileUri(int) -> d
    java.io.File getOutputMediaFile(int) -> e
    void reponseForSetHomePageState(java.lang.String) -> a
    void reponseForRemoveOneImage(java.lang.String) -> b
    void responseForLastModifyTime(java.lang.String) -> e
    boolean isAlbumContain(java.lang.String) -> f
    boolean isServerTimeList(java.lang.String[],java.lang.String) -> a
    void responseForTimeList(java.lang.String) -> g
    void responseForGetImage(java.lang.String) -> h
    void responseForUploadImageState(java.lang.String) -> i
    void removeImageWithIndex(int,boolean) -> a
    void showNoImageView() -> l
    void dismissNoImageViewIfExist() -> d
    void responseForUploadConfirmProgress() -> e
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void processStringResponse(java.lang.String) -> c
    android.widget.Gallery access$0(com.minus.gallery.GalleryActivity) -> a
    com.minus.gallery.AlbumAddPopup access$1(com.minus.gallery.GalleryActivity) -> b
    android.net.Uri access$2(int) -> b
    com.minus.gallery.AlbumOperateImgPopup access$3(com.minus.gallery.GalleryActivity) -> c
    void access$4(com.minus.gallery.GalleryActivity) -> d
    void access$5(com.minus.gallery.GalleryActivity) -> e
    void access$6(com.minus.gallery.GalleryActivity) -> f
    com.minius.ui.CustomDialog$Builder access$7(com.minus.gallery.GalleryActivity) -> g
    void access$8(com.minus.gallery.GalleryActivity,com.minius.ui.CustomDialog$Builder) -> a
    com.minus.gallery.GalleryActivity$MyHandler access$9(com.minus.gallery.GalleryActivity) -> h
    void access$10(com.minus.gallery.GalleryActivity,java.lang.String) -> a
    void access$11(com.minus.gallery.GalleryActivity,java.lang.String) -> b
    void access$12(com.minus.gallery.GalleryActivity,java.lang.String) -> c
    boolean access$13(com.minus.gallery.GalleryActivity) -> i
    com.minus.gallery.AlbumPgPopup access$14(com.minus.gallery.GalleryActivity) -> j
    com.minius.ui.ProgressHUD access$15(com.minus.gallery.GalleryActivity) -> k
    void access$16(com.minus.gallery.GalleryActivity,com.minius.ui.ProgressHUD) -> a
    com.minius.ui.ProgressHUD access$17(com.minus.gallery.GalleryActivity) -> l
    void access$18(com.minus.gallery.GalleryActivity,com.minus.gallery.AlbumPgPopup) -> a
    void access$19(com.minus.gallery.GalleryActivity,int) -> a
    android.widget.FrameLayout access$20(com.minus.gallery.GalleryActivity) -> m
    void access$21(com.minus.gallery.GalleryActivity,int) -> b
    android.widget.FrameLayout access$22(com.minus.gallery.GalleryActivity) -> n
    com.minus.gallery.GalleryActivity$MyGestureListener access$23(com.minus.gallery.GalleryActivity) -> o
    android.view.View$OnClickListener access$24(com.minus.gallery.GalleryActivity) -> p
    void access$25(com.minus.gallery.GalleryActivity,com.minus.gallery.AlbumOperateImgPopup) -> a
    void access$26(com.minus.gallery.GalleryActivity) -> q
com.minus.gallery.GalleryActivity$1 -> com.minus.gallery.j:
    com.minus.gallery.GalleryActivity this$0 -> a
    void run() -> run
com.minus.gallery.GalleryActivity$10 -> com.minus.gallery.k:
    com.minus.gallery.GalleryActivity this$0 -> a
    java.lang.String val$imagePath -> b
    void run() -> run
com.minus.gallery.GalleryActivity$2 -> com.minus.gallery.l:
    com.minus.gallery.GalleryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.gallery.GalleryActivity$3 -> com.minus.gallery.m:
    com.minus.gallery.GalleryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.minus.gallery.GalleryActivity access$0(com.minus.gallery.GalleryActivity$3) -> a
com.minus.gallery.GalleryActivity$3$1 -> com.minus.gallery.n:
    com.minus.gallery.GalleryActivity$3 this$1 -> a
    void onClick(android.view.View) -> onClick
com.minus.gallery.GalleryActivity$3$2 -> com.minus.gallery.o:
    com.minus.gallery.GalleryActivity$3 this$1 -> a
    void onClick(android.view.View) -> onClick
com.minus.gallery.GalleryActivity$4 -> com.minus.gallery.p:
    com.minus.gallery.GalleryActivity this$0 -> a
    boolean onPreDraw() -> onPreDraw
com.minus.gallery.GalleryActivity$5 -> com.minus.gallery.q:
    com.minus.gallery.GalleryActivity this$0 -> a
    boolean onPreDraw() -> onPreDraw
com.minus.gallery.GalleryActivity$6 -> com.minus.gallery.r:
    com.minus.gallery.GalleryActivity this$0 -> a
    void run() -> run
    com.minus.gallery.GalleryActivity access$0(com.minus.gallery.GalleryActivity$6) -> a
com.minus.gallery.GalleryActivity$6$1 -> com.minus.gallery.s:
    com.minus.gallery.GalleryActivity$6 this$1 -> a
    void run() -> run
com.minus.gallery.GalleryActivity$7 -> com.minus.gallery.t:
    com.minus.gallery.GalleryActivity this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.minus.gallery.GalleryActivity$8 -> com.minus.gallery.u:
    com.minus.gallery.GalleryActivity this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.minus.gallery.GalleryActivity$9 -> com.minus.gallery.v:
    com.minus.gallery.GalleryActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.minus.gallery.GalleryActivity$GalleryAdapter -> com.minus.gallery.GalleryActivity$a:
    android.content.Context context -> b
    java.util.List list -> c
    int mainSelection -> d
    com.minus.gallery.GalleryActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void setMainSelection(int) -> a
    int getSelection() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.List access$0(com.minus.gallery.GalleryActivity$GalleryAdapter) -> a
    void access$1(com.minus.gallery.GalleryActivity$GalleryAdapter,java.util.List) -> a
com.minus.gallery.GalleryActivity$MyGestureListener -> com.minus.gallery.GalleryActivity$b:
    boolean isLongClick -> b
    com.minus.gallery.GalleryActivity this$0 -> a
    void setIsLongClick(boolean) -> a
    boolean left() -> a
    boolean right() -> b
    boolean clickView() -> c
com.minus.gallery.GalleryActivity$MyHandler -> com.minus.gallery.GalleryActivity$MyHandler:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.gallery.GalleryActivity$MyReceiver -> com.minus.gallery.GalleryActivity$c:
    com.minus.gallery.GalleryActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.minus.gallery.GalleryActivity$TimeConsumingTask -> com.minus.gallery.GalleryActivity$d:
    com.minus.gallery.GalleryActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.minus.table.GalleryTable doInBackground(java.lang.String[]) -> a
    void onProgressUpdate(java.lang.Integer[]) -> a
    void onPostExecute(com.minus.table.GalleryTable) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.minus.gallery.GalleryImageDetailFragment -> com.minus.gallery.w:
    java.lang.String mImageUrl -> c
    android.widget.ImageView mImageView -> d
    android.widget.ProgressBar progressBar -> e
    uk.co.senab.photoview.PhotoViewAttacher mAttacher -> f
    int imgHeight -> g
    int imgWidth -> h
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> a
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> b
    com.minus.gallery.GalleryImageDetailFragment newInstance(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void starReadPic() -> a
    void onDestroy() -> onDestroy
    void onDestroyView() -> onDestroyView
    android.widget.ProgressBar access$0(com.minus.gallery.GalleryImageDetailFragment) -> a
    android.widget.ImageView access$1(com.minus.gallery.GalleryImageDetailFragment) -> b
    uk.co.senab.photoview.PhotoViewAttacher access$2(com.minus.gallery.GalleryImageDetailFragment) -> c
com.minus.gallery.GalleryImageDetailFragment$1 -> com.minus.gallery.x:
    com.minus.gallery.GalleryImageDetailFragment this$0 -> a
    void onPhotoTap(android.view.View,float,float) -> a
com.minus.gallery.GalleryImageDetailFragment$2 -> com.minus.gallery.y:
    com.minus.gallery.GalleryImageDetailFragment this$0 -> a
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$assist$FailReason$FailType -> b
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    int[] $SWITCH_TABLE$com$nostra13$universalimageloader$core$assist$FailReason$FailType() -> a
com.minus.gallery.GalleryImagePagerActivity -> com.minus.gallery.GalleryImagePagerActivity:
    int PerImageWidth -> o
    int PerImageHeight -> p
    com.minus.gallery.AlbumOperateImgPopup mOperateImgPopup -> q
    com.minus.gallery.GalleryImagePagerActivity$MyHandler mHandler -> r
    com.minius.ui.HackyViewPager mPager -> s
    int pagerPosition -> t
    android.widget.TextView indicator -> u
    android.widget.ImageView backBtn -> v
    android.widget.ImageView menuBtn -> w
    com.minius.ui.CustomDialog$Builder mBuilder -> x
    com.minus.sql_interface.Database mDB -> y
    com.minus.gallery.GalleryImagePagerActivity$ImagePagerAdapter mAdapter -> n
    com.minus.gallery.GalleryImagePagerActivity$MyReceiver receiver -> z
    com.minius.ui.ProgressHUD showErrorOrSucc -> A
    android.view.View$OnClickListener operateImgOnClick -> B
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void reponseForSetHomePageState(java.lang.String) -> b
    void reponseForRemoveOneImage(java.lang.String) -> c
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onClickedDisplayHomePage() -> f
    void onClickedSaveToLocalPhotoLibrary() -> g
    void saveToSD(java.lang.String) -> d
    void onClickedDeletePic() -> h
    void removeImageWithIndex(int,boolean) -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    com.minus.gallery.AlbumOperateImgPopup access$0(com.minus.gallery.GalleryImagePagerActivity) -> a
    void access$1(com.minus.gallery.GalleryImagePagerActivity) -> b
    void access$2(com.minus.gallery.GalleryImagePagerActivity) -> c
    void access$3(com.minus.gallery.GalleryImagePagerActivity) -> d
    com.minius.ui.CustomDialog$Builder access$4(com.minus.gallery.GalleryImagePagerActivity) -> e
    void access$5(com.minus.gallery.GalleryImagePagerActivity,com.minius.ui.CustomDialog$Builder) -> a
    com.minus.gallery.GalleryImagePagerActivity$MyHandler access$6(com.minus.gallery.GalleryImagePagerActivity) -> f
    com.minius.ui.ProgressHUD access$7(com.minus.gallery.GalleryImagePagerActivity) -> g
    void access$8(com.minus.gallery.GalleryImagePagerActivity,com.minius.ui.ProgressHUD) -> a
    com.minius.ui.HackyViewPager access$9(com.minus.gallery.GalleryImagePagerActivity) -> h
    android.view.View$OnClickListener access$10(com.minus.gallery.GalleryImagePagerActivity) -> i
    void access$11(com.minus.gallery.GalleryImagePagerActivity,com.minus.gallery.AlbumOperateImgPopup) -> a
    android.widget.TextView access$12(com.minus.gallery.GalleryImagePagerActivity) -> j
com.minus.gallery.GalleryImagePagerActivity$1 -> com.minus.gallery.z:
    com.minus.gallery.GalleryImagePagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.minus.gallery.GalleryImagePagerActivity access$0(com.minus.gallery.GalleryImagePagerActivity$1) -> a
com.minus.gallery.GalleryImagePagerActivity$1$1 -> com.minus.gallery.aa:
    com.minus.gallery.GalleryImagePagerActivity$1 this$1 -> a
    void onClick(android.view.View) -> onClick
com.minus.gallery.GalleryImagePagerActivity$1$2 -> com.minus.gallery.ab:
    com.minus.gallery.GalleryImagePagerActivity$1 this$1 -> a
    void onClick(android.view.View) -> onClick
com.minus.gallery.GalleryImagePagerActivity$2 -> com.minus.gallery.ac:
    com.minus.gallery.GalleryImagePagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.gallery.GalleryImagePagerActivity$3 -> com.minus.gallery.ad:
    com.minus.gallery.GalleryImagePagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.gallery.GalleryImagePagerActivity$4 -> com.minus.gallery.ae:
    com.minus.gallery.GalleryImagePagerActivity this$0 -> a
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.minus.gallery.GalleryImagePagerActivity$5 -> com.minus.gallery.af:
    com.minus.gallery.GalleryImagePagerActivity this$0 -> a
    java.lang.String val$imagePath -> b
    void run() -> run
com.minus.gallery.GalleryImagePagerActivity$ImagePagerAdapter -> com.minus.gallery.GalleryImagePagerActivity$a:
    java.util.List fileList -> a
    com.minus.gallery.GalleryImagePagerActivity this$0 -> b
    int getItemPosition(java.lang.Object) -> a
    int getCount() -> b
    android.support.v4.app.Fragment getItem(int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
com.minus.gallery.GalleryImagePagerActivity$MyHandler -> com.minus.gallery.GalleryImagePagerActivity$MyHandler:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.gallery.GalleryImagePagerActivity$MyReceiver -> com.minus.gallery.GalleryImagePagerActivity$b:
    com.minus.gallery.GalleryImagePagerActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.minus.gallery.GestureListener -> com.minus.gallery.ag:
    int distance -> a
    int velocity -> b
    int lastMotionX -> c
    int lastMotionY -> d
    long lastDowntime -> e
    android.view.GestureDetector gestureDetector -> f
    boolean left() -> a
    boolean right() -> b
    boolean clickView() -> c
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.minus.gallery.NumberProgressBar -> com.minus.gallery.NumberProgressBar:
    android.content.Context mContext -> a
    int mMax -> b
    int mProgress -> c
    int mReachedBarColor -> d
    int mUnreachedBarColor -> e
    int mTextColor -> f
    float mTextSize -> g
    float mReachedBarHeight -> h
    float mUnreachedBarHeight -> i
    int default_text_color -> j
    int default_reached_color -> k
    int default_unreached_color -> l
    float default_progress_text_offset -> m
    float default_text_size -> n
    float default_reached_bar_height -> o
    float default_unreached_bar_height -> p
    float mDrawTextWidth -> q
    float mDrawTextStart -> r
    float mDrawTextEnd -> s
    java.lang.String mCurrentDrawText -> t
    android.graphics.Paint mReachedBarPaint -> u
    android.graphics.Paint mUnreachedBarPaint -> v
    android.graphics.Paint mTextPaint -> w
    android.graphics.RectF mUnreachedRectF -> x
    android.graphics.RectF mReachedRectF -> y
    float mOffset -> z
    boolean mDrawUnreachedBar -> A
    boolean mDrawReachedBar -> B
    boolean mIfDrawText -> C
    int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    void onMeasure(int,int) -> onMeasure
    int measure(int,boolean) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void initializePainters() -> a
    void calculateDrawRectFWithoutProgressText() -> b
    void calculateDrawRectF() -> c
    int getTextColor() -> getTextColor
    float getProgressTextSize() -> getProgressTextSize
    int getUnreachedBarColor() -> getUnreachedBarColor
    int getReachedBarColor() -> getReachedBarColor
    int getProgress() -> getProgress
    int getMax() -> getMax
    float getReachedBarHeight() -> getReachedBarHeight
    float getUnreachedBarHeight() -> getUnreachedBarHeight
    void setProgressTextSize(float) -> setProgressTextSize
    void setProgressTextColor(int) -> setProgressTextColor
    void setUnreachedBarColor(int) -> setUnreachedBarColor
    void setReachedBarColor(int) -> setReachedBarColor
    void setMax(int) -> setMax
    void setProgress(int) -> setProgress
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    float dp2px(float) -> a
    float sp2px(float) -> b
    void setProgressTextVisibility(com.minus.gallery.NumberProgressBar$ProgressTextVisibility) -> setProgressTextVisibility
com.minus.gallery.NumberProgressBar$ProgressTextVisibility -> com.minus.gallery.NumberProgressBar$a:
    com.minus.gallery.NumberProgressBar$ProgressTextVisibility Visible -> a
    com.minus.gallery.NumberProgressBar$ProgressTextVisibility Invisible -> b
    com.minus.gallery.NumberProgressBar$ProgressTextVisibility[] ENUM$VALUES -> c
    com.minus.gallery.NumberProgressBar$ProgressTextVisibility[] values() -> values
    com.minus.gallery.NumberProgressBar$ProgressTextVisibility valueOf(java.lang.String) -> valueOf
com.minus.gallery.QImageView -> com.minus.gallery.QImageView:
    android.graphics.Matrix mBaseMatrix -> a
    android.graphics.Matrix mSuppMatrix -> b
    android.graphics.Matrix mDisplayMatrix -> j
    float[] mMatrixValues -> k
    android.graphics.Bitmap image -> c
    int mThisWidth -> d
    int mThisHeight -> e
    float mMaxZoom -> f
    float mMinZoom -> g
    int imageWidth -> l
    int imageHeight -> m
    float scaleRate -> n
    android.os.Handler mHandler -> h
    float _dy -> i
    void setImageSize(int,int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void init() -> b
    void arithScaleRate() -> c
    float getScaleRate() -> getScaleRate
    int getImageWidth() -> getImageWidth
    void setImageWidth(int) -> setImageWidth
    int getImageHeight() -> getImageHeight
    void setImageHeight(int) -> setImageHeight
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void center(boolean,boolean) -> a
    void layoutToCenter() -> a
    float getValue(android.graphics.Matrix,int) -> a
    float getScale(android.graphics.Matrix) -> a
    float getScale() -> getScale
    android.graphics.Matrix getImageViewMatrix() -> getImageViewMatrix
    void zoomTo(float,float,float) -> a
    void zoomTo(float) -> a
    void postTranslate(float,float) -> a
com.minus.lovershouse.ChatActivity -> com.minus.lovershouse.ChatActivity:
    boolean isChatActivityVisible -> t
    boolean isAppBackground -> u
    android.widget.ImageView faceKeyBoardSendBtn -> v
    java.lang.Runnable ImgThread -> w
    android.view.View$OnClickListener itemsOnClick -> x
    android.os.Handler myRefreshHandler -> y
    java.lang.String email -> z
    android.widget.ImageView backTomianImgBtn -> A
    android.widget.ImageView mBtnSend -> B
    android.widget.ImageView picBtn -> C
    com.minus.lovershouse.util.SelectPicPopup mSelectPicPopup -> D
    android.widget.EditText contentEt -> E
    com.minus.lovershouse.util.RTPullListView mListView -> F
    java.util.List mDataArrays -> G
    java.util.List msgRecords -> H
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter mAdapter -> I
    java.lang.Boolean isVoiceMode -> J
    java.lang.Boolean isSend -> K
    android.content.Context context -> n
    android.widget.FrameLayout topRl -> o
    android.widget.RelativeLayout bottomRl -> p
    com.minus.lovershouse.face.FaceRelativeLayout mFRl -> q
    android.widget.RelativeLayout mVoiceLL -> r
    boolean isFaceShow -> s
    android.widget.ImageView record -> L
    android.widget.ImageView keyboardBtn -> M
    android.app.Dialog recordingDialog -> N
    com.minus.lovershouse.util.AudioRecorder mr -> O
    java.lang.Thread recordThread -> P
    int MAX_TIME -> Q
    double MIX_TIME -> R
    int RECORD_NO -> S
    int RECORD_ING -> T
    int RECODE_ED -> U
    int RECODE_STATE -> V
    double recodeTime -> W
    double voiceValue -> X
    android.widget.ImageView dialog_img -> Y
    com.minus.lovershouse.ChatActivity$MyReceiver receiver -> Z
    com.minus.lovershouse.ChatActivity$MyHandler mHandler -> aa
    java.util.Timer connectTimer -> ab
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onStop() -> onStop
    void enterForeGround() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void initView() -> w
    void deletevoiceFile(java.lang.String) -> b
    void recordThread() -> g
    void setDialogImage() -> h
    void showVoiceDialog() -> i
    void showWarnToast() -> j
    void onClick(android.view.View) -> onClick
    void initData() -> k
    void sendText() -> x
    void sendVoice() -> y
    java.lang.String getDate() -> z
    void responseMsgRemind() -> l
    void receiveLastMsgDate(java.lang.String) -> c
    void sendMsgReadToServer() -> A
    void receiveMsgState() -> B
    void receiveTextMsg(android.content.Intent) -> a
    void receiveVoiceMsg(java.lang.String) -> f
    void receivePictureMsg(java.lang.String) -> g
    void refreshFromServer() -> m
    void sendInfoToServer() -> n
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void sendTextMessageToServer(java.lang.String,java.lang.String) -> a
    void sendRecordData(java.lang.String,java.lang.String,java.lang.String) -> a
    android.graphics.Bitmap compressImage(android.graphics.Bitmap) -> b
    int getExifOrientation(java.lang.String) -> d
    void LoadPicTask(com.minus.table.ChatTable) -> a
    byte[] Bitmap2Bytes(android.graphics.Bitmap) -> a
    android.net.Uri getOutputMediaFileUri(int) -> c
    java.io.File getOutputMediaFile(int) -> d
    void updateNetworkRecords() -> o
    void setListView(com.minus.lovershouse.util.RTPullListView,com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter) -> a
    void processResponse(java.lang.String) -> e
    int access$0() -> p
    int access$1() -> q
    int access$2() -> r
    void access$3(int) -> a
    android.app.Dialog access$4(com.minus.lovershouse.ChatActivity) -> a
    com.minus.lovershouse.util.AudioRecorder access$5(com.minus.lovershouse.ChatActivity) -> b
    void access$6(double) -> a
    double access$7() -> s
    int access$8() -> t
    void access$9(com.minus.lovershouse.ChatActivity) -> c
    void access$10(double) -> b
    int access$11() -> u
    com.minus.lovershouse.util.SelectPicPopup access$12(com.minus.lovershouse.ChatActivity) -> d
    android.net.Uri access$13(int) -> b
    com.minus.lovershouse.util.RTPullListView access$14(com.minus.lovershouse.ChatActivity) -> e
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter access$15(com.minus.lovershouse.ChatActivity) -> f
    com.minus.lovershouse.ChatActivity$MyHandler access$16(com.minus.lovershouse.ChatActivity) -> g
    void access$17(com.minus.lovershouse.ChatActivity) -> h
    void access$18(com.minus.lovershouse.ChatActivity,android.content.Intent) -> a
    void access$19(com.minus.lovershouse.ChatActivity,java.lang.String) -> a
    void access$20(com.minus.lovershouse.ChatActivity,java.lang.String) -> b
    android.widget.EditText access$21(com.minus.lovershouse.ChatActivity) -> i
    java.lang.Boolean access$22(com.minus.lovershouse.ChatActivity) -> j
    void access$23(com.minus.lovershouse.ChatActivity,java.lang.Boolean) -> a
    android.widget.ImageView access$24(com.minus.lovershouse.ChatActivity) -> k
    void access$25(com.minus.lovershouse.ChatActivity,com.minus.lovershouse.util.AudioRecorder) -> a
    double access$26() -> v
    java.lang.String access$27(com.minus.lovershouse.ChatActivity) -> l
    android.graphics.Bitmap access$28(com.minus.lovershouse.ChatActivity,android.graphics.Bitmap) -> a
    java.util.List access$29(com.minus.lovershouse.ChatActivity) -> m
    android.os.Handler access$30(com.minus.lovershouse.ChatActivity) -> n
    java.lang.String access$31(com.minus.lovershouse.ChatActivity) -> o
com.minus.lovershouse.ChatActivity$1 -> com.minus.lovershouse.a:
    android.os.Handler imgHandle -> a
    com.minus.lovershouse.ChatActivity this$0 -> b
    void run() -> run
    com.minus.lovershouse.ChatActivity access$0(com.minus.lovershouse.ChatActivity$1) -> a
com.minus.lovershouse.ChatActivity$1$1 -> com.minus.lovershouse.ChatActivity$1$1:
    com.minus.lovershouse.ChatActivity$1 this$1 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.lovershouse.ChatActivity$10 -> com.minus.lovershouse.b:
    com.minus.lovershouse.ChatActivity this$0 -> a
    void onRefresh() -> a
    com.minus.lovershouse.ChatActivity access$0(com.minus.lovershouse.ChatActivity$10) -> a
com.minus.lovershouse.ChatActivity$10$1 -> com.minus.lovershouse.c:
    com.minus.lovershouse.ChatActivity$10 this$1 -> a
    void run() -> run
com.minus.lovershouse.ChatActivity$11 -> com.minus.lovershouse.d:
    com.minus.lovershouse.ChatActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.minus.lovershouse.ChatActivity$2 -> com.minus.lovershouse.e:
    com.minus.lovershouse.ChatActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.ChatActivity$3 -> com.minus.lovershouse.ChatActivity$3:
    com.minus.lovershouse.ChatActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.lovershouse.ChatActivity$4 -> com.minus.lovershouse.f:
    com.minus.lovershouse.ChatActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
com.minus.lovershouse.ChatActivity$5 -> com.minus.lovershouse.g:
    com.minus.lovershouse.ChatActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.minus.lovershouse.ChatActivity$6 -> com.minus.lovershouse.h:
    com.minus.lovershouse.ChatActivity this$0 -> a
    void run() -> run
    com.minus.lovershouse.ChatActivity access$0(com.minus.lovershouse.ChatActivity$6) -> a
com.minus.lovershouse.ChatActivity$6$1 -> com.minus.lovershouse.i:
    com.minus.lovershouse.ChatActivity$6 this$1 -> a
    void run() -> run
com.minus.lovershouse.ChatActivity$7 -> com.minus.lovershouse.j:
    com.minus.lovershouse.ChatActivity this$0 -> a
    java.lang.String val$voicePath -> b
    java.lang.String val$currentDate -> c
    void run() -> run
com.minus.lovershouse.ChatActivity$9 -> com.minus.lovershouse.k:
    com.minus.lovershouse.ChatActivity this$0 -> a
    com.minus.table.ChatTable val$tempCT -> b
    void run() -> run
com.minus.lovershouse.ChatActivity$MyHandler -> com.minus.lovershouse.ChatActivity$MyHandler:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.lovershouse.ChatActivity$MyReceiver -> com.minus.lovershouse.ChatActivity$a:
    com.minus.lovershouse.ChatActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.minus.lovershouse.ChatListFragment -> com.minus.lovershouse.l:
    java.util.ArrayList urls -> e
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> a
    com.minus.lovershouse.ChatListFragment$OnSetListViewListener mListener -> b
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> c
    com.minus.lovershouse.util.RTPullListView mListView -> f
    java.util.List mDataArrays -> g
    android.media.MediaPlayer mMediaPlayer -> h
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter mAdapter -> i
    java.util.Timer voicePlayT -> d
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData() -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    java.util.List getmDataArrays() -> b
    android.media.MediaPlayer access$0(com.minus.lovershouse.ChatListFragment) -> a
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter -> com.minus.lovershouse.l$a:
    int[] DefHeadimageIds -> b
    android.graphics.drawable.LayerDrawable tarHeadLayerDrawable -> c
    android.graphics.drawable.LayerDrawable myHeadLayerDrawable -> d
    android.os.Handler updateListItemHandler -> e
    boolean isPause -> f
    boolean isChange -> g
    int currVoicePgPos -> h
    int currVoicePlayPos -> i
    int lastVoicePlayPos -> j
    com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio lastVoiceLVH -> k
    com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio currVoiceLVH -> l
    com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio lastVoiceRVH -> m
    com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio currVoiceRVH -> n
    java.util.List coll -> o
    android.widget.ListView mListView -> p
    android.content.Context ctx -> q
    android.view.LayoutInflater mInflater -> r
    com.minus.lovershouse.ChatListFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void imageBrower(int) -> b
    void init(android.content.Context) -> a
    void startSetVoicePg() -> a
    void updateLastVoice() -> b
    void updateCurrVoicePg() -> c
    void initPlayMusic(java.lang.String) -> a
    void stopMusic() -> d
    void updateView(int) -> a
    void setListView(android.widget.ListView) -> a
    void access$0(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter,int) -> a
    void access$1(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter) -> a
    int access$2(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter) -> b
    void access$3(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter,boolean) -> a
    boolean access$4(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter) -> c
    void access$5(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter,boolean) -> b
    void access$6(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter,int) -> b
    com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio access$7(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter) -> d
    void access$8(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter,com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio) -> a
    void access$9(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter,com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio) -> a
    void access$10(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter,com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio) -> b
    void access$11(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter,com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio) -> b
    com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio access$12(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter) -> e
    java.util.List access$13(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter) -> f
    void access$14(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter,java.lang.String) -> a
    void access$15(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter,int) -> c
    void access$16(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter,int) -> d
    android.content.Context access$17(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter) -> g
    boolean access$18(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter) -> h
    android.os.Handler access$19(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter) -> i
    void access$20(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter) -> j
    void access$21(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter) -> k
    com.minus.lovershouse.ChatListFragment access$22(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter) -> l
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$1 -> com.minus.lovershouse.m:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$10 -> com.minus.lovershouse.n:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter access$0(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$10) -> a
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$10$1 -> com.minus.lovershouse.o:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$10 this$2 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$11 -> com.minus.lovershouse.p:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$12 -> com.minus.lovershouse.q:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter this$1 -> a
    android.widget.ImageView val$rightTemp -> b
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$13 -> com.minus.lovershouse.r:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter access$0(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$13) -> a
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$13$1 -> com.minus.lovershouse.s:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$13 this$2 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$2 -> com.minus.lovershouse.t:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter this$1 -> a
    android.widget.ImageView val$temp -> b
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$3 -> com.minus.lovershouse.u:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter access$0(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$3) -> a
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$3$1 -> com.minus.lovershouse.v:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$3 this$2 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$4 -> com.minus.lovershouse.w:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$5 -> com.minus.lovershouse.x:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter this$1 -> a
    android.widget.ImageView val$rightTemp -> b
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$6 -> com.minus.lovershouse.y:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter access$0(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$6) -> a
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$6$1 -> com.minus.lovershouse.z:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$6 this$2 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$7 -> com.minus.lovershouse.aa:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter this$1 -> a
    void run() -> run
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter access$0(com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$7) -> a
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$7$1 -> com.minus.lovershouse.ab:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$7 this$2 -> a
    void run() -> run
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$7$2 -> com.minus.lovershouse.ac:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$7 this$2 -> a
    void run() -> run
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$8 -> com.minus.lovershouse.ad:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter$9 -> com.minus.lovershouse.ae:
    com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter this$1 -> a
    android.widget.ImageView val$temp -> b
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
com.minus.lovershouse.ChatListFragment$OnSetListViewListener -> com.minus.lovershouse.l$b:
    void setListView(com.minus.lovershouse.util.RTPullListView,com.minus.lovershouse.ChatListFragment$ChatMsgViewAdapter) -> a
com.minus.lovershouse.ChatListFragment$ViewHolderLeftAction -> com.minus.lovershouse.l$c:
    android.widget.ImageView headIcon -> b
    android.widget.ImageView roundImg -> c
    android.widget.TextView sendTimeTv -> d
    android.widget.TextView contentTv -> e
    android.widget.ProgressBar mPb -> f
    android.widget.ImageView sendFailedImg -> g
    com.minus.lovershouse.ChatListFragment this$0 -> a
    void access$0(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAction,android.widget.ImageView) -> a
    void access$1(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAction,android.widget.ImageView) -> b
    void access$2(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAction,android.widget.TextView) -> a
    void access$3(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAction,android.widget.ProgressBar) -> a
    void access$4(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAction,android.widget.ImageView) -> c
    void access$5(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAction,android.widget.TextView) -> b
    android.widget.ImageView access$6(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAction) -> a
    android.widget.ImageView access$7(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAction) -> b
    android.widget.TextView access$8(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAction) -> c
    android.widget.TextView access$9(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAction) -> d
com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio -> com.minus.lovershouse.l$d:
    android.widget.ImageView headIcon -> b
    android.widget.TextView sendTimeTv -> c
    android.widget.LinearLayout audioPlayLL -> d
    android.widget.ImageView playStatus -> e
    android.widget.ProgressBar mLoadingPb -> f
    android.widget.ProgressBar playPgPb -> g
    android.widget.TextView audioLen -> h
    com.minus.lovershouse.ChatListFragment this$0 -> a
    void access$0(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio,android.widget.ImageView) -> a
    void access$1(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio,android.widget.LinearLayout) -> a
    void access$2(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio,android.widget.ImageView) -> b
    void access$3(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio,android.widget.ProgressBar) -> a
    void access$4(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio,android.widget.ProgressBar) -> b
    void access$5(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio,android.widget.TextView) -> a
    void access$6(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio,android.widget.TextView) -> b
    android.widget.ImageView access$7(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio) -> a
    android.widget.TextView access$8(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio) -> b
    android.widget.TextView access$9(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio) -> c
    android.widget.LinearLayout access$10(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio) -> d
    android.widget.ImageView access$11(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio) -> e
    android.widget.ProgressBar access$12(com.minus.lovershouse.ChatListFragment$ViewHolderLeftAudio) -> f
com.minus.lovershouse.ChatListFragment$ViewHolderLeftPic -> com.minus.lovershouse.l$e:
    android.widget.ImageView headIcon -> b
    android.widget.TextView sendTimeTv -> c
    android.widget.ImageView contentTv -> d
    android.widget.ProgressBar mPb -> e
    android.widget.ImageView sendFailedImg -> f
    com.minus.lovershouse.ChatListFragment this$0 -> a
    void access$0(com.minus.lovershouse.ChatListFragment$ViewHolderLeftPic,android.widget.ImageView) -> a
    void access$1(com.minus.lovershouse.ChatListFragment$ViewHolderLeftPic,android.widget.ImageView) -> b
    void access$2(com.minus.lovershouse.ChatListFragment$ViewHolderLeftPic,android.widget.ProgressBar) -> a
    void access$3(com.minus.lovershouse.ChatListFragment$ViewHolderLeftPic,android.widget.ImageView) -> c
    void access$4(com.minus.lovershouse.ChatListFragment$ViewHolderLeftPic,android.widget.TextView) -> a
    android.widget.ImageView access$5(com.minus.lovershouse.ChatListFragment$ViewHolderLeftPic) -> a
    android.widget.ImageView access$6(com.minus.lovershouse.ChatListFragment$ViewHolderLeftPic) -> b
    android.widget.TextView access$7(com.minus.lovershouse.ChatListFragment$ViewHolderLeftPic) -> c
com.minus.lovershouse.ChatListFragment$ViewHolderLeftText -> com.minus.lovershouse.l$f:
    android.widget.ImageView headIcon -> b
    android.widget.TextView sendTimeTv -> c
    android.widget.TextView contentTv -> d
    android.widget.ProgressBar mPb -> e
    android.widget.ImageView sendFailedImg -> f
    com.minus.lovershouse.ChatListFragment this$0 -> a
    void access$0(com.minus.lovershouse.ChatListFragment$ViewHolderLeftText,android.widget.ImageView) -> a
    void access$1(com.minus.lovershouse.ChatListFragment$ViewHolderLeftText,android.widget.TextView) -> a
    void access$2(com.minus.lovershouse.ChatListFragment$ViewHolderLeftText,android.widget.ProgressBar) -> a
    void access$3(com.minus.lovershouse.ChatListFragment$ViewHolderLeftText,android.widget.ImageView) -> b
    void access$4(com.minus.lovershouse.ChatListFragment$ViewHolderLeftText,android.widget.TextView) -> b
    android.widget.TextView access$5(com.minus.lovershouse.ChatListFragment$ViewHolderLeftText) -> a
    android.widget.ImageView access$6(com.minus.lovershouse.ChatListFragment$ViewHolderLeftText) -> b
    android.widget.TextView access$7(com.minus.lovershouse.ChatListFragment$ViewHolderLeftText) -> c
com.minus.lovershouse.ChatListFragment$ViewHolderRightAction -> com.minus.lovershouse.l$g:
    android.widget.ImageView headIcon -> b
    android.widget.ImageView roundImg -> c
    android.widget.TextView sendTimeTv -> d
    android.widget.TextView contentTv -> e
    android.widget.ProgressBar mPb -> f
    android.widget.ImageView sendFailedImg -> g
    com.minus.lovershouse.ChatListFragment this$0 -> a
    void access$0(com.minus.lovershouse.ChatListFragment$ViewHolderRightAction,android.widget.ImageView) -> a
    void access$1(com.minus.lovershouse.ChatListFragment$ViewHolderRightAction,android.widget.ImageView) -> b
    void access$2(com.minus.lovershouse.ChatListFragment$ViewHolderRightAction,android.widget.TextView) -> a
    void access$3(com.minus.lovershouse.ChatListFragment$ViewHolderRightAction,android.widget.ProgressBar) -> a
    void access$4(com.minus.lovershouse.ChatListFragment$ViewHolderRightAction,android.widget.ImageView) -> c
    void access$5(com.minus.lovershouse.ChatListFragment$ViewHolderRightAction,android.widget.TextView) -> b
    android.widget.ImageView access$6(com.minus.lovershouse.ChatListFragment$ViewHolderRightAction) -> a
    android.widget.ImageView access$7(com.minus.lovershouse.ChatListFragment$ViewHolderRightAction) -> b
    android.widget.TextView access$8(com.minus.lovershouse.ChatListFragment$ViewHolderRightAction) -> c
    android.widget.TextView access$9(com.minus.lovershouse.ChatListFragment$ViewHolderRightAction) -> d
com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio -> com.minus.lovershouse.l$h:
    android.widget.ImageView headIcon -> b
    android.widget.TextView sendTimeTv -> c
    android.widget.LinearLayout audioPlayLL -> d
    android.widget.ImageView playStatus -> e
    android.widget.ProgressBar mLoadingPb -> f
    android.widget.ProgressBar playPgPb -> g
    android.widget.TextView audioLen -> h
    com.minus.lovershouse.ChatListFragment this$0 -> a
    void access$0(com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio,android.widget.ImageView) -> a
    void access$1(com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio,android.widget.LinearLayout) -> a
    void access$2(com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio,android.widget.ImageView) -> b
    void access$3(com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio,android.widget.ProgressBar) -> a
    void access$4(com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio,android.widget.ProgressBar) -> b
    void access$5(com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio,android.widget.TextView) -> a
    void access$6(com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio,android.widget.TextView) -> b
    android.widget.ProgressBar access$7(com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio) -> a
    android.widget.ImageView access$8(com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio) -> b
    android.widget.ImageView access$9(com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio) -> c
    android.widget.ProgressBar access$10(com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio) -> d
    android.widget.TextView access$11(com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio) -> e
    android.widget.TextView access$12(com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio) -> f
    android.widget.LinearLayout access$13(com.minus.lovershouse.ChatListFragment$ViewHolderRightAudio) -> g
com.minus.lovershouse.ChatListFragment$ViewHolderRightPic -> com.minus.lovershouse.l$i:
    android.widget.ImageView headIcon -> b
    android.widget.TextView sendTimeTv -> c
    android.widget.ImageView contentTv -> d
    android.widget.ProgressBar mPb -> e
    android.widget.ImageView sendFailedImg -> f
    com.minus.lovershouse.ChatListFragment this$0 -> a
    void access$0(com.minus.lovershouse.ChatListFragment$ViewHolderRightPic,android.widget.ImageView) -> a
    void access$1(com.minus.lovershouse.ChatListFragment$ViewHolderRightPic,android.widget.ImageView) -> b
    void access$2(com.minus.lovershouse.ChatListFragment$ViewHolderRightPic,android.widget.ProgressBar) -> a
    void access$3(com.minus.lovershouse.ChatListFragment$ViewHolderRightPic,android.widget.ImageView) -> c
    void access$4(com.minus.lovershouse.ChatListFragment$ViewHolderRightPic,android.widget.TextView) -> a
    android.widget.ImageView access$5(com.minus.lovershouse.ChatListFragment$ViewHolderRightPic) -> a
    android.widget.ImageView access$6(com.minus.lovershouse.ChatListFragment$ViewHolderRightPic) -> b
    android.widget.ProgressBar access$7(com.minus.lovershouse.ChatListFragment$ViewHolderRightPic) -> c
    android.widget.ImageView access$8(com.minus.lovershouse.ChatListFragment$ViewHolderRightPic) -> d
    android.widget.TextView access$9(com.minus.lovershouse.ChatListFragment$ViewHolderRightPic) -> e
com.minus.lovershouse.ChatListFragment$ViewHolderRightText -> com.minus.lovershouse.l$j:
    android.widget.ImageView headIcon -> b
    android.widget.TextView sendTimeTv -> c
    android.widget.TextView contentTv -> d
    android.widget.ProgressBar mPb -> e
    android.widget.ImageView sendFailedImg -> f
    com.minus.lovershouse.ChatListFragment this$0 -> a
    void access$0(com.minus.lovershouse.ChatListFragment$ViewHolderRightText,android.widget.ImageView) -> a
    void access$1(com.minus.lovershouse.ChatListFragment$ViewHolderRightText,android.widget.TextView) -> a
    void access$2(com.minus.lovershouse.ChatListFragment$ViewHolderRightText,android.widget.ProgressBar) -> a
    void access$3(com.minus.lovershouse.ChatListFragment$ViewHolderRightText,android.widget.ImageView) -> b
    void access$4(com.minus.lovershouse.ChatListFragment$ViewHolderRightText,android.widget.TextView) -> b
    android.widget.TextView access$5(com.minus.lovershouse.ChatListFragment$ViewHolderRightText) -> a
    android.widget.ImageView access$6(com.minus.lovershouse.ChatListFragment$ViewHolderRightText) -> b
    android.widget.ProgressBar access$7(com.minus.lovershouse.ChatListFragment$ViewHolderRightText) -> c
    android.widget.ImageView access$8(com.minus.lovershouse.ChatListFragment$ViewHolderRightText) -> d
    android.widget.TextView access$9(com.minus.lovershouse.ChatListFragment$ViewHolderRightText) -> e
com.minus.lovershouse.CoupleActionActivity -> com.minus.lovershouse.CoupleActionActivity:
    int coupelActionType -> a
    boolean isBoy -> b
    boolean isSelfDo -> c
    android.widget.ImageView m -> d
    android.widget.ImageView hugGirlHair -> e
    java.lang.ref.WeakReference contentView -> f
    android.os.Handler mHandler -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void handleCoupleAction(boolean,boolean,int) -> a
    void stopCoupleAction(boolean,boolean,int) -> b
    void onDestroy() -> onDestroy
    boolean access$0(com.minus.lovershouse.CoupleActionActivity) -> a
    boolean access$1(com.minus.lovershouse.CoupleActionActivity) -> b
    int access$2(com.minus.lovershouse.CoupleActionActivity) -> c
    void access$3(com.minus.lovershouse.CoupleActionActivity,boolean,boolean,int) -> a
    java.lang.ref.WeakReference access$4(com.minus.lovershouse.CoupleActionActivity) -> d
    android.widget.ImageView access$5(com.minus.lovershouse.CoupleActionActivity) -> e
    android.widget.ImageView access$6(com.minus.lovershouse.CoupleActionActivity) -> f
    void access$7(com.minus.lovershouse.CoupleActionActivity,boolean,boolean,int) -> b
com.minus.lovershouse.CoupleActionActivity$1 -> com.minus.lovershouse.af:
    com.minus.lovershouse.CoupleActionActivity this$0 -> a
    android.widget.ImageView val$handView -> b
    void run() -> run
com.minus.lovershouse.CoupleActionActivity$2 -> com.minus.lovershouse.ag:
    com.minus.lovershouse.CoupleActionActivity this$0 -> a
    android.widget.ImageView val$pinhandView -> b
    android.widget.ImageView val$pinEyeView -> c
    void run() -> run
com.minus.lovershouse.CoupleActionActivity$3 -> com.minus.lovershouse.ah:
    com.minus.lovershouse.CoupleActionActivity this$0 -> a
    android.widget.ImageView val$boypinhandView -> b
    android.widget.ImageView val$boypinEyeView -> c
    void run() -> run
com.minus.lovershouse.CoupleActionActivity$4 -> com.minus.lovershouse.ai:
    com.minus.lovershouse.CoupleActionActivity this$0 -> a
    android.widget.ImageView val$pinhandView -> b
    android.widget.ImageView val$pinEyeView -> c
    void run() -> run
com.minus.lovershouse.CoupleActionActivity$5 -> com.minus.lovershouse.aj:
    com.minus.lovershouse.CoupleActionActivity this$0 -> a
    android.widget.ImageView val$pinhandView -> b
    android.widget.ImageView val$pinEyeView -> c
    void run() -> run
com.minus.lovershouse.CoupleActionActivity$6 -> com.minus.lovershouse.ak:
    com.minus.lovershouse.CoupleActionActivity this$0 -> a
    android.widget.ImageView val$butterflyImg -> b
    void run() -> run
com.minus.lovershouse.CoupleActionActivity$7 -> com.minus.lovershouse.al:
    com.minus.lovershouse.CoupleActionActivity this$0 -> a
    android.widget.ImageView val$girlHugEyeImg -> b
    android.widget.ImageView val$boyHugEyeImg -> c
    void run() -> run
com.minus.lovershouse.CoupleActionActivity$GetImageTask -> com.minus.lovershouse.CoupleActionActivity$a:
    com.minus.lovershouse.CoupleActionActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(java.lang.Integer[]) -> a
    void onProgressUpdate(java.lang.String[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.minus.lovershouse.CoupleActionActivity$MyHandler -> com.minus.lovershouse.CoupleActionActivity$MyHandler:
    com.minus.lovershouse.CoupleActionActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.lovershouse.LoginActivity -> com.minus.lovershouse.LoginActivity:
    com.minius.ui.CustomDialog$Builder ibuilder -> a
    android.view.View$OnClickListener forgetPassdia -> b
    com.minius.ui.ProgressHUD mProgressHUD -> c
    android.widget.ImageView login_back -> d
    android.widget.EditText accountEt -> e
    android.widget.EditText passEt -> f
    android.widget.TextView stateTv -> g
    android.widget.Button loginBtn -> h
    android.widget.Button forgetPwdBtn -> i
    com.minus.lovershouse.LoginActivity$MyReceiver receiver -> j
    com.minus.lovershouse.LoginActivity$MyHandler mHandler -> k
    android.widget.ScrollView mScrollView -> n
    android.os.Handler uiHandler -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void initView() -> b
    void onNewIntent(android.content.Intent) -> onNewIntent
    void loginFail() -> a
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void onClick(android.view.View) -> onClick
    boolean validate() -> c
    boolean checkEmail(java.lang.String) -> a
    boolean checkEmailFormat(java.lang.String) -> b
    boolean checkPassword(java.lang.String) -> c
    boolean hasWhiteSpace(java.lang.String) -> d
    void processResponse(java.lang.String) -> e
    android.widget.EditText access$0(com.minus.lovershouse.LoginActivity) -> a
    com.minius.ui.CustomDialog$Builder access$1(com.minus.lovershouse.LoginActivity) -> b
    com.minus.lovershouse.LoginActivity$MyHandler access$2(com.minus.lovershouse.LoginActivity) -> c
    android.widget.TextView access$5(com.minus.lovershouse.LoginActivity) -> d
    android.widget.EditText access$6(com.minus.lovershouse.LoginActivity) -> e
com.minus.lovershouse.LoginActivity$1 -> com.minus.lovershouse.am:
    com.minus.lovershouse.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.LoginActivity$2 -> com.minus.lovershouse.an:
    com.minus.lovershouse.LoginActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.minus.lovershouse.LoginActivity$3 -> com.minus.lovershouse.ao:
    com.minus.lovershouse.LoginActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.minus.lovershouse.LoginActivity$MyHandler -> com.minus.lovershouse.LoginActivity$MyHandler:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.lovershouse.LoginActivity$MyReceiver -> com.minus.lovershouse.LoginActivity$a:
    com.minus.lovershouse.LoginActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.minus.lovershouse.MainActivity -> com.minus.lovershouse.MainActivity:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> a
    android.view.View curBoyView -> n
    android.view.View curGirlView -> o
    int menuButtonHAW -> p
    com.minus.lovershouse.util.BadgeView albumnewbadge -> q
    com.minus.lovershouse.util.BadgeView diarynewbadge -> r
    com.minus.lovershouse.util.BadgeView chatnewbadge -> s
    com.minus.lovershouse.util.BadgeView CalendarNewbadge -> t
    com.minus.weather.WeatherUtils weatherUtils -> u
    com.amap.api.location.LocationManagerProxy mAMapLocManager -> v
    android.widget.FrameLayout mainFL -> w
    android.widget.RelativeLayout mainTopRL -> x
    android.widget.RelativeLayout mainBottomRL -> y
    android.widget.ImageView mainToChatBtn -> z
    android.widget.ImageView mainToWeatherBtn -> A
    android.widget.ImageView mainToConfigBtn -> B
    android.widget.Button mainToDiaryBtn -> C
    android.widget.RelativeLayout mainToAnnLayout -> D
    android.widget.Button maintoMapBtn -> E
    android.widget.ImageView mainToPicBtn -> F
    android.widget.ImageButton lampBtn -> G
    com.minus.lovershouse.util.BadgeView giudeToMatchbadge -> H
    android.widget.ImageButton guidetomatchBtn -> I
    com.minus.lovershouse.util.BadgeView boyEndbadge -> J
    com.minus.lovershouse.util.BadgeView girlEndbadge -> K
    com.minus.lovershouse.util.BadgeView boycustomEndbadge -> L
    com.minus.lovershouse.util.BadgeView girlcustomEndbadge -> M
    com.minus.lovershouse.MainActivity$MyReceiver receiver -> N
    com.minus.lovershouse.MainActivity$MyHandler mHandler -> O
    com.minus.lovershouse.MainActivity$ActionHandler actionHandler -> P
    com.minius.ui.CustomDialog$Builder actionDialog -> Q
    android.widget.FrameLayout girlcustombubbleRL -> R
    android.widget.Button girlcustombubble -> S
    android.widget.Button girlcustombubbleBtn -> T
    android.widget.FrameLayout boycustombubbleRL -> U
    android.widget.Button boycustombubble -> V
    android.widget.Button boycustombubbleBtn -> W
    com.minus.actionsystem.MenuItemView myPortraitMenu -> X
    com.minus.actionsystem.MenuItemView girlMenu -> Y
    int bactionBtnisSet -> Z
    int gactionBtnisSet -> aa
    java.util.List myCustomList -> ab
    int myFigureMenupage -> ac
    android.os.Handler startTwinkleHandler -> b
    android.os.Handler startHandShakeHandler -> c
    android.widget.ImageView staticBoyHand -> ad
    android.widget.ImageView staticBoyEye -> ae
    android.widget.ImageView staticGirlHand -> af
    android.widget.ImageView staticGirlEye -> ag
    android.widget.ImageButton boyChatbubbleflag -> ah
    android.widget.ImageButton girlChatbubbleflag -> ai
    android.widget.RelativeLayout boyView -> aj
    android.widget.ImageView mainboyHBody -> ak
    android.widget.RelativeLayout girlView -> al
    android.widget.ImageView maingirlBody -> am
    android.widget.RelativeLayout boySitView -> an
    android.view.View readBoyView -> ao
    android.widget.ImageView readBoyBody -> ap
    android.view.View eatBoyView -> aq
    android.widget.ImageView eatBoyBody -> ar
    android.widget.RelativeLayout girlSitView -> as
    android.view.View readGirlView -> at
    android.widget.ImageView readGirlBody -> au
    android.view.View eatGirlView -> av
    android.widget.ImageView eatGirlBody -> aw
    android.widget.RelativeLayout boyStandView -> ax
    java.lang.ref.SoftReference angryBoyView -> ay
    android.widget.ImageView angryBoyBody -> az
    java.lang.ref.SoftReference missBoyView -> aA
    android.widget.ImageView missBoyBody -> aB
    android.widget.RelativeLayout girlStandView -> aC
    android.view.View angryGirlView -> aD
    android.widget.ImageView angryGirlBody -> aE
    android.view.View missGirlView -> aF
    android.widget.RelativeLayout sleepRL -> aG
    android.widget.ImageView missGirlBody -> aH
    android.widget.ImageView boysleepBubbleView -> aI
    android.widget.ImageView girlsleepBubbleView -> aJ
    java.lang.String showPortraitSex -> aK
    android.app.Dialog endActionDialog -> aL
    double myLat -> aM
    double myLng -> aN
    boolean initFinish -> aO
    boolean isMatch -> aP
    java.lang.String houseStyle -> aQ
    int nowAction -> d
    java.lang.String nowCustomActionContent -> e
    int matchSingleAction -> f
    boolean isMainVisiual -> aR
    java.lang.String actionMsg -> aS
    boolean isRecvAction -> aT
    java.lang.String toDoCoupleActionMsg -> aU
    com.minius.ui.ProgressHUD mProgressHUD -> aV
    com.minius.ui.ProgressHUD waitingHUD -> aW
    com.minius.ui.ProgressHUD initMainwaitingHUD -> aX
    com.minius.ui.CustomDialog$Builder ibuilder -> aY
    com.minius.ui.CustomDialog$Builder actionBuilder -> aZ
    java.lang.String invitor -> ba
    java.lang.Runnable startBoyTwinkleRunnable -> g
    java.lang.Runnable startBoyHandShakeRunnable -> h
    java.lang.Runnable startGirlTwinkleRunnable -> i
    java.lang.Runnable startGirlHandShakeRunnable -> j
    android.view.View$OnClickListener matchAsk -> bb
    java.lang.Runnable brightScreen -> k
    boolean isCalendarAlreadyPromptTogetherDay -> bc
    boolean isCalendarAlreadyPromptWifeBirthday -> bd
    boolean isCalendarAlreadyPromptHusbandBirthday -> be
    android.view.View$OnClickListener exitOnClick -> bf
    com.minus.lovershouse.util.ExitPopup mExitPopup -> bg
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void loginSuccess() -> a
    byte[] Bitmap2Bytes(android.graphics.Bitmap) -> a
    void sendHeadPhoto() -> b
    void ReceiveSelfInfo() -> v
    void ReceiveMatchInfo() -> w
    void ReceiveCommonInfo() -> c
    void loginFail() -> d
    void resumeUI() -> x
    void handleToActionMsg() -> e
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void initView() -> y
    void stopBoyTwinkleAndShake() -> f
    void stopGirlTwinkleAndShake() -> g
    void startBoyTwinkle() -> z
    void startBoyHandShake() -> A
    void startOneBoyTwinkle() -> B
    void startOneBoyShake() -> C
    void startGirlTwinkle() -> D
    void startGirlHandShake() -> E
    void startOneGirlTwinkle() -> F
    void startOneGirlShake() -> G
    void showBoyCustomEndButton(android.view.View) -> a
    void showGirlCustomEndButton(android.view.View) -> b
    boolean hideGirlCustomEndButton() -> H
    boolean hideBoyCustomEndButton() -> I
    void showBoyEndButton(android.view.View,int) -> a
    void showGirlEndButton(android.view.View,int) -> b
    boolean hideGirlEndButton() -> J
    boolean hideBoyEndButton() -> K
    void initActionSystem() -> L
    void SetActionSystemButton() -> M
    void SetSelfMainActionMenu(boolean) -> c
    void RefreshCustomMenu(java.lang.String) -> k
    void initHouse() -> N
    void initChatButton() -> h
    void initDiaryButton() -> i
    void initAlbumButton() -> j
    void initLampButton() -> k
    void initFiguresFromLocal() -> l
    void initUI() -> m
    void createSelfFigure(boolean) -> a
    void initFigure(java.lang.String,boolean,java.lang.String,boolean) -> a
    void createMatchFigure(boolean) -> b
    void finishinit() -> O
    void initMain() -> P
    void initMainweather() -> Q
    void onClick(android.view.View) -> onClick
    void hideAllMenu() -> R
    boolean onLongClick(android.view.View) -> onLongClick
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onclick(int) -> b
    void onActionBtnLongclick(int) -> a
    void processMatchRequest(java.lang.String) -> l
    void initAnnLayout() -> S
    void setTogetherDaysOnAnnLayout() -> T
    void acceptMatch() -> U
    void refuseMatch() -> V
    void modifyLight() -> n
    void setChatView() -> o
    void setAlbumView() -> p
    void setDiaryView() -> q
    void processResponse(java.lang.String) -> a
    void ReceiveActionInfo(java.lang.String) -> b
    void processAllSelfCustomAction() -> r
    void processEditCustomAction(java.lang.String) -> c
    void handleActionMsg() -> s
    void blackScreen() -> W
    void askForMatch() -> X
    void showGiudeToMatch() -> Y
    void startReadTarWeather(java.lang.String) -> d
    void processLocation(java.lang.String) -> e
    void showProgressHUD(java.lang.String) -> f
    void showInitMainProgressHUD(java.lang.String) -> g
    void calendarNew() -> Z
    void calendarPrompt() -> aa
    void calendarPromptTogetherDay() -> ab
    void calendarPromptWifeBirthday() -> ac
    void calendarPromptHusbandBirthday() -> ad
    void showLeadView() -> ae
    java.lang.String GetCurrentTime() -> af
    void stopLocation() -> ag
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
    void handleGetTarWeatherSucc() -> t
    void InitSingleActionStart(int,boolean,boolean) -> a
    void ActionStart(int,boolean,boolean,java.lang.String) -> a
    void CustomActionStart(boolean,int,java.lang.String,java.lang.String) -> a
    void CustomActionEnd(boolean,int,boolean) -> a
    void InitSingleActionEnd(int,boolean) -> a
    void ActionEnd(int,boolean,boolean) -> b
    void addChatMsg(boolean,java.lang.String,java.lang.String) -> a
    void showAddActionDialog() -> ah
    boolean isContainSpace(java.lang.String) -> h
    void showModifyActionDialog(java.lang.String,java.lang.String) -> a
    void addBoyChatBubbleView(java.lang.String) -> i
    void addGirlChatBubbleView(java.lang.String) -> j
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void access$0(com.minus.lovershouse.MainActivity) -> a
    com.minus.lovershouse.MainActivity$ActionHandler access$1(com.minus.lovershouse.MainActivity) -> b
    void access$2(com.minus.lovershouse.MainActivity) -> c
    void access$3(com.minus.lovershouse.MainActivity) -> d
    void access$4(com.minus.lovershouse.MainActivity) -> e
    java.lang.String access$5(com.minus.lovershouse.MainActivity) -> f
    com.minius.ui.CustomDialog$Builder access$6(com.minus.lovershouse.MainActivity) -> g
    android.widget.RelativeLayout access$7(com.minus.lovershouse.MainActivity) -> h
    android.view.View access$8(com.minus.lovershouse.MainActivity) -> i
    android.view.View access$9(com.minus.lovershouse.MainActivity) -> j
    com.minus.lovershouse.util.ExitPopup access$10(com.minus.lovershouse.MainActivity) -> k
    com.minus.lovershouse.MainActivity$MyReceiver access$11(com.minus.lovershouse.MainActivity) -> l
    void access$12(com.minus.lovershouse.MainActivity,com.minus.lovershouse.MainActivity$MyReceiver) -> a
    com.minus.lovershouse.MainActivity$MyHandler access$13(com.minus.lovershouse.MainActivity) -> m
    void access$14(com.minus.lovershouse.MainActivity) -> n
    void access$15(com.minus.lovershouse.MainActivity) -> o
    boolean access$16(com.minus.lovershouse.MainActivity) -> p
    com.minius.ui.ProgressHUD access$17(com.minus.lovershouse.MainActivity) -> q
    void access$18(com.minus.lovershouse.MainActivity,com.minius.ui.ProgressHUD) -> a
    void access$19(com.minus.lovershouse.MainActivity) -> r
    com.minius.ui.ProgressHUD access$20(com.minus.lovershouse.MainActivity) -> s
    void access$21(com.minus.lovershouse.MainActivity,com.minius.ui.ProgressHUD) -> b
    android.app.Dialog access$22(com.minus.lovershouse.MainActivity) -> t
    android.widget.ImageView access$23(com.minus.lovershouse.MainActivity) -> u
    android.widget.ImageView access$24(com.minus.lovershouse.MainActivity) -> v
    void access$25(com.minus.lovershouse.MainActivity,android.widget.ImageView) -> a
    android.widget.ImageView access$26(com.minus.lovershouse.MainActivity) -> w
    android.widget.ImageView access$27(com.minus.lovershouse.MainActivity) -> x
    void access$28(com.minus.lovershouse.MainActivity,android.widget.ImageView) -> b
    com.minius.ui.ProgressHUD access$29(com.minus.lovershouse.MainActivity) -> y
    void access$30(com.minus.lovershouse.MainActivity) -> z
    com.minius.ui.CustomDialog$Builder access$31(com.minus.lovershouse.MainActivity) -> A
    void access$32(com.minus.lovershouse.MainActivity) -> B
    void access$33(com.minus.lovershouse.MainActivity) -> C
    com.minus.weather.WeatherUtils access$34(com.minus.lovershouse.MainActivity) -> D
    com.minius.ui.CustomDialog$Builder access$35(com.minus.lovershouse.MainActivity) -> E
com.minus.lovershouse.MainActivity$1 -> com.minus.lovershouse.ap:
    com.minus.lovershouse.MainActivity this$0 -> a
    void run() -> run
com.minus.lovershouse.MainActivity$10 -> com.minus.lovershouse.aq:
    com.minus.lovershouse.MainActivity this$0 -> a
    java.lang.String val$chatmsg2 -> b
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$11 -> com.minus.lovershouse.ar:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$12 -> com.minus.lovershouse.as:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$13 -> com.minus.lovershouse.at:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$14 -> com.minus.lovershouse.au:
    com.minus.lovershouse.MainActivity this$0 -> a
    void run() -> run
com.minus.lovershouse.MainActivity$15 -> com.minus.lovershouse.av:
    com.minus.lovershouse.MainActivity this$0 -> a
    java.lang.String val$chatmsg1 -> b
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$16 -> com.minus.lovershouse.aw:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$17 -> com.minus.lovershouse.ax:
    com.minus.lovershouse.MainActivity this$0 -> a
    java.lang.String val$chatmsg2 -> b
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$18 -> com.minus.lovershouse.ay:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$19 -> com.minus.lovershouse.az:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$2 -> com.minus.lovershouse.ba:
    com.minus.lovershouse.MainActivity this$0 -> a
    void run() -> run
com.minus.lovershouse.MainActivity$20 -> com.minus.lovershouse.bb:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$21 -> com.minus.lovershouse.bc:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$22 -> com.minus.lovershouse.bd:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$23 -> com.minus.lovershouse.be:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$24 -> com.minus.lovershouse.bf:
    com.minus.lovershouse.MainActivity this$0 -> a
    java.lang.String val$targetLocation -> b
    void run() -> run
com.minus.lovershouse.MainActivity$25 -> com.minus.lovershouse.bg:
    com.minus.lovershouse.MainActivity this$0 -> a
    android.widget.ImageView val$missBoyHeart -> b
    android.widget.ImageView val$missBoyEye -> c
    void run() -> run
com.minus.lovershouse.MainActivity$26 -> com.minus.lovershouse.bh:
    com.minus.lovershouse.MainActivity this$0 -> a
    android.widget.ImageView val$missGirlHeart -> b
    android.widget.ImageView val$missGirlEye -> c
    void run() -> run
com.minus.lovershouse.MainActivity$27 -> com.minus.lovershouse.bi:
    com.minus.lovershouse.MainActivity this$0 -> a
    android.widget.ImageView val$missBoyHeart -> b
    android.widget.ImageView val$missBoyEye -> c
    void run() -> run
com.minus.lovershouse.MainActivity$28 -> com.minus.lovershouse.bj:
    com.minus.lovershouse.MainActivity this$0 -> a
    android.widget.ImageView val$missGirlHeart -> b
    android.widget.ImageView val$missGirlEye -> c
    void run() -> run
com.minus.lovershouse.MainActivity$29 -> com.minus.lovershouse.bk:
    com.minus.lovershouse.MainActivity this$0 -> a
    android.widget.ImageView val$missGirlHeart -> b
    android.widget.ImageView val$missGirlEye -> c
    void run() -> run
com.minus.lovershouse.MainActivity$3 -> com.minus.lovershouse.bl:
    com.minus.lovershouse.MainActivity this$0 -> a
    void run() -> run
com.minus.lovershouse.MainActivity$30 -> com.minus.lovershouse.bm:
    com.minus.lovershouse.MainActivity this$0 -> a
    android.widget.ImageView val$missBoyHeart -> b
    android.widget.ImageView val$missBoyEye -> c
    void run() -> run
com.minus.lovershouse.MainActivity$31 -> com.minus.lovershouse.bn:
    com.minus.lovershouse.MainActivity this$0 -> a
    android.widget.EditText val$conET -> b
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$32 -> com.minus.lovershouse.bo:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$33 -> com.minus.lovershouse.bp:
    com.minus.lovershouse.MainActivity this$0 -> a
    android.widget.EditText val$conET -> b
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.minus.lovershouse.MainActivity$34 -> com.minus.lovershouse.bq:
    com.minus.lovershouse.MainActivity this$0 -> a
    android.widget.EditText val$conET -> b
    java.lang.String val$typeId -> c
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$35 -> com.minus.lovershouse.br:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$36 -> com.minus.lovershouse.bs:
    com.minus.lovershouse.MainActivity this$0 -> a
    java.lang.String val$typeId -> b
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$37 -> com.minus.lovershouse.bt:
    com.minus.lovershouse.MainActivity this$0 -> a
    android.widget.EditText val$conET -> b
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.minus.lovershouse.MainActivity$4 -> com.minus.lovershouse.bu:
    com.minus.lovershouse.MainActivity this$0 -> a
    void run() -> run
com.minus.lovershouse.MainActivity$5 -> com.minus.lovershouse.bv:
    com.minus.xsocket.handler.UserPacketHandler mReq -> a
    com.minus.lovershouse.MainActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$6 -> com.minus.lovershouse.bw:
    com.minus.lovershouse.MainActivity this$0 -> a
    void run() -> run
com.minus.lovershouse.MainActivity$7 -> com.minus.lovershouse.bx:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$8 -> com.minus.lovershouse.by:
    com.minus.lovershouse.MainActivity this$0 -> a
    java.lang.String val$chatmsg1 -> b
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$9 -> com.minus.lovershouse.bz:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.MainActivity$ActionHandler -> com.minus.lovershouse.MainActivity$ActionHandler:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.lovershouse.MainActivity$LoginTask -> com.minus.lovershouse.MainActivity$a:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.String[]) -> a
    void onProgressUpdate(java.lang.String[]) -> b
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.minus.lovershouse.MainActivity$MyHandler -> com.minus.lovershouse.MainActivity$MyHandler:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.lovershouse.MainActivity$MyReceiver -> com.minus.lovershouse.MainActivity$b:
    com.minus.lovershouse.MainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.minus.lovershouse.R -> com.minus.lovershouse.ca:
com.minus.lovershouse.R$styleable -> com.minus.lovershouse.ca$a:
    int[] LockPatternView -> LockPatternView
    int LockPatternView_arrowGreenUp -> LockPatternView_arrowGreenUp
    int LockPatternView_arrowRedUp -> LockPatternView_arrowRedUp
    int LockPatternView_aspect -> LockPatternView_aspect
    int LockPatternView_btnNormal -> LockPatternView_btnNormal
    int LockPatternView_btnTouched -> LockPatternView_btnTouched
    int LockPatternView_circleGreen -> LockPatternView_circleGreen
    int LockPatternView_circleNormal -> LockPatternView_circleNormal
    int LockPatternView_circleRed -> LockPatternView_circleRed
    int LockPatternView_line -> LockPatternView_line
    int[] NumberProgressBar -> NumberProgressBar
    int NumberProgressBar_max -> NumberProgressBar_max
    int NumberProgressBar_progress -> NumberProgressBar_progress
    int NumberProgressBar_progress_reached_bar_height -> NumberProgressBar_progress_reached_bar_height
    int NumberProgressBar_progress_reached_color -> NumberProgressBar_progress_reached_color
    int NumberProgressBar_progress_text_color -> NumberProgressBar_progress_text_color
    int NumberProgressBar_progress_text_offset -> NumberProgressBar_progress_text_offset
    int NumberProgressBar_progress_text_size -> NumberProgressBar_progress_text_size
    int NumberProgressBar_progress_text_visibility -> NumberProgressBar_progress_text_visibility
    int NumberProgressBar_progress_unreached_bar_height -> NumberProgressBar_progress_unreached_bar_height
    int NumberProgressBar_progress_unreached_color -> NumberProgressBar_progress_unreached_color
    int[] Themes -> Themes
    int Themes_numberProgressBarStyle -> Themes_numberProgressBarStyle
com.minus.lovershouse.RegisterActivity -> com.minus.lovershouse.RegisterActivity:
    android.widget.LinearLayout step1 -> b
    android.widget.LinearLayout step2 -> c
    android.view.View$OnClickListener itemsOnClick -> d
    android.widget.TextView stateTv -> e
    android.widget.ImageView nickNameInd -> f
    android.widget.EditText bigNameEt -> g
    android.widget.ImageView emailInd -> h
    android.widget.ProgressBar progressInd -> i
    android.widget.EditText emailEt -> j
    android.widget.EditText pwdEt -> k
    android.widget.EditText pwdAgainEt -> l
    android.widget.CheckBox privacySelect -> m
    android.widget.Button privacyButton -> n
    android.widget.Button btn_regnext_step -> o
    boolean nextstepPressed -> p
    android.widget.Button tologinButton -> q
    boolean isGirl -> r
    boolean isChooseSex -> s
    boolean userOK -> t
    boolean mailCanReg -> a
    android.widget.ImageView reg_back -> u
    android.widget.ImageButton girlImg -> v
    android.widget.ImageButton boyImg -> w
    android.widget.TextView stateTv2 -> x
    boolean passwordOK -> y
    boolean headPhotoOk -> z
    android.widget.ImageButton nextBtn -> A
    android.widget.ImageView headPhoto -> B
    android.graphics.Bitmap headBitmap -> C
    com.minus.lovershouse.util.SelectPicPopup mSelectPicPopup -> D
    com.minus.lovershouse.RegisterActivity$MyReceiver receiver -> E
    com.minus.lovershouse.RegisterActivity$MyHandler mHandler -> F
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void initView() -> c
    void initData() -> d
    void onClick(android.view.View) -> onClick
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean isShouldHideInput(android.view.View,android.view.MotionEvent) -> a
    void onClickChooseHeadImageBtn() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void destoryBimap() -> e
    boolean checkEmailFormat(java.lang.String) -> a
    void checkNickName(java.lang.String) -> b
    boolean hasWhiteSpace(java.lang.String) -> c
    void checkEmail(java.lang.String) -> d
    void checkPassword(java.lang.String) -> e
    void checkConfirmPassword(java.lang.String) -> f
    void compressAndSavePic() -> b
    void processMailCanReg(java.lang.String) -> g
    android.net.Uri getOutputMediaFileUri(int) -> b
    java.io.File getOutputMediaFile(int) -> c
    com.minus.lovershouse.util.SelectPicPopup access$0(com.minus.lovershouse.RegisterActivity) -> a
    android.net.Uri access$1(int) -> a
    void access$2(com.minus.lovershouse.RegisterActivity,android.graphics.Bitmap) -> a
    android.widget.ImageView access$3(com.minus.lovershouse.RegisterActivity) -> b
    void access$4(com.minus.lovershouse.RegisterActivity,boolean) -> a
    com.minus.lovershouse.RegisterActivity$MyHandler access$5(com.minus.lovershouse.RegisterActivity) -> c
    android.widget.ImageView access$6(com.minus.lovershouse.RegisterActivity) -> d
    android.widget.TextView access$7(com.minus.lovershouse.RegisterActivity) -> e
    android.widget.EditText access$8(com.minus.lovershouse.RegisterActivity) -> f
    android.widget.EditText access$9(com.minus.lovershouse.RegisterActivity) -> g
    android.widget.ImageView access$10(com.minus.lovershouse.RegisterActivity) -> h
    android.widget.EditText access$11(com.minus.lovershouse.RegisterActivity) -> i
    android.widget.EditText access$12(com.minus.lovershouse.RegisterActivity) -> j
com.minus.lovershouse.RegisterActivity$1 -> com.minus.lovershouse.cb:
    com.minus.lovershouse.RegisterActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.RegisterActivity$2 -> com.minus.lovershouse.cc:
    com.minus.lovershouse.RegisterActivity this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.minus.lovershouse.RegisterActivity$3 -> com.minus.lovershouse.cd:
    com.minus.lovershouse.RegisterActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.minus.lovershouse.RegisterActivity$4 -> com.minus.lovershouse.ce:
    com.minus.lovershouse.RegisterActivity this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.minus.lovershouse.RegisterActivity$5 -> com.minus.lovershouse.cf:
    com.minus.lovershouse.RegisterActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.minus.lovershouse.RegisterActivity$6 -> com.minus.lovershouse.cg:
    com.minus.lovershouse.RegisterActivity this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.minus.lovershouse.RegisterActivity$7 -> com.minus.lovershouse.ch:
    com.minus.lovershouse.RegisterActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.minus.lovershouse.RegisterActivity$8 -> com.minus.lovershouse.ci:
    com.minus.lovershouse.RegisterActivity this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.minus.lovershouse.RegisterActivity$9 -> com.minus.lovershouse.cj:
    com.minus.lovershouse.RegisterActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.minus.lovershouse.RegisterActivity$HandleHeadPhotoTask -> com.minus.lovershouse.RegisterActivity$a:
    com.minus.lovershouse.RegisterActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    void onProgressUpdate(java.lang.String[]) -> b
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.minus.lovershouse.RegisterActivity$MyHandler -> com.minus.lovershouse.RegisterActivity$MyHandler:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.lovershouse.RegisterActivity$MyReceiver -> com.minus.lovershouse.RegisterActivity$b:
    com.minus.lovershouse.RegisterActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.minus.lovershouse.SetAppearanceActivity -> com.minus.lovershouse.SetAppearanceActivity:
    boolean isFirstInit -> a
    android.widget.ListView appearanceList -> b
    com.minus.lovershouse.adapter.SetAppearanceAdapter appearanceListAdapter -> c
    int ScreenWIDTH -> d
    android.view.ViewGroup setHairView -> e
    android.view.ViewGroup setBodyView -> f
    android.view.ViewGroup setDecoView -> g
    android.widget.ImageView backtoregisterBtn -> h
    android.widget.ImageView finishBtn -> i
    android.app.ProgressDialog savingPg -> j
    char[] appear -> k
    char bg -> n
    java.lang.String headPhotoPath -> o
    java.lang.String sex -> p
    java.lang.String nickName -> q
    java.lang.String email -> r
    java.lang.String pwd -> s
    java.lang.String apply -> t
    android.graphics.Bitmap headBitmap -> u
    com.minus.lovershouse.SetAppearanceActivity$MyReceiver receiver -> v
    com.minus.lovershouse.SetAppearanceActivity$MyHandler mHandler -> w
    int[] boyHairImageIds -> x
    int[] girlHairImageIds -> y
    int[] boyClothesImageIds -> z
    int[] girlClothesImageIds -> A
    int[] boyDecImageIds -> B
    int[] girlDecImageIds -> C
    android.widget.GridView hairGridView -> D
    com.minus.lovershouse.SetAppearanceActivity$ImageAdapter hairGridViewAdapter -> E
    android.widget.GridView clothesGridView -> F
    com.minus.lovershouse.SetAppearanceActivity$ImageAdapter clothesGridViewAdapter -> G
    android.widget.GridView decGridView -> H
    com.minus.lovershouse.SetAppearanceActivity$ImageAdapter decGridViewAdapter -> I
    android.widget.RelativeLayout topRL -> J
    android.widget.RelativeLayout boyRL -> K
    android.widget.RelativeLayout girlRL -> L
    android.widget.ImageView boyCloth -> M
    android.widget.ImageView boyHair -> N
    android.widget.ImageView boyDec -> O
    android.widget.ImageView girlCloth -> P
    android.widget.ImageView girlHair -> Q
    android.widget.ImageView girlDec -> R
    com.minus.lovershouse.util.BadgeView hairSelectedbadge -> S
    com.minus.lovershouse.util.BadgeView clothesSelectedbadge -> T
    com.minus.lovershouse.util.BadgeView decSelectedbadge -> U
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void initView() -> d
    void initSub(android.view.View) -> a
    void setHairView(android.view.View) -> b
    void setClothesView(android.view.View) -> c
    void setDecView(android.view.View) -> d
    void initData() -> e
    void onClick(android.view.View) -> onClick
    void onClickFinishBtn() -> f
    void RegisterSuccess() -> a
    void startSaveToSd() -> b
    void jumpToMain() -> c
    void showHairSelectButton(android.view.View) -> e
    void showClothesSelectButton(android.view.View) -> f
    void showDecSelectButton(android.view.View) -> g
    void processReg(java.lang.String) -> a
    com.minus.lovershouse.SetAppearanceActivity$MyHandler access$0(com.minus.lovershouse.SetAppearanceActivity) -> a
    android.app.ProgressDialog access$1(com.minus.lovershouse.SetAppearanceActivity) -> b
    char[] access$2(com.minus.lovershouse.SetAppearanceActivity) -> c
    void access$3(com.minus.lovershouse.SetAppearanceActivity,android.view.View) -> a
    void access$4(com.minus.lovershouse.SetAppearanceActivity,android.view.View) -> b
    void access$5(com.minus.lovershouse.SetAppearanceActivity,android.view.View) -> c
    void access$6(com.minus.lovershouse.SetAppearanceActivity,android.view.View) -> d
    android.view.ViewGroup access$7(com.minus.lovershouse.SetAppearanceActivity) -> d
    android.view.ViewGroup access$8(com.minus.lovershouse.SetAppearanceActivity) -> e
    android.view.ViewGroup access$9(com.minus.lovershouse.SetAppearanceActivity) -> f
    android.widget.ImageView access$10(com.minus.lovershouse.SetAppearanceActivity) -> g
    android.widget.ImageView access$11(com.minus.lovershouse.SetAppearanceActivity) -> h
    android.widget.ImageView access$12(com.minus.lovershouse.SetAppearanceActivity) -> i
    android.widget.ImageView access$13(com.minus.lovershouse.SetAppearanceActivity) -> j
    android.widget.ImageView access$14(com.minus.lovershouse.SetAppearanceActivity) -> k
    android.widget.ImageView access$15(com.minus.lovershouse.SetAppearanceActivity) -> l
    java.lang.String access$16(com.minus.lovershouse.SetAppearanceActivity) -> m
com.minus.lovershouse.SetAppearanceActivity$1 -> com.minus.lovershouse.ck:
    com.minus.lovershouse.SetAppearanceActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.minus.lovershouse.SetAppearanceActivity$2 -> com.minus.lovershouse.cl:
    com.minus.lovershouse.SetAppearanceActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.minus.lovershouse.SetAppearanceActivity$3 -> com.minus.lovershouse.cm:
    com.minus.lovershouse.SetAppearanceActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.minus.lovershouse.SetAppearanceActivity$4 -> com.minus.lovershouse.cn:
    com.minus.lovershouse.SetAppearanceActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.minus.lovershouse.SetAppearanceActivity$5 -> com.minus.lovershouse.co:
    com.minus.lovershouse.SetAppearanceActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.minus.lovershouse.SetAppearanceActivity$6 -> com.minus.lovershouse.cp:
    com.minus.lovershouse.SetAppearanceActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.minus.lovershouse.SetAppearanceActivity$7 -> com.minus.lovershouse.cq:
    com.minus.lovershouse.SetAppearanceActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.minus.lovershouse.SetAppearanceActivity$8 -> com.minus.lovershouse.cr:
    com.minus.lovershouse.SetAppearanceActivity this$0 -> a
    void run() -> run
com.minus.lovershouse.SetAppearanceActivity$ImageAdapter -> com.minus.lovershouse.SetAppearanceActivity$a:
    int[] imageSource -> c
    int type -> a
    boolean isInit -> d
    com.minus.lovershouse.SetAppearanceActivity this$0 -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.minus.lovershouse.SetAppearanceActivity$MyHandler -> com.minus.lovershouse.SetAppearanceActivity$MyHandler:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.lovershouse.SetAppearanceActivity$MyReceiver -> com.minus.lovershouse.SetAppearanceActivity$b:
    com.minus.lovershouse.SetAppearanceActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.minus.lovershouse.SetAppearanceActivity$ViewHolder -> com.minus.lovershouse.SetAppearanceActivity$c:
    android.widget.ImageView imageView -> a
    android.widget.ImageView index -> b
com.minus.lovershouse.WelcomeActivity -> com.minus.lovershouse.WelcomeActivity:
    android.os.Handler welcomeHandler -> a
    com.umeng.message.PushAgent mPushAgent -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
com.minus.lovershouse.WelcomeActivity$MyHandler -> com.minus.lovershouse.WelcomeActivity$MyHandler:
    com.minus.lovershouse.WelcomeActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.lovershouse.adapter.MenuListAdapter -> com.minus.lovershouse.a.a:
    android.app.Activity context -> a
    int itemCount -> b
    android.view.LayoutInflater listInflater -> c
    int[] HeadimageIds -> d
    int[] popIds -> e
    int COUNT -> f
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.minus.lovershouse.adapter.MenuListAdapter$ListItemsView -> com.minus.lovershouse.a.a$a:
    android.widget.ImageView menuIcon -> a
    android.widget.TextView popupText -> b
    android.widget.ImageView dividerView -> c
    com.minus.lovershouse.adapter.MenuListAdapter this$0 -> d
com.minus.lovershouse.adapter.SetAppearanceAdapter -> com.minus.lovershouse.a.b:
    android.app.Activity context -> a
    java.util.List listItems -> b
    int itemCount -> c
    android.view.LayoutInflater listInflater -> d
    int[] imageIds -> e
    int COUNT -> f
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void init(android.content.Context) -> a
com.minus.lovershouse.adapter.SetAppearanceAdapter$ListItemsView -> com.minus.lovershouse.a.b$a:
    android.widget.ImageView menuIcon -> a
    com.minus.lovershouse.adapter.SetAppearanceAdapter this$0 -> b
com.minus.lovershouse.baseActivity.BroadCast -> com.minus.lovershouse.b.a:
    boolean toBack -> l
    boolean toBacklock -> m
    com.minius.service.IService mService -> a
    android.os.PowerManager$WakeLock mWakeLock -> b
    com.minius.service.ICallback$Stub mCallback -> c
    android.content.ServiceConnection mConnection -> d
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void acquireWakeLock() -> a
    void releaseWakeLock() -> b
    void enterForeGround() -> u
    boolean isShouldHideInput(android.view.View,android.view.MotionEvent) -> a
    void handleBacklock() -> c
    void access$0(com.minus.lovershouse.baseActivity.BroadCast) -> a
    void access$1(com.minus.lovershouse.baseActivity.BroadCast,com.minius.service.IService) -> a
    com.minius.service.IService access$2(com.minus.lovershouse.baseActivity.BroadCast) -> b
    com.minius.service.ICallback$Stub access$3(com.minus.lovershouse.baseActivity.BroadCast) -> c
com.minus.lovershouse.baseActivity.BroadCast$1 -> com.minus.lovershouse.b.b:
    com.minus.lovershouse.baseActivity.BroadCast this$0 -> a
    void lockOn() -> a
com.minus.lovershouse.baseActivity.BroadCast$2 -> com.minus.lovershouse.b.c:
    com.minus.lovershouse.baseActivity.BroadCast this$0 -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.minus.lovershouse.face.ChatEmoji -> com.minus.lovershouse.face.a:
    int id -> a
    java.lang.String character -> b
    java.lang.String faceName -> c
    int getId() -> a
    void setId(int) -> a
    java.lang.String getCharacter() -> b
    void setCharacter(java.lang.String) -> a
    void setFaceName(java.lang.String) -> b
com.minus.lovershouse.face.EmoticonAdapter -> com.minus.lovershouse.face.b:
    android.content.Context mContext -> a
    android.view.LayoutInflater inflater -> b
    java.util.List mList -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.minus.lovershouse.face.EmoticonAdapter$ViewHolder -> com.minus.lovershouse.face.b$a:
    android.widget.TextView tv_emoicon -> a
    com.minus.lovershouse.face.EmoticonAdapter this$0 -> b
com.minus.lovershouse.face.EmoticonConversionUtil -> com.minus.lovershouse.face.c:
    java.lang.String[] mEmoticons -> b
    int pageSize -> c
    com.minus.lovershouse.face.EmoticonConversionUtil mConversionUtil -> d
    java.util.List emoticonsList -> a
    com.minus.lovershouse.face.EmoticonConversionUtil getInstace() -> a
    java.util.List getEmoticonsList() -> b
com.minus.lovershouse.face.FaceAdapter -> com.minus.lovershouse.face.d:
    java.util.List data -> a
    android.view.LayoutInflater inflater -> b
    int size -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.minus.lovershouse.face.FaceAdapter$ViewHolder -> com.minus.lovershouse.face.d$a:
    android.widget.ImageView iv_face -> a
    com.minus.lovershouse.face.FaceAdapter this$0 -> b
com.minus.lovershouse.face.FaceConversionUtil -> com.minus.lovershouse.face.e:
    int pageSize -> b
    boolean isInit -> c
    com.minus.lovershouse.face.FaceConversionUtil mFaceConversionUtil -> d
    java.util.HashMap emojiMap -> e
    java.util.List emojis -> f
    java.util.List emojiLists -> a
    com.minus.lovershouse.face.FaceConversionUtil getInstace() -> a
    android.text.SpannableString getExpressionString(android.content.Context,java.lang.String) -> a
    android.text.SpannableString addFace(android.content.Context,int,java.lang.String) -> a
    void dealExpression(android.content.Context,android.text.SpannableString,java.util.regex.Pattern,int) -> a
    void getFileText(android.content.Context) -> a
    void ParseData(java.util.List,android.content.Context) -> a
    java.util.List getData(int) -> a
com.minus.lovershouse.face.FaceRelativeLayout -> com.minus.lovershouse.face.FaceRelativeLayout:
    android.content.Context context -> a
    com.minus.lovershouse.face.FaceRelativeLayout$OnCorpusSelectedListener mListener -> b
    android.support.v4.view.ViewPager vp_face -> c
    java.util.ArrayList pageViews_emoji -> d
    java.util.ArrayList pageViews_emoticon -> e
    android.widget.LinearLayout layout_point -> f
    java.util.ArrayList pointViews -> g
    java.util.List emojis -> h
    java.util.List emoticons -> i
    android.view.View view -> j
    android.widget.EditText et_sendmessage -> k
    java.util.List faceAdapters -> l
    int current -> m
    void setOnCorpusSelectedListener(com.minus.lovershouse.face.FaceRelativeLayout$OnCorpusSelectedListener) -> setOnCorpusSelectedListener
    void onFinishInflate() -> onFinishInflate
    void onCreate() -> b
    void onClick(android.view.View) -> onClick
    boolean hideFaceView() -> a
    void Init_View() -> c
    void Init_emoji_emoticon() -> d
    void Init_viewPager_emoji() -> e
    void Init_viewPager_emoticon() -> f
    void setPoint_emoji_emoticon(java.util.List) -> setPoint_emoji_emoticon
    void choose_emoji_emoticon(java.util.List) -> a
    void draw_Point(int) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    java.util.ArrayList access$0(com.minus.lovershouse.face.FaceRelativeLayout) -> a
    void access$1(com.minus.lovershouse.face.FaceRelativeLayout,java.util.List) -> a
    void access$2(com.minus.lovershouse.face.FaceRelativeLayout,java.util.List) -> b
    java.util.ArrayList access$3(com.minus.lovershouse.face.FaceRelativeLayout) -> b
    android.widget.EditText access$4(com.minus.lovershouse.face.FaceRelativeLayout) -> c
    void access$5(com.minus.lovershouse.face.FaceRelativeLayout,int) -> a
    java.util.ArrayList access$6(com.minus.lovershouse.face.FaceRelativeLayout) -> d
    android.support.v4.view.ViewPager access$7(com.minus.lovershouse.face.FaceRelativeLayout) -> e
com.minus.lovershouse.face.FaceRelativeLayout$1 -> com.minus.lovershouse.face.f:
    com.minus.lovershouse.face.FaceRelativeLayout this$0 -> a
    android.widget.ImageView val$emoji -> b
    android.widget.ImageView val$emoticon -> c
    android.widget.ImageButton val$deleteBtn -> d
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.face.FaceRelativeLayout$2 -> com.minus.lovershouse.face.g:
    com.minus.lovershouse.face.FaceRelativeLayout this$0 -> a
    android.widget.ImageView val$emoji -> b
    android.widget.ImageView val$emoticon -> c
    android.widget.ImageButton val$deleteBtn -> d
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.face.FaceRelativeLayout$3 -> com.minus.lovershouse.face.h:
    com.minus.lovershouse.face.FaceRelativeLayout this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.face.FaceRelativeLayout$4 -> com.minus.lovershouse.face.i:
    com.minus.lovershouse.face.FaceRelativeLayout this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.minus.lovershouse.face.FaceRelativeLayout$5 -> com.minus.lovershouse.face.j:
    com.minus.lovershouse.face.FaceRelativeLayout this$0 -> a
    void onPageSelected(int) -> a
    void onPageScrolled(int,float,int) -> a
    void onPageScrollStateChanged(int) -> b
com.minus.lovershouse.face.FaceRelativeLayout$OnCorpusSelectedListener -> com.minus.lovershouse.face.FaceRelativeLayout$a:
    void onCorpusSelected(com.minus.lovershouse.face.ChatEmoji) -> a
com.minus.lovershouse.face.FileUtils -> com.minus.lovershouse.face.k:
    java.util.List getEmojiFile(android.content.Context) -> a
com.minus.lovershouse.face.ViewPagerAdapter -> com.minus.lovershouse.face.l:
    java.util.List pageViews -> a
    int getCount() -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    int getItemPosition(java.lang.Object) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
com.minus.lovershouse.setting.AboutusActivity -> com.minus.lovershouse.setting.AboutusActivity:
    android.widget.ImageView back -> a
    android.widget.ImageView policy -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.setting.BasicSettingActivity -> com.minus.lovershouse.setting.BasicSettingActivity:
    android.widget.ImageView back -> c
    android.widget.ToggleButton voice -> d
    android.widget.ToggleButton viberate -> e
    android.widget.ToggleButton num -> f
    android.widget.ToggleButton graph -> g
    android.widget.RelativeLayout modifyPass -> h
    boolean needCancel -> i
    android.content.SharedPreferences mSP -> a
    android.content.SharedPreferences$Editor mEditor -> b
    boolean backTemp -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    void initView() -> b
    void checkSetting() -> a
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.widget.ToggleButton access$0(com.minus.lovershouse.setting.BasicSettingActivity) -> a
    android.widget.ToggleButton access$1(com.minus.lovershouse.setting.BasicSettingActivity) -> b
    boolean access$2(com.minus.lovershouse.setting.BasicSettingActivity) -> c
    android.widget.ToggleButton access$3(com.minus.lovershouse.setting.BasicSettingActivity) -> d
    boolean access$4(com.minus.lovershouse.setting.BasicSettingActivity) -> e
    android.widget.ToggleButton access$5(com.minus.lovershouse.setting.BasicSettingActivity) -> f
    void access$6(com.minus.lovershouse.setting.BasicSettingActivity,boolean) -> a
com.minus.lovershouse.setting.BasicSettingActivity$1 -> com.minus.lovershouse.setting.a:
    com.minus.lovershouse.setting.BasicSettingActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.minus.lovershouse.setting.BasicSettingActivity$2 -> com.minus.lovershouse.setting.b:
    com.minus.lovershouse.setting.BasicSettingActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.minus.lovershouse.setting.BasicSettingActivity$3 -> com.minus.lovershouse.setting.c:
    com.minus.lovershouse.setting.BasicSettingActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.minus.lovershouse.setting.BasicSettingActivity$4 -> com.minus.lovershouse.setting.d:
    com.minus.lovershouse.setting.BasicSettingActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.minus.lovershouse.setting.CommonPasswordView -> com.minus.lovershouse.setting.CommonPasswordView:
    android.content.Context context -> a
    android.widget.RelativeLayout showNumberLayout -> b
    android.widget.ImageView[] imgs -> g
    android.widget.GridView dcMyGameMyGridView -> c
    android.view.LayoutInflater mInflater -> d
    java.lang.String password -> h
    com.minus.lovershouse.setting.CommonPasswordView$OnClickPhoneNumberListener onClickPhoneNumberListener -> e
    android.os.Handler lockHandler -> i
    com.minus.lovershouse.setting.CommonPasswordView$PhoneNumberAdapter phoneNumberAdapter -> f
    int[] phoneNumberImgs -> j
    android.widget.TextView unlockhint -> k
    void setOnClickPhoneNumberListener(com.minus.lovershouse.setting.CommonPasswordView$OnClickPhoneNumberListener) -> setOnClickPhoneNumberListener
    void initView() -> c
    void setShowImageViewCount(int) -> setShowImageViewCount
    void setHideImageView() -> a
    void changePasswrod(java.lang.String) -> a
    void deletePassword() -> d
    java.lang.String getHint() -> getHint
    void setHint(java.lang.String,android.view.animation.Animation) -> a
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    void cleanAllPassword() -> b
    int[] access$0(com.minus.lovershouse.setting.CommonPasswordView) -> a
    void access$1(com.minus.lovershouse.setting.CommonPasswordView,java.lang.String) -> a
    void access$2(com.minus.lovershouse.setting.CommonPasswordView) -> b
    android.widget.TextView access$3(com.minus.lovershouse.setting.CommonPasswordView) -> c
com.minus.lovershouse.setting.CommonPasswordView$MyHandler -> com.minus.lovershouse.setting.CommonPasswordView$MyHandler:
    com.minus.lovershouse.setting.CommonPasswordView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.lovershouse.setting.CommonPasswordView$OnClickPhoneNumberListener -> com.minus.lovershouse.setting.CommonPasswordView$a:
    void OnClick() -> a
com.minus.lovershouse.setting.CommonPasswordView$PhoneNumberAdapter -> com.minus.lovershouse.setting.CommonPasswordView$b:
    com.minus.lovershouse.setting.CommonPasswordView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.minus.lovershouse.setting.CommonPasswordView$PhoneNumberItemClickListener -> com.minus.lovershouse.setting.CommonPasswordView$c:
    com.minus.lovershouse.setting.CommonPasswordView this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.minus.lovershouse.setting.ConfigActivity -> com.minus.lovershouse.setting.ConfigActivity:
    android.widget.ListView menuList -> a
    com.minus.lovershouse.adapter.MenuListAdapter menuListAdapter -> b
    android.widget.ScrollView scrollpop -> c
    android.widget.RelativeLayout childpop -> d
    int ScreenWIDTH -> e
    android.widget.RelativeLayout myaccountView -> f
    android.view.ViewGroup targetpopview -> g
    android.widget.FrameLayout bgFl -> h
    android.widget.ImageView bg -> i
    android.widget.RelativeLayout mRl -> j
    android.widget.LinearLayout myaccountLL -> k
    android.widget.LinearLayout mypassLL -> n
    android.widget.TextView myaccountTv -> o
    android.widget.EditText myausernameEt -> p
    android.widget.ImageButton myausernameImgBtn -> q
    android.widget.ImageButton mytransImgBtn -> r
    android.widget.TextView passTitle -> s
    android.widget.ImageButton myaeditpassImgBtn -> t
    android.widget.ImageButton backTomyaccountImgBtn -> u
    android.widget.TextView tarAccTv -> v
    android.widget.EditText tarAccEt -> w
    android.widget.RelativeLayout targetaccbtn -> x
    android.widget.ImageButton tarAccImgBtn -> y
    android.widget.ImageButton acctransImgBtn -> z
    android.widget.TextView tarBigNameTv -> A
    android.widget.EditText tarBigNameEt -> B
    android.widget.ImageButton tarBigNameImgBtn -> C
    android.widget.ImageButton tartransImgBtn -> D
    android.widget.ImageButton beTogetherImgBtn -> E
    com.minus.lovershouse.util.SelectPicPopup mSelectPicPopup -> F
    com.minus.lovershouse.util.ExitPopup mExitPopup -> G
    int lastMotionX -> H
    java.lang.Boolean ucChangeO -> I
    java.lang.Boolean ucChangeN -> J
    com.minus.lovershouse.setting.ConfigActivity$MyReceiver receiver -> K
    com.minus.lovershouse.setting.ConfigActivity$MyHandler mHandler -> L
    android.os.Handler scrollHandler -> M
    boolean isfirstInitmy -> N
    boolean isfirstInittar -> O
    boolean isfirstInithouse -> P
    boolean isfirstInitsoft -> Q
    android.widget.TextView myAccTv -> R
    android.view.ViewGroup mysoftwareView -> S
    android.view.ViewGroup smallhouseView -> T
    java.lang.String houseStyle -> U
    android.widget.ImageView cosmetics -> V
    android.widget.ImageView sunny -> W
    android.widget.ImageView coffee -> X
    android.widget.TextView basicSetting -> Y
    android.widget.TextView about -> Z
    android.widget.TextView help -> aa
    android.widget.TextView feedback -> ab
    android.widget.TextView exit -> ac
    android.widget.EditText oldpassEt -> ad
    android.widget.EditText newpassET -> ae
    android.widget.EditText newpassagainET -> af
    android.widget.ImageButton oldpassImgBtn -> ag
    android.widget.ImageButton newpassImgBtn -> ah
    android.widget.ImageButton newpassagainImgBtn -> ai
    android.widget.TextView resultTv -> aj
    android.widget.TextView daban -> ak
    android.widget.ImageButton enterBtn -> al
    android.widget.RelativeLayout passResult -> am
    android.widget.ImageButton dabanImgBtn -> an
    android.widget.TextView rank -> ao
    android.widget.LinearLayout texts -> ap
    android.widget.RelativeLayout usernameLayout -> aq
    android.widget.TextView hintinvite -> ar
    com.minius.ui.ProgressHUD acceptMatchHUD -> as
    android.os.Handler matchHandler -> at
    android.view.View$OnClickListener itemsOnClick -> au
    android.view.View$OnClickListener exitOnClick -> av
    com.minius.ui.CustomDialog$Builder ibuilder -> aw
    java.lang.String invitor -> ax
    android.view.View$OnClickListener matchAsk -> ay
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void setGlassBackground() -> a
    void onDestroy() -> onDestroy
    void initView() -> f
    int dip2px(android.content.Context,float) -> a
    void initSubView(android.view.View,int) -> a
    boolean hasWhiteSpace(java.lang.String) -> a
    android.net.Uri getOutputMediaFileUri(int) -> b
    java.io.File getOutputMediaFile(int) -> c
    void onClickChooseHeadImageBtn() -> b
    void onClickExitBtn() -> c
    void initHousestyle() -> g
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void onClick(android.view.View) -> onClick
    void TrainsmitFail() -> h
    void TrainsmitSucc() -> i
    void acceptMatch() -> j
    void refuseMatch() -> k
    void processMatchRequest(java.lang.String) -> c
    void processResponse(java.lang.String) -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    byte[] Bitmap2Bytes(android.graphics.Bitmap) -> a
    void sendHeadPhoto() -> d
    void startSaveToSd() -> e
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    com.minus.lovershouse.util.SelectPicPopup access$0(com.minus.lovershouse.setting.ConfigActivity) -> a
    android.net.Uri access$1(int) -> a
    com.minus.lovershouse.util.ExitPopup access$2(com.minus.lovershouse.setting.ConfigActivity) -> b
    java.lang.String access$3(com.minus.lovershouse.setting.ConfigActivity) -> c
    com.minius.ui.CustomDialog$Builder access$4(com.minus.lovershouse.setting.ConfigActivity) -> d
    com.minius.ui.ProgressHUD access$5(com.minus.lovershouse.setting.ConfigActivity) -> e
    com.minus.lovershouse.setting.ConfigActivity$MyHandler access$6(com.minus.lovershouse.setting.ConfigActivity) -> f
    android.widget.EditText access$7(com.minus.lovershouse.setting.ConfigActivity) -> g
    android.widget.ImageButton access$8(com.minus.lovershouse.setting.ConfigActivity) -> h
    void access$9(com.minus.lovershouse.setting.ConfigActivity,java.lang.Boolean) -> a
    java.lang.Boolean access$10(com.minus.lovershouse.setting.ConfigActivity) -> i
    android.widget.ImageButton access$11(com.minus.lovershouse.setting.ConfigActivity) -> j
    android.widget.ImageButton access$12(com.minus.lovershouse.setting.ConfigActivity) -> k
    android.widget.EditText access$13(com.minus.lovershouse.setting.ConfigActivity) -> l
    android.widget.ImageButton access$14(com.minus.lovershouse.setting.ConfigActivity) -> m
    android.widget.EditText access$15(com.minus.lovershouse.setting.ConfigActivity) -> n
    void access$16(com.minus.lovershouse.setting.ConfigActivity,java.lang.Boolean) -> b
    android.widget.ImageButton access$17(com.minus.lovershouse.setting.ConfigActivity) -> o
    java.lang.Boolean access$18(com.minus.lovershouse.setting.ConfigActivity) -> p
    android.widget.EditText access$19(com.minus.lovershouse.setting.ConfigActivity) -> q
    android.os.Handler access$20(com.minus.lovershouse.setting.ConfigActivity) -> r
    android.widget.ScrollView access$21(com.minus.lovershouse.setting.ConfigActivity) -> s
    void access$22(com.minus.lovershouse.setting.ConfigActivity,android.view.View,int) -> a
    android.widget.RelativeLayout access$23(com.minus.lovershouse.setting.ConfigActivity) -> t
    android.view.ViewGroup access$24(com.minus.lovershouse.setting.ConfigActivity) -> u
    android.view.ViewGroup access$25(com.minus.lovershouse.setting.ConfigActivity) -> v
    android.view.ViewGroup access$26(com.minus.lovershouse.setting.ConfigActivity) -> w
    void access$27(com.minus.lovershouse.setting.ConfigActivity) -> x
    void access$28(com.minus.lovershouse.setting.ConfigActivity,int) -> a
    int access$29(com.minus.lovershouse.setting.ConfigActivity) -> y
com.minus.lovershouse.setting.ConfigActivity$1 -> com.minus.lovershouse.setting.e:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.setting.ConfigActivity$10 -> com.minus.lovershouse.setting.f:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    com.minus.lovershouse.setting.ConfigActivity access$0(com.minus.lovershouse.setting.ConfigActivity$10) -> a
com.minus.lovershouse.setting.ConfigActivity$10$1 -> com.minus.lovershouse.setting.g:
    com.minus.lovershouse.setting.ConfigActivity$10 this$1 -> a
    void run() -> run
com.minus.lovershouse.setting.ConfigActivity$11 -> com.minus.lovershouse.setting.h:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.minus.lovershouse.setting.ConfigActivity$12 -> com.minus.lovershouse.setting.i:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.minus.lovershouse.setting.ConfigActivity$13 -> com.minus.lovershouse.setting.j:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void run() -> run
com.minus.lovershouse.setting.ConfigActivity$14 -> com.minus.lovershouse.setting.k:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void run() -> run
com.minus.lovershouse.setting.ConfigActivity$15 -> com.minus.lovershouse.setting.l:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void run() -> run
com.minus.lovershouse.setting.ConfigActivity$2 -> com.minus.lovershouse.setting.m:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.setting.ConfigActivity$3 -> com.minus.lovershouse.setting.n:
    com.minus.xsocket.handler.UserPacketHandler mReq -> a
    com.minus.lovershouse.setting.ConfigActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.setting.ConfigActivity$4 -> com.minus.lovershouse.setting.o:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.minus.lovershouse.setting.ConfigActivity$5 -> com.minus.lovershouse.setting.p:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.minus.lovershouse.setting.ConfigActivity$6 -> com.minus.lovershouse.setting.q:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.minus.lovershouse.setting.ConfigActivity$7 -> com.minus.lovershouse.setting.r:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.minus.lovershouse.setting.ConfigActivity$8 -> com.minus.lovershouse.setting.s:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.minus.lovershouse.setting.ConfigActivity$9 -> com.minus.lovershouse.setting.t:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.minus.lovershouse.setting.ConfigActivity$HandleHeadPhotoTask -> com.minus.lovershouse.setting.ConfigActivity$a:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    void onProgressUpdate(java.lang.String[]) -> b
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.minus.lovershouse.setting.ConfigActivity$MyHandler -> com.minus.lovershouse.setting.ConfigActivity$MyHandler:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.lovershouse.setting.ConfigActivity$MyReceiver -> com.minus.lovershouse.setting.ConfigActivity$b:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.minus.lovershouse.setting.ConfigActivity$MymatchHandler -> com.minus.lovershouse.setting.ConfigActivity$MymatchHandler:
    com.minus.lovershouse.setting.ConfigActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.lovershouse.setting.HelpActivity -> com.minus.lovershouse.setting.HelpActivity:
    android.widget.ImageView back -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.setting.LockGraphView -> com.minus.lovershouse.setting.u:
    android.view.LayoutInflater mInflater -> a
    android.content.Context context -> b
    android.widget.TextView gesturepwd_create_text -> c
    com.minus.lovershouse.setting.LockPatternView gesturepwd_pattern -> d
    void initView() -> a
    void setHint(int) -> setHint
    void setHint(java.lang.String) -> setHint
    void setHint(int,android.view.animation.Animation) -> a
    com.minus.lovershouse.setting.LockPatternView getpattern() -> getpattern
com.minus.lovershouse.setting.LockPatternUtils -> com.minus.lovershouse.setting.v:
    java.io.File sLockPatternFilename -> a
    java.util.concurrent.atomic.AtomicBoolean sHaveNonZeroPatternFile -> b
    android.os.FileObserver sPasswordObserver -> c
    boolean savedPatternExists() -> a
    void clearLock() -> b
    java.util.List stringToPattern(java.lang.String) -> a
    java.lang.String patternToString(java.util.List) -> a
    void saveLockPattern(java.util.List) -> b
    byte[] patternToHash(java.util.List) -> d
    boolean checkPattern(java.util.List) -> c
    java.util.concurrent.atomic.AtomicBoolean access$0() -> c
    java.io.File access$1() -> d
com.minus.lovershouse.setting.LockPatternUtils$LockPatternFileObserver -> com.minus.lovershouse.setting.v$a:
    void onEvent(int,java.lang.String) -> onEvent
com.minus.lovershouse.setting.LockPatternView -> com.minus.lovershouse.setting.LockPatternView:
    boolean mDrawingProfilingStarted -> a
    android.graphics.Paint mPaint -> b
    android.graphics.Paint mPathPaint -> c
    com.minus.lovershouse.setting.LockPatternView$OnPatternListener mOnPatternListener -> d
    java.util.ArrayList mPattern -> e
    boolean[][] mPatternDrawLookup -> f
    float mInProgressX -> g
    float mInProgressY -> h
    long mAnimatingPeriodStart -> i
    com.minus.lovershouse.setting.LockPatternView$DisplayMode mPatternDisplayMode -> j
    boolean mInputEnabled -> k
    boolean mInStealthMode -> l
    boolean mEnableHapticFeedback -> m
    boolean mPatternInProgress -> n
    float mDiameterFactor -> o
    int mStrokeAlpha -> p
    float mHitFactor -> q
    float mSquareWidth -> r
    float mSquareHeight -> s
    android.graphics.Bitmap mBitmapCircleDefault -> t
    android.graphics.Bitmap mBitmapCircleGreen -> u
    android.graphics.Bitmap mBitmapCircleRed -> v
    android.graphics.Path mCurrentPath -> w
    android.graphics.Rect mInvalidate -> x
    int mBitmapWidth -> y
    int mBitmapHeight -> z
    int mAspect -> A
    android.graphics.Matrix mCircleMatrix -> B
    android.graphics.Bitmap getBitmapFor(int) -> a
    void setInStealthMode(boolean) -> setInStealthMode
    void setTactileFeedbackEnabled(boolean) -> setTactileFeedbackEnabled
    void setOnPatternListener(com.minus.lovershouse.setting.LockPatternView$OnPatternListener) -> setOnPatternListener
    void setPattern(com.minus.lovershouse.setting.LockPatternView$DisplayMode,java.util.List) -> a
    void setDisplayMode(com.minus.lovershouse.setting.LockPatternView$DisplayMode) -> setDisplayMode
    void notifyCellAdded() -> b
    void notifyPatternStarted() -> c
    void notifyPatternDetected() -> d
    void notifyPatternCleared() -> e
    void clearPattern() -> a
    void resetPattern() -> f
    void clearPatternDrawLookup() -> g
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int resolveMeasured(int,int) -> a
    int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    void onMeasure(int,int) -> onMeasure
    com.minus.lovershouse.setting.LockPatternView$Cell detectAndAddHit(float,float) -> a
    void addCellToPattern(com.minus.lovershouse.setting.LockPatternView$Cell) -> a
    com.minus.lovershouse.setting.LockPatternView$Cell checkForNewHit(float,float) -> b
    int getRowHit(float) -> a
    int getColumnHit(float) -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleActionMove(android.view.MotionEvent) -> a
    void sendAccessEvent(int) -> b
    void handleActionUp(android.view.MotionEvent) -> b
    void handleActionDown(android.view.MotionEvent) -> c
    float getCenterXForColumn(int) -> c
    float getCenterYForRow(int) -> d
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawCircle(android.graphics.Canvas,int,int,boolean) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.minus.lovershouse.setting.LockPatternView$Cell -> com.minus.lovershouse.setting.LockPatternView$a:
    int row -> a
    int column -> b
    com.minus.lovershouse.setting.LockPatternView$Cell[][] sCells -> c
    int getRow() -> a
    int getColumn() -> b
    com.minus.lovershouse.setting.LockPatternView$Cell of(int,int) -> a
    void checkRange(int,int) -> b
    java.lang.String toString() -> toString
com.minus.lovershouse.setting.LockPatternView$DisplayMode -> com.minus.lovershouse.setting.LockPatternView$b:
    com.minus.lovershouse.setting.LockPatternView$DisplayMode Correct -> a
    com.minus.lovershouse.setting.LockPatternView$DisplayMode Animate -> b
    com.minus.lovershouse.setting.LockPatternView$DisplayMode Wrong -> c
    com.minus.lovershouse.setting.LockPatternView$DisplayMode[] ENUM$VALUES -> d
    com.minus.lovershouse.setting.LockPatternView$DisplayMode[] values() -> values
    com.minus.lovershouse.setting.LockPatternView$DisplayMode valueOf(java.lang.String) -> valueOf
com.minus.lovershouse.setting.LockPatternView$OnPatternListener -> com.minus.lovershouse.setting.LockPatternView$c:
    void onPatternStart() -> a
    void onPatternCleared() -> b
    void onPatternCellAdded(java.util.List) -> a
    void onPatternDetected(java.util.List) -> b
com.minus.lovershouse.setting.LockPatternView$SavedState -> com.minus.lovershouse.setting.LockPatternView$SavedState:
    java.lang.String mSerializedPattern -> a
    int mDisplayMode -> b
    boolean mInputEnabled -> c
    boolean mInStealthMode -> d
    boolean mTactileFeedbackEnabled -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getSerializedPattern() -> a
    int getDisplayMode() -> b
    boolean isInputEnabled() -> c
    boolean isInStealthMode() -> d
    boolean isTactileFeedbackEnabled() -> e
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.minus.lovershouse.setting.LockPatternView$SavedState$1 -> com.minus.lovershouse.setting.w:
    com.minus.lovershouse.setting.LockPatternView$SavedState createFromParcel(android.os.Parcel) -> a
    com.minus.lovershouse.setting.LockPatternView$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.minus.lovershouse.setting.PasswordActivity -> com.minus.lovershouse.setting.PasswordActivity:
    android.widget.FrameLayout numpass_top -> d
    android.widget.ImageView numpass_back -> e
    android.widget.ImageView unlockimage -> f
    android.widget.TextView unlockaccount -> g
    android.widget.ImageButton forgetpass -> h
    com.minus.lovershouse.setting.CommonPasswordView commonPasswordView -> i
    com.minus.lovershouse.setting.CommonPasswordView commonPasswordView2 -> j
    java.lang.String firstPass -> k
    java.lang.String secondPass -> l
    int timesFlag -> m
    android.view.animation.Animation mShakeAnim -> n
    android.content.SharedPreferences mSP -> a
    android.content.SharedPreferences$Editor mEditor -> b
    java.lang.String whoLauch -> c
    android.graphics.Bitmap endBm -> o
    android.os.Handler bmHandler -> p
    android.widget.ViewFlipper flipper -> q
    java.lang.String lastUser -> r
    com.minius.ui.CustomDialog$Builder ibuilder -> s
    android.view.View$OnClickListener forgetDialog -> t
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void initView() -> a
    void movePrevious() -> b
    void moveNext() -> c
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    com.minus.lovershouse.setting.CommonPasswordView access$0(com.minus.lovershouse.setting.PasswordActivity) -> a
    android.view.animation.Animation access$1(com.minus.lovershouse.setting.PasswordActivity) -> b
    int access$2(com.minus.lovershouse.setting.PasswordActivity) -> c
    com.minus.lovershouse.setting.CommonPasswordView access$3(com.minus.lovershouse.setting.PasswordActivity) -> d
    void access$4(com.minus.lovershouse.setting.PasswordActivity,int) -> a
    void access$5(com.minus.lovershouse.setting.PasswordActivity) -> e
    void access$6(com.minus.lovershouse.setting.PasswordActivity,java.lang.String) -> a
    java.lang.String access$7(com.minus.lovershouse.setting.PasswordActivity) -> f
    java.lang.String access$8(com.minus.lovershouse.setting.PasswordActivity) -> g
    void access$9(com.minus.lovershouse.setting.PasswordActivity) -> h
    void access$10(com.minus.lovershouse.setting.PasswordActivity,java.lang.String) -> b
    java.lang.String access$11(com.minus.lovershouse.setting.PasswordActivity) -> i
com.minus.lovershouse.setting.PasswordActivity$1 -> com.minus.lovershouse.setting.x:
    com.minus.lovershouse.setting.PasswordActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.setting.PasswordActivity$2 -> com.minus.lovershouse.setting.y:
    com.minus.lovershouse.setting.PasswordActivity this$0 -> a
    void OnClick() -> a
com.minus.lovershouse.setting.PasswordActivity$3 -> com.minus.lovershouse.setting.z:
    com.minus.lovershouse.setting.PasswordActivity this$0 -> a
    void OnClick() -> a
com.minus.lovershouse.setting.PrivacyActivity -> com.minus.lovershouse.setting.PrivacyActivity:
    android.widget.ImageView back -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.setting.RankActivity -> com.minus.lovershouse.setting.RankActivity:
    android.webkit.WebView webview -> a
    java.lang.String url -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.minus.lovershouse.setting.UnlockGesturePasswordActivity -> com.minus.lovershouse.setting.UnlockGesturePasswordActivity:
    android.widget.FrameLayout gpass_top -> g
    android.widget.ImageView gpass_back -> h
    android.widget.ImageView gunlockimage -> i
    com.minus.lovershouse.setting.LockGraphView mLockGraphView -> j
    com.minus.lovershouse.setting.LockGraphView mLockGraphView2 -> k
    android.widget.ViewFlipper flipper -> l
    android.os.CountDownTimer mCountdownTimer -> m
    android.widget.TextView gunlockaccount -> n
    android.view.animation.Animation mShakeAnim -> o
    android.graphics.Bitmap endBm -> p
    android.os.Handler bmHandler -> q
    java.util.List mChosenPattern -> a
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity$Stage mUiStage -> r
    boolean stage -> s
    java.lang.String lastUser -> t
    android.content.SharedPreferences mSP -> b
    android.content.SharedPreferences$Editor mEditor -> c
    android.widget.ImageButton gesturepwd_unlock_forget -> u
    com.minius.ui.CustomDialog$Builder ibuilder -> v
    int timesFlag -> w
    android.view.View$OnClickListener forgetDialog -> x
    java.lang.Runnable mClearPatternRunnable -> y
    java.lang.Runnable mClearPatternRunnable2 -> z
    java.lang.String whoLauch -> d
    com.minus.lovershouse.setting.LockPatternView$OnPatternListener mChooseNewLockPatternListener -> e
    com.minus.lovershouse.setting.LockPatternView$OnPatternListener mChooseNewLockPatternListener2 -> f
    int[] $SWITCH_TABLE$com$minus$lovershouse$setting$UnlockGesturePasswordActivity$Stage -> A
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void movePrevious() -> b
    void moveNext() -> c
    void updateStage(com.minus.lovershouse.setting.UnlockGesturePasswordActivity$Stage,java.lang.Boolean) -> a
    void saveChosenPatternAndFinish() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    com.minus.lovershouse.setting.LockGraphView access$0(com.minus.lovershouse.setting.UnlockGesturePasswordActivity) -> a
    com.minus.lovershouse.setting.LockGraphView access$1(com.minus.lovershouse.setting.UnlockGesturePasswordActivity) -> b
    java.lang.Runnable access$2(com.minus.lovershouse.setting.UnlockGesturePasswordActivity) -> c
    void access$3(com.minus.lovershouse.setting.UnlockGesturePasswordActivity,com.minus.lovershouse.setting.UnlockGesturePasswordActivity$Stage,java.lang.Boolean) -> a
    int access$4(com.minus.lovershouse.setting.UnlockGesturePasswordActivity) -> d
    void access$5(com.minus.lovershouse.setting.UnlockGesturePasswordActivity,int) -> a
    void access$6(com.minus.lovershouse.setting.UnlockGesturePasswordActivity) -> e
    void access$7(com.minus.lovershouse.setting.UnlockGesturePasswordActivity,boolean) -> a
    android.widget.ImageButton access$8(com.minus.lovershouse.setting.UnlockGesturePasswordActivity) -> f
    void access$9(com.minus.lovershouse.setting.UnlockGesturePasswordActivity) -> g
    java.lang.Runnable access$10(com.minus.lovershouse.setting.UnlockGesturePasswordActivity) -> h
    void access$11(com.minus.lovershouse.setting.UnlockGesturePasswordActivity) -> i
    android.widget.ImageView access$12(com.minus.lovershouse.setting.UnlockGesturePasswordActivity) -> j
    void access$13(com.minus.lovershouse.setting.UnlockGesturePasswordActivity,com.minius.ui.CustomDialog$Builder) -> a
    com.minius.ui.CustomDialog$Builder access$14(com.minus.lovershouse.setting.UnlockGesturePasswordActivity) -> k
    android.view.View$OnClickListener access$15(com.minus.lovershouse.setting.UnlockGesturePasswordActivity) -> l
    int[] $SWITCH_TABLE$com$minus$lovershouse$setting$UnlockGesturePasswordActivity$Stage() -> a
com.minus.lovershouse.setting.UnlockGesturePasswordActivity$1 -> com.minus.lovershouse.setting.aa:
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.setting.UnlockGesturePasswordActivity$2 -> com.minus.lovershouse.setting.ab:
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity this$0 -> a
    void run() -> run
com.minus.lovershouse.setting.UnlockGesturePasswordActivity$3 -> com.minus.lovershouse.setting.ac:
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity this$0 -> a
    void run() -> run
com.minus.lovershouse.setting.UnlockGesturePasswordActivity$4 -> com.minus.lovershouse.setting.ad:
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity this$0 -> a
    void onPatternStart() -> a
    void onPatternCleared() -> b
    void onPatternDetected(java.util.List) -> b
    void onPatternCellAdded(java.util.List) -> a
    void patternInProgress() -> c
com.minus.lovershouse.setting.UnlockGesturePasswordActivity$5 -> com.minus.lovershouse.setting.ae:
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity this$0 -> a
    void onPatternStart() -> a
    void onPatternCleared() -> b
    void onPatternDetected(java.util.List) -> b
    void onPatternCellAdded(java.util.List) -> a
    void patternInProgress() -> c
com.minus.lovershouse.setting.UnlockGesturePasswordActivity$6 -> com.minus.lovershouse.setting.af:
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.setting.UnlockGesturePasswordActivity$7 -> com.minus.lovershouse.setting.ag:
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.setting.UnlockGesturePasswordActivity$Stage -> com.minus.lovershouse.setting.UnlockGesturePasswordActivity$a:
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity$Stage Introduction -> a
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity$Stage ChoiceTooShort -> b
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity$Stage FirstChoiceValid -> c
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity$Stage NeedToConfirm -> d
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity$Stage ConfirmWrong -> e
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity$Stage ChoiceConfirmed -> f
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity$Stage Unlock -> g
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity$Stage UnlockWrong -> h
    int headerMessage -> i
    int footerMessage -> j
    boolean patternEnabled -> k
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity$Stage[] ENUM$VALUES -> l
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity$Stage[] values() -> values
    com.minus.lovershouse.setting.UnlockGesturePasswordActivity$Stage valueOf(java.lang.String) -> valueOf
com.minus.lovershouse.singleton.GlobalApplication -> com.minus.lovershouse.singleton.GlobalApplication:
    java.util.Stack activityStack -> v
    com.minus.lovershouse.singleton.GlobalApplication singleton -> w
    java.lang.String PATH_ERROR_LOG -> a
    com.minus.lovershouse.setting.LockPatternUtils mLockPatternUtils -> x
    boolean isRegVisible -> y
    boolean isLoginVisible -> z
    boolean isMainVisible -> A
    boolean isDiaryVisible -> B
    boolean isChatVisible -> C
    boolean isAlbumVisible -> D
    java.lang.String motion -> b
    java.lang.String friends -> c
    java.lang.String witness -> d
    java.lang.String houseStyle -> e
    java.lang.String lightState -> f
    java.lang.String firstPicture -> g
    java.lang.String modifyPwd -> h
    java.lang.String modifySex -> i
    java.lang.String modifyBigname -> j
    java.lang.String modifyAppearance -> k
    java.lang.String modifyStatus -> l
    java.lang.String modifySmallMame -> m
    java.lang.String tiAcc -> n
    java.lang.String tiSex -> o
    java.lang.String tiBigName -> p
    java.lang.String tiAppearance -> q
    java.lang.String tiStatus -> r
    java.lang.String tiSmallName -> s
    java.lang.String tiTarget -> t
    java.lang.String tiTargetHeadPhoPath -> u
    java.util.HashMap tarCustomActionList -> E
    java.lang.String MyReadTime -> F
    java.lang.String MsgSend -> G
    java.lang.String IniDate -> H
    boolean isChatNewInit -> I
    boolean isDiaryNewInit -> J
    boolean isAlbumNewInit -> K
    android.graphics.Bitmap tarHeadPicBm -> L
    int UploadPictureLastModifyTimeState -> M
    int UploadPicture -> N
    int picTempCount -> O
    java.lang.String albumLastModefyTime -> P
    java.lang.String couple_ActionMsg -> Q
    int screenWidth -> R
    int screenHeigh -> S
    int albumHeight -> T
    int initPos -> U
    java.util.List mGT -> V
    boolean isSelectPic -> W
    android.net.Uri fileUri -> X
    void onCreate() -> onCreate
    com.minus.lovershouse.setting.LockPatternUtils getLockPatternUtils() -> a
    void initImageLoader(android.content.Context) -> a
    void onLowMemory() -> onLowMemory
    void onTrimMemory(int) -> onTrimMemory
    com.minus.lovershouse.singleton.GlobalApplication getInstance() -> b
    void addActivity(android.app.Activity) -> a
    void finishActivity(android.app.Activity) -> b
    void finishOtherActivity() -> c
    void finishAllActivity() -> d
    void AppExit() -> e
    boolean isRunning(java.lang.String) -> a
    boolean isAppOnForeground() -> f
    int isSoundViberate() -> g
    boolean isRegVisible() -> h
    void setRegVisible(boolean) -> a
    boolean isLoginVisible() -> i
    void setLoginVisible(boolean) -> b
    boolean isMainVisible() -> j
    void setMainVisible(boolean) -> c
    boolean isDiaryVisible() -> k
    void setDiaryVisible(boolean) -> d
    boolean isChatVisible() -> l
    void setChatVisible(boolean) -> e
    boolean isAlbumVisible() -> m
    void setAlbumVisible(boolean) -> f
    void setCommon(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void setCommonDefault() -> n
    void setTarInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void setTargetDefault() -> o
    java.lang.String getHouseStyle() -> p
    void setHouseStyle(java.lang.String) -> b
    java.lang.String getLightState() -> q
    void setLightState(java.lang.String) -> c
    java.lang.String getFirstPicture() -> r
    void setFirstPicture(java.lang.String) -> d
    java.lang.String getModifyPwd() -> s
    void setModifyPwd(java.lang.String) -> e
    java.lang.String getModifySex() -> t
    java.lang.String getModifyBigname() -> u
    void setModifyBigname(java.lang.String) -> f
    java.lang.String getModifyAppearance() -> v
    void setModifyAppearance(java.lang.String) -> g
    java.lang.String getModifyStatus() -> w
    java.lang.String getModifySmallMame() -> x
    void setModifySmallMame(java.lang.String) -> h
    java.lang.String getTiAcc() -> y
    void setTiAcc(java.lang.String) -> i
    java.lang.String getTiSex() -> z
    java.lang.String getTiBigName() -> A
    java.lang.String getTiAppearance() -> B
    void setTiAppearance(java.lang.String) -> j
    java.lang.String getTiStatus() -> C
    void setTiStatus(java.lang.String) -> k
    java.lang.String getTiSmallName() -> D
    java.lang.String getTiTargetHeadPhoPath() -> E
    void setTiTargetHeadPhoPath(java.lang.String) -> l
    java.util.HashMap getTarCustomActionList() -> F
    void setTarCustomActionList(java.util.HashMap) -> a
    android.graphics.Bitmap getTarHeadPicBm() -> G
    void setTarHeadPicBm(android.graphics.Bitmap) -> a
    void destoryBimap() -> H
    java.lang.String getMyReadTime() -> I
    void setMyReadTime(java.lang.String) -> m
    java.lang.String getMsgSend() -> J
    void setMsgSend(java.lang.String) -> n
    java.lang.String getIniDate() -> K
    void setIniDate(java.lang.String) -> o
    boolean isChatNewInit() -> L
    void setChatNewInit(boolean) -> g
    boolean isDiaryNewInit() -> M
    void setDiaryNewInit(boolean) -> h
    boolean isAlbumNewInit() -> N
    void setAlbumNewInit(boolean) -> i
    void setControlDefault() -> O
    void setCouple_ActionMsg(java.lang.String) -> p
    int getScreenWidth() -> P
    void setScreenWidth(int) -> a
    int getScreenHeigh() -> Q
    void setScreenHeigh(int) -> b
    int getAlbumHeight() -> R
    void setAlbumHeight(int) -> c
    boolean isSelectPic() -> S
    void setSelectPic(boolean) -> j
    android.net.Uri getFileUri() -> T
    void setFileUri(android.net.Uri) -> a
com.minus.lovershouse.singleton.SelfInfo -> com.minus.lovershouse.singleton.a:
    java.lang.String account -> a
    java.lang.String pwd -> b
    java.lang.String sex -> c
    java.lang.String nickName -> d
    java.lang.String appearance -> e
    java.lang.String status -> f
    java.lang.String smallName -> g
    java.lang.String target -> h
    java.lang.String headpotoPath -> i
    java.lang.String housestyle -> j
    java.lang.String action -> k
    java.lang.String hudLabel -> l
    boolean isMatch -> m
    boolean mainInit -> n
    boolean online -> o
    com.minus.lovershouse.singleton.SelfInfo getInstance() -> a
    java.lang.String getAccount() -> b
    void setAccount(java.lang.String) -> a
    java.lang.String getPwd() -> c
    void setPwd(java.lang.String) -> b
    java.lang.String getSex() -> d
    void setSex(java.lang.String) -> c
    java.lang.String getNickName() -> e
    void setNickName(java.lang.String) -> d
    java.lang.String getAppearance() -> f
    void setAppearance(java.lang.String) -> e
    java.lang.String getStatus() -> g
    void setStatus(java.lang.String) -> f
    java.lang.String getSmallName() -> h
    void setSmallName(java.lang.String) -> g
    java.lang.String getTarget() -> i
    void setTarget(java.lang.String) -> h
    java.lang.String getHeadpotoPath() -> j
    void setHeadpotoPath(java.lang.String) -> i
    void setAction(java.lang.String) -> j
    void setHudLabel(java.lang.String) -> k
    boolean isMainInit() -> k
    void setMainInit(boolean) -> a
    boolean isOnline() -> l
    void setOnline(boolean) -> b
    boolean isMatch() -> m
    void setMatch(boolean) -> c
    void setInfo(java.lang.String,java.lang.String) -> a
    void setInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void setDefault() -> n
    java.lang.String getHousestyle() -> o
    void setHousestyle(java.lang.String) -> l
com.minus.lovershouse.singleton.SelfInfo$SelfInfoContainer -> com.minus.lovershouse.singleton.a$a:
    com.minus.lovershouse.singleton.SelfInfo instance -> a
    com.minus.lovershouse.singleton.SelfInfo access$0() -> a
com.minus.lovershouse.util.AppManagerUtil -> com.minus.lovershouse.util.a:
    java.lang.String sdState -> a
    java.lang.String DateToStr(java.util.Date) -> a
    java.util.Date StrToDate(java.lang.String) -> a
    java.lang.String getCurDateInServer() -> a
    java.lang.String ConvertToServer(java.lang.String) -> b
    java.lang.String transFormat(java.lang.String) -> c
    java.lang.String transformDisplayChat(java.lang.String) -> d
    java.lang.String transformDisplayDiary(java.lang.String) -> e
    java.lang.String transformDisplayMap(java.lang.String) -> f
    java.lang.String getCurDate() -> b
    java.lang.String getSimpleCurDate() -> c
    android.graphics.Bitmap createBitmapBySize(android.graphics.Bitmap,int,int) -> a
    android.graphics.Bitmap getimage(java.lang.String) -> g
    android.graphics.Bitmap compressImage(android.graphics.Bitmap) -> a
    boolean isFileExist(java.lang.String) -> h
    boolean writeToSD(java.lang.String,android.graphics.Bitmap,java.lang.String) -> a
    android.graphics.Bitmap getDiskBitmap(java.lang.String) -> i
    boolean deleteFile(java.io.File) -> a
    android.graphics.Bitmap toRoundBitmap(android.graphics.Bitmap) -> b
    byte[] readFileSdcardFile(java.lang.String) -> j
    void saveFileToSDCard(java.lang.String,java.lang.String,byte[]) -> a
    long getAmrDuration(java.io.File) -> b
    com.minius.ui.CustomDialog$Builder openAlertDialog(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.view.View$OnClickListener,android.view.View$OnClickListener,boolean) -> a
    void Vibrate(android.app.Activity,long[],boolean) -> a
    android.graphics.Bitmap mergeBitmap(android.graphics.Bitmap,android.graphics.Bitmap,int,int) -> a
    int dip2px(android.content.Context,float) -> a
com.minus.lovershouse.util.AudioRecorder -> com.minus.lovershouse.util.b:
    int SAMPLE_RATE_IN_HZ -> c
    android.media.MediaRecorder recorder -> a
    java.lang.String path -> b
    java.lang.String getAudioPath() -> a
    java.lang.String sanitizePath(java.lang.String) -> a
    void start() -> b
    void stop() -> c
    double getAmplitude() -> d
com.minus.lovershouse.util.BadgeView -> com.minus.lovershouse.util.c:
    android.view.animation.Animation fadeIn -> a
    android.view.animation.Animation fadeOut -> b
    android.content.Context context -> c
    android.view.View target -> d
    int badgePosition -> e
    int badgeMargin -> f
    int badgeColor -> g
    boolean isShown -> h
    android.graphics.drawable.ShapeDrawable badgeBg -> i
    int targetTabIndex -> j
    void setTargetView(android.view.View) -> setTargetView
    void init(android.content.Context,android.view.View,int) -> a
    void applyTo(android.view.View) -> a
    void show() -> a
    void hide(boolean) -> a
    void toggle() -> b
    void toggle(android.view.animation.Animation,android.view.animation.Animation) -> a
    void show(boolean,android.view.animation.Animation) -> a
    void hide(boolean,android.view.animation.Animation) -> b
    void toggle(boolean,android.view.animation.Animation,android.view.animation.Animation) -> a
    android.graphics.drawable.ShapeDrawable getDefaultBackground() -> getDefaultBackground
    void applyLayoutParams() -> c
    android.view.View getTarget() -> getTarget
    boolean isShown() -> isShown
    int getBadgePosition() -> getBadgePosition
    void setBadgePosition(int) -> setBadgePosition
    int getBadgeMargin() -> getBadgeMargin
    void setBadgeMargin(int) -> setBadgeMargin
    int getBadgeBackgroundColor() -> getBadgeBackgroundColor
    void setBadgeBackgroundColor(int) -> setBadgeBackgroundColor
    int dipToPixels(int) -> a
com.minus.lovershouse.util.ChatPicMenuPopup -> com.minus.lovershouse.util.d:
    android.widget.TextView btn_savToPhone -> a
    android.widget.TextView btn_savToAlbum -> b
    android.widget.TextView btn_cancel -> c
    android.view.View mMenuView -> d
    android.view.View access$0(com.minus.lovershouse.util.ChatPicMenuPopup) -> a
com.minus.lovershouse.util.ChatPicMenuPopup$1 -> com.minus.lovershouse.util.e:
    com.minus.lovershouse.util.ChatPicMenuPopup this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.util.ChatPicMenuPopup$2 -> com.minus.lovershouse.util.f:
    com.minus.lovershouse.util.ChatPicMenuPopup this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.minus.lovershouse.util.ExitPopup -> com.minus.lovershouse.util.g:
    android.widget.TextView exitapp -> a
    android.widget.TextView cancelexit -> b
    android.view.View mMenuView -> c
    android.widget.TextView title -> d
    android.view.View access$0(com.minus.lovershouse.util.ExitPopup) -> a
com.minus.lovershouse.util.ExitPopup$1 -> com.minus.lovershouse.util.h:
    com.minus.lovershouse.util.ExitPopup this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.util.ExitPopup$2 -> com.minus.lovershouse.util.i:
    com.minus.lovershouse.util.ExitPopup this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.minus.lovershouse.util.FileUtil -> com.minus.lovershouse.util.j:
    int save_dir -> a
    boolean isSDCardExist() -> a
com.minus.lovershouse.util.RTPullListView -> com.minus.lovershouse.util.RTPullListView:
    android.view.LayoutInflater inflater -> a
    android.widget.LinearLayout headView -> b
    android.widget.TextView tipsTextview -> c
    android.widget.TextView lastUpdatedTextView -> d
    android.widget.ImageView arrowImageView -> e
    android.widget.ProgressBar progressBar -> f
    android.view.animation.RotateAnimation animation -> g
    android.view.animation.RotateAnimation reverseAnimation -> h
    boolean isRecored -> i
    int headContentHeight -> j
    int startY -> k
    int firstItemIndex -> l
    int state -> m
    boolean isBack -> n
    com.minus.lovershouse.util.RTPullListView$OnRefreshListener refreshListener -> o
    boolean isRefreshable -> p
    boolean isPush -> q
    int visibleLastIndex -> r
    int visibleItemCount -> s
    void init(android.content.Context) -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void changeHeaderViewByState() -> b
    void setonRefreshListener(com.minus.lovershouse.util.RTPullListView$OnRefreshListener) -> setonRefreshListener
    void onRefreshComplete() -> a
    void onRefresh() -> c
    void measureView(android.view.View) -> a
    void setAdapter(android.widget.BaseAdapter) -> setAdapter
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.minus.lovershouse.util.RTPullListView$OnRefreshListener -> com.minus.lovershouse.util.RTPullListView$a:
    void onRefresh() -> a
com.minus.lovershouse.util.ResizeLayout -> com.minus.lovershouse.util.ResizeLayout:
    int count -> a
    int count1 -> b
    int count2 -> c
    android.os.Handler uiHandler -> d
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
com.minus.lovershouse.util.ResizeLayout$1 -> com.minus.lovershouse.util.k:
    com.minus.lovershouse.util.ResizeLayout this$0 -> a
    int val$oldh -> b
    int val$h -> c
    void run() -> run
com.minus.lovershouse.util.RoundedImageView -> com.minus.lovershouse.util.RoundedImageView:
    void onDraw(android.graphics.Canvas) -> onDraw
    android.graphics.Bitmap getCroppedBitmap(android.graphics.Bitmap,int) -> a
com.minus.lovershouse.util.SelectPicPopup -> com.minus.lovershouse.util.l:
    android.widget.TextView btn_take_photo -> a
    android.widget.TextView btn_pick_photo -> b
    android.widget.TextView btn_cancel -> c
    android.widget.TextView title -> d
    android.view.View mMenuView -> e
    void setTitle(java.lang.String) -> a
    boolean checkCameraHardware(android.content.Context) -> a
    android.view.View access$0(com.minus.lovershouse.util.SelectPicPopup) -> a
com.minus.lovershouse.util.SelectPicPopup$1 -> com.minus.lovershouse.util.m:
    com.minus.lovershouse.util.SelectPicPopup this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.lovershouse.util.SelectPicPopup$2 -> com.minus.lovershouse.util.n:
    com.minus.lovershouse.util.SelectPicPopup this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.minus.map.MapActivity -> com.minus.map.MapActivity:
    android.widget.ImageView backImgBtn -> a
    android.widget.ImageView refreshImagBtn -> b
    int[] DefHeadimageIds -> c
    int[] MapBackground -> d
    com.amap.api.maps.AMap aMap -> e
    com.amap.api.maps.MapView mapView -> f
    com.amap.api.maps.model.Marker marker2 -> g
    java.lang.String curTime -> h
    double targetLat -> i
    double targetLog -> j
    float myLat -> k
    float myLog -> n
    android.graphics.Bitmap myHeadBm -> o
    android.graphics.Bitmap tarHeadBm -> p
    com.amap.api.maps.LocationSource$OnLocationChangedListener mListener -> q
    com.amap.api.location.LocationManagerProxy mAMapLocationManager -> r
    android.widget.ImageView imgSource1 -> s
    com.minus.lovershouse.util.RoundedImageView imgSource2 -> t
    android.widget.RelativeLayout contentLayout -> u
    android.widget.RelativeLayout contentLayout_2 -> v
    android.widget.ImageView imgSource2_1 -> w
    com.minus.lovershouse.util.RoundedImageView imgSource2_2 -> x
    com.minius.ui.CustomDialog$Builder ibuilder -> y
    android.view.View$OnClickListener gpsHelp -> z
    com.minus.map.MapActivity$MyReceiver receiver -> A
    com.minus.map.MapActivity$MyHandler mHandler -> B
    void onCreate(android.os.Bundle) -> onCreate
    void initMyheadPic() -> a
    void initTarheadPic() -> b
    void init() -> c
    android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable) -> a
    void setUpMap() -> d
    void onResume() -> onResume
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onDestroy() -> onDestroy
    void drawMarkers(double,double,double,double) -> a
    boolean onMarkerClick(com.amap.api.maps.model.Marker) -> onMarkerClick
    void jumpPoint(com.amap.api.maps.model.Marker) -> a
    void onInfoWindowClick(com.amap.api.maps.model.Marker) -> onInfoWindowClick
    void onMarkerDrag(com.amap.api.maps.model.Marker) -> onMarkerDrag
    void onMarkerDragEnd(com.amap.api.maps.model.Marker) -> onMarkerDragEnd
    void onMarkerDragStart(com.amap.api.maps.model.Marker) -> onMarkerDragStart
    void onMapLoaded() -> onMapLoaded
    android.view.View getInfoContents(com.amap.api.maps.model.Marker) -> getInfoContents
    android.view.View getInfoWindow(com.amap.api.maps.model.Marker) -> getInfoWindow
    void render(com.amap.api.maps.model.Marker,android.view.View) -> a
    void onClick(android.view.View) -> onClick
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
    void activate(com.amap.api.maps.LocationSource$OnLocationChangedListener) -> activate
    void deactivate() -> deactivate
    void processResponse(java.lang.String) -> a
    com.minius.ui.CustomDialog$Builder access$0(com.minus.map.MapActivity) -> a
    com.minus.map.MapActivity$MyHandler access$1(com.minus.map.MapActivity) -> b
    double access$2(com.minus.map.MapActivity) -> c
    double access$3(com.minus.map.MapActivity) -> d
com.minus.map.MapActivity$1 -> com.minus.map.a:
    com.minus.map.MapActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.map.MapActivity$2 -> com.minus.map.b:
    com.minus.map.MapActivity this$0 -> a
    long val$start -> b
    android.view.animation.Interpolator val$interpolator -> c
    com.amap.api.maps.model.LatLng val$startLatLng -> d
    com.amap.api.maps.model.Marker val$marker -> e
    android.os.Handler val$handler -> f
    void run() -> run
com.minus.map.MapActivity$MyHandler -> com.minus.map.MapActivity$MyHandler:
    java.lang.ref.WeakReference mActivity -> a
    void handleMessage(android.os.Message) -> handleMessage
com.minus.map.MapActivity$MyReceiver -> com.minus.map.MapActivity$a:
    com.minus.map.MapActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.minus.sql_interface.Database -> com.minus.sql_interface.Database:
    net.tsz.afinal.FinalDb db -> db
    android.content.Context context -> context
    int dbVersion -> dbVersion
    boolean isDebug -> isDebug
    java.lang.String dbName -> dbName
    void closeDatabase() -> closeDatabase
    boolean initDatabase(java.lang.String) -> initDatabase
    boolean deleteUserTable() -> deleteUserTable
    boolean deleteTargetTable() -> deleteTargetTable
    boolean deleteDiaryTable() -> deleteDiaryTable
    boolean deleteAlarmClockTable() -> deleteAlarmClockTable
    boolean deleteChatTable() -> deleteChatTable
    boolean deleteCalendarTable() -> deleteCalendarTable
    boolean deleteAll(java.lang.String) -> deleteAll
    java.lang.Boolean userTableEmpty() -> userTableEmpty
    java.lang.Boolean emptyUserTable(java.lang.String) -> emptyUserTable
    com.minus.table.UserTable getSelfInfo() -> getSelfInfo
    java.lang.String getHeadPhoto(java.lang.String) -> getHeadPhoto
    boolean addSelfInfo(java.lang.String,java.lang.String,java.lang.String) -> addSelfInfo
    boolean updateSelfInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateSelfInfo
    boolean updateSelfPassword(java.lang.String,java.lang.String) -> updateSelfPassword
    boolean updateSelfSex(java.lang.String,java.lang.String) -> updateSelfSex
    boolean updateSelfBigname(java.lang.String,java.lang.String) -> updateSelfBigname
    boolean updateSelfAppearance(java.lang.String,java.lang.String) -> updateSelfAppearance
    boolean updateSelfStatus(java.lang.String,java.lang.String) -> updateSelfStatus
    boolean updateSelfSmallname(java.lang.String,java.lang.String) -> updateSelfSmallname
    boolean updateSelfHeadPhoto(java.lang.String,java.lang.String) -> updateSelfHeadPhoto
    boolean appendSelfHeadPhoto(java.lang.String,java.lang.String) -> appendSelfHeadPhoto
    com.minus.table.TargetTable getTargetInfo() -> getTargetInfo
    java.lang.String getTargetHeadPhoto(java.lang.String) -> getTargetHeadPhoto
    boolean addTargetInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addTargetInfo
    boolean updateTargetBigname(java.lang.String,java.lang.String) -> updateTargetBigname
    boolean updateTargetAppearance(java.lang.String,java.lang.String) -> updateTargetAppearance
    boolean updateTargetStatus(java.lang.String,java.lang.String) -> updateTargetStatus
    boolean updateTargetSmallname(java.lang.String,java.lang.String) -> updateTargetSmallname
    boolean updateTargetHeadPhoto(java.lang.String,java.lang.String) -> updateTargetHeadPhoto
    boolean addDiary(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> addDiary
    boolean modifyDiary(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> modifyDiary
    boolean removeDiary(java.lang.String,java.lang.String) -> removeDiary
    boolean changeNewDiary(java.lang.String,java.lang.String,int) -> changeNewDiary
    boolean isExistTheDiaryItemWithAccount(java.lang.String,java.lang.String) -> isExistTheDiaryItemWithAccount
    java.util.List getDiary() -> getDiary
    java.util.List getWaitForRemoveDiary() -> getWaitForRemoveDiary
    java.util.List getWaitForAddDiary() -> getWaitForAddDiary
    java.util.List getWaitForModifyDiary() -> getWaitForModifyDiary
    java.util.List getDiaryDraft() -> getDiaryDraft
    java.util.List getAllAction() -> getAllAction
    java.lang.String getAddActionId() -> getAddActionId
    boolean addCustomAction(java.lang.String,java.lang.String,java.lang.String) -> addCustomAction
    boolean updateActionStatus(java.lang.String,java.lang.String) -> updateActionStatus
    boolean updateActionContent(java.lang.String,java.lang.String) -> updateActionContent
    boolean updateWholeAction(java.lang.String,java.lang.String,java.lang.String) -> updateWholeAction
    boolean initActionTable() -> initActionTable
    boolean addChat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String) -> addChat
    boolean modifyChatStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> modifyChatStatus
    boolean modifyChatStatus(java.lang.String,java.lang.String,java.lang.String) -> modifyChatStatus
    boolean removeChat(java.lang.String,java.lang.String) -> removeChat
    java.lang.String getLastMsgDate() -> getLastMsgDate
    java.util.List getChat() -> getChat
    java.util.List getSendingChat() -> getSendingChat
    java.util.List getLastChat(int,int) -> getLastChat
    java.util.List getChatWithAccount(java.lang.String,java.lang.String) -> getChatWithAccount
    boolean addCalendar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addCalendar
    boolean modifyCalendar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> modifyCalendar
    boolean removeCalendar(java.lang.String) -> removeCalendar
    boolean modifyCalendarServerState(java.lang.String,java.lang.String) -> modifyCalendarServerState
    java.util.List getWaitForHandleCalendar() -> getWaitForHandleCalendar
    com.minus.table.CalendarTable getCalendarTable(java.lang.String) -> getCalendarTable
    java.util.List getCalendarTables() -> getCalendarTables
    void clearAllCalendar() -> clearAllCalendar
    boolean saveAlbumPicture(java.lang.String,java.lang.String,java.lang.String) -> saveAlbumPicture
    boolean deleteAlbumPicture(java.lang.String) -> deleteAlbumPicture
    java.lang.String getImageFilePathWithInitDate(java.lang.String) -> getImageFilePathWithInitDate
    java.util.List FinePicForDelete() -> FinePicForDelete
    void deletePicAccordToKey(java.lang.String) -> deletePicAccordToKey
    void deleteAllPicture() -> deleteAllPicture
    void SetStatusForPic(java.lang.String,int) -> SetStatusForPic
    java.util.List getAllPicture() -> getAllPicture
    boolean isThePicInDatabase(java.lang.String) -> isThePicInDatabase
    java.lang.String getMotion(java.lang.String) -> getMotion
    java.lang.String getFriends(java.lang.String) -> getFriends
    java.lang.String getWitness(java.lang.String) -> getWitness
    java.lang.String getHouseStyle(java.lang.String) -> getHouseStyle
    java.lang.String getLightState(java.lang.String) -> getLightState
    java.lang.String getFirstPicture(java.lang.String) -> getFirstPicture
    boolean addCommonInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addCommonInfo
    boolean updateMotion(java.lang.String,java.lang.String) -> updateMotion
    boolean updateFriends(java.lang.String,java.lang.String) -> updateFriends
    boolean updateWitness(java.lang.String,java.lang.String) -> updateWitness
    boolean updateHouseStyle(java.lang.String,java.lang.String) -> updateHouseStyle
    boolean updateLightState(java.lang.String,java.lang.String) -> updateLightState
    boolean updateFirstPicture(java.lang.String,java.lang.String) -> updateFirstPicture
    void clearTemp() -> clearTemp
    void saveHeadPhotoToTemp(java.lang.String,java.lang.String) -> saveHeadPhotoToTemp
    java.lang.String readHeadPhotoFromTemp(java.lang.String) -> readHeadPhotoFromTemp
    com.minus.sql_interface.Database getInstance(android.content.Context) -> getInstance
    net.tsz.afinal.FinalDb getFinalDb() -> getFinalDb
    void writeToSD(java.lang.String,android.graphics.Bitmap,java.lang.String) -> writeToSD
    android.graphics.Bitmap getDiskBitmap(java.lang.String) -> getDiskBitmap
    boolean updateStateFromServer(java.lang.String,java.lang.String,java.lang.String) -> updateStateFromServer
    android.content.Context access$0() -> access$0
com.minus.sql_interface.Database$DatabaseContainer -> com.minus.sql_interface.Database$DatabaseContainer:
    com.minus.sql_interface.Database instance -> instance
    com.minus.sql_interface.Database access$0() -> access$0
com.minus.sql_interface.DatabaseDAO -> com.minus.sql_interface.DatabaseDAO:
    void closeDatabase() -> closeDatabase
    boolean deleteUserTable() -> deleteUserTable
    boolean deleteTargetTable() -> deleteTargetTable
    boolean deleteDiaryTable() -> deleteDiaryTable
    boolean deleteAlarmClockTable() -> deleteAlarmClockTable
    boolean deleteChatTable() -> deleteChatTable
    boolean deleteCalendarTable() -> deleteCalendarTable
    boolean deleteAll(java.lang.String) -> deleteAll
    java.lang.Boolean userTableEmpty() -> userTableEmpty
    java.lang.Boolean emptyUserTable(java.lang.String) -> emptyUserTable
    com.minus.table.UserTable getSelfInfo() -> getSelfInfo
    java.lang.String getHeadPhoto(java.lang.String) -> getHeadPhoto
    boolean addSelfInfo(java.lang.String,java.lang.String,java.lang.String) -> addSelfInfo
    boolean updateSelfInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateSelfInfo
    boolean updateSelfPassword(java.lang.String,java.lang.String) -> updateSelfPassword
    boolean updateSelfSex(java.lang.String,java.lang.String) -> updateSelfSex
    boolean updateSelfBigname(java.lang.String,java.lang.String) -> updateSelfBigname
    boolean updateSelfAppearance(java.lang.String,java.lang.String) -> updateSelfAppearance
    boolean updateSelfStatus(java.lang.String,java.lang.String) -> updateSelfStatus
    boolean updateSelfSmallname(java.lang.String,java.lang.String) -> updateSelfSmallname
    boolean updateSelfHeadPhoto(java.lang.String,java.lang.String) -> updateSelfHeadPhoto
    boolean appendSelfHeadPhoto(java.lang.String,java.lang.String) -> appendSelfHeadPhoto
    com.minus.table.TargetTable getTargetInfo() -> getTargetInfo
    java.lang.String getTargetHeadPhoto(java.lang.String) -> getTargetHeadPhoto
    boolean addTargetInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addTargetInfo
    boolean updateTargetBigname(java.lang.String,java.lang.String) -> updateTargetBigname
    boolean updateTargetAppearance(java.lang.String,java.lang.String) -> updateTargetAppearance
    boolean updateTargetStatus(java.lang.String,java.lang.String) -> updateTargetStatus
    boolean updateTargetSmallname(java.lang.String,java.lang.String) -> updateTargetSmallname
    boolean updateTargetHeadPhoto(java.lang.String,java.lang.String) -> updateTargetHeadPhoto
    boolean addDiary(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> addDiary
    boolean updateStateFromServer(java.lang.String,java.lang.String,java.lang.String) -> updateStateFromServer
    boolean modifyDiary(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> modifyDiary
    boolean removeDiary(java.lang.String,java.lang.String) -> removeDiary
    boolean changeNewDiary(java.lang.String,java.lang.String,int) -> changeNewDiary
    boolean isExistTheDiaryItemWithAccount(java.lang.String,java.lang.String) -> isExistTheDiaryItemWithAccount
    java.util.List getDiary() -> getDiary
    java.util.List getWaitForRemoveDiary() -> getWaitForRemoveDiary
    java.util.List getWaitForAddDiary() -> getWaitForAddDiary
    java.util.List getWaitForModifyDiary() -> getWaitForModifyDiary
    java.util.List getDiaryDraft() -> getDiaryDraft
    java.util.List getAllAction() -> getAllAction
    java.lang.String getAddActionId() -> getAddActionId
    boolean addCustomAction(java.lang.String,java.lang.String,java.lang.String) -> addCustomAction
    boolean updateActionStatus(java.lang.String,java.lang.String) -> updateActionStatus
    boolean updateActionContent(java.lang.String,java.lang.String) -> updateActionContent
    boolean updateWholeAction(java.lang.String,java.lang.String,java.lang.String) -> updateWholeAction
    boolean initActionTable() -> initActionTable
    boolean addChat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String) -> addChat
    boolean modifyChatStatus(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> modifyChatStatus
    boolean modifyChatStatus(java.lang.String,java.lang.String,java.lang.String) -> modifyChatStatus
    boolean removeChat(java.lang.String,java.lang.String) -> removeChat
    java.lang.String getLastMsgDate() -> getLastMsgDate
    java.util.List getChat() -> getChat
    java.util.List getSendingChat() -> getSendingChat
    java.util.List getLastChat(int,int) -> getLastChat
    java.util.List getChatWithAccount(java.lang.String,java.lang.String) -> getChatWithAccount
    boolean addCalendar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addCalendar
    boolean modifyCalendar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> modifyCalendar
    boolean removeCalendar(java.lang.String) -> removeCalendar
    boolean modifyCalendarServerState(java.lang.String,java.lang.String) -> modifyCalendarServerState
    com.minus.table.CalendarTable getCalendarTable(java.lang.String) -> getCalendarTable
    java.util.List getCalendarTables() -> getCalendarTables
    boolean saveAlbumPicture(java.lang.String,java.lang.String,java.lang.String) -> saveAlbumPicture
    boolean deleteAlbumPicture(java.lang.String) -> deleteAlbumPicture
    java.util.List FinePicForDelete() -> FinePicForDelete
    void deletePicAccordToKey(java.lang.String) -> deletePicAccordToKey
    void deleteAllPicture() -> deleteAllPicture
    void SetStatusForPic(java.lang.String,int) -> SetStatusForPic
    java.util.List getAllPicture() -> getAllPicture
    boolean isThePicInDatabase(java.lang.String) -> isThePicInDatabase
    java.lang.String getMotion(java.lang.String) -> getMotion
    java.lang.String getFriends(java.lang.String) -> getFriends
    java.lang.String getWitness(java.lang.String) -> getWitness
    java.lang.String getHouseStyle(java.lang.String) -> getHouseStyle
    java.lang.String getLightState(java.lang.String) -> getLightState
    java.lang.String getFirstPicture(java.lang.String) -> getFirstPicture
    boolean addCommonInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addCommonInfo
    boolean updateMotion(java.lang.String,java.lang.String) -> updateMotion
    boolean updateFriends(java.lang.String,java.lang.String) -> updateFriends
    boolean updateWitness(java.lang.String,java.lang.String) -> updateWitness
    boolean updateHouseStyle(java.lang.String,java.lang.String) -> updateHouseStyle
    boolean updateLightState(java.lang.String,java.lang.String) -> updateLightState
    boolean updateFirstPicture(java.lang.String,java.lang.String) -> updateFirstPicture
    void clearTemp() -> clearTemp
    void saveHeadPhotoToTemp(java.lang.String,java.lang.String) -> saveHeadPhotoToTemp
    java.lang.String readHeadPhotoFromTemp(java.lang.String) -> readHeadPhotoFromTemp
    boolean initDatabase(java.lang.String) -> initDatabase
    net.tsz.afinal.FinalDb getFinalDb() -> getFinalDb
    void writeToSD(java.lang.String,android.graphics.Bitmap,java.lang.String) -> writeToSD
    android.graphics.Bitmap getDiskBitmap(java.lang.String) -> getDiskBitmap
com.minus.table.AlarmClockTable -> com.minus.table.AlarmClockTable:
    java.lang.String initdate -> initdate
    java.lang.String account -> account
    java.lang.String color -> color
    java.lang.String content -> content
    java.lang.String forwho -> forwho
    java.lang.String whattime -> whattime
    void setAccount(java.lang.String) -> setAccount
    java.lang.String getAccount() -> getAccount
    void setInitdate(java.lang.String) -> setInitdate
    java.lang.String getInitdate() -> getInitdate
    void setColor(java.lang.String) -> setColor
    java.lang.String getColor() -> getColor
    void setContent(java.lang.String) -> setContent
    java.lang.String getContent() -> getContent
    void setForwho(java.lang.String) -> setForwho
    java.lang.String getForwho() -> getForwho
    void setWhattime(java.lang.String) -> setWhattime
    java.lang.String getWhattime() -> getWhattime
com.minus.table.BasicsettingTable -> com.minus.table.BasicsettingTable:
    java.lang.String account -> account
    boolean voice -> voice
    boolean viberate -> viberate
    int voiceOrviberate -> voiceOrviberate
    boolean isProtected -> isProtected
    boolean num -> num
    boolean graph -> graph
    java.lang.String numPass -> numPass
    void setAccount(java.lang.String) -> setAccount
    java.lang.String getAccount() -> getAccount
    boolean isVoice() -> isVoice
    void setVoice(boolean) -> setVoice
    boolean isViberate() -> isViberate
    int getVoiceOrviberate() -> getVoiceOrviberate
    void setVoiceOrviberate(int) -> setVoiceOrviberate
    void setViberate(boolean) -> setViberate
    boolean isProtected() -> isProtected
    void setProtected(boolean) -> setProtected
    boolean isNum() -> isNum
    void setNum(boolean) -> setNum
    boolean isGraph() -> isGraph
    void setGraph(boolean) -> setGraph
    java.lang.String getNumPass() -> getNumPass
    void setNumPass(java.lang.String) -> setNumPass
com.minus.table.CalendarTable -> com.minus.table.CalendarTable:
    java.lang.String initDate -> initDate
    java.lang.String editDate -> editDate
    java.lang.String memoDate -> memoDate
    java.lang.String promptPolicy -> promptPolicy
    java.lang.String title -> title
    java.lang.String serverState -> serverState
    void setInitDate(java.lang.String) -> setInitDate
    java.lang.String getInitDate() -> getInitDate
    void setEditDate(java.lang.String) -> setEditDate
    java.lang.String getEditDate() -> getEditDate
    void setMemoDate(java.lang.String) -> setMemoDate
    java.lang.String getMemoDate() -> getMemoDate
    void setPromptPolicy(java.lang.String) -> setPromptPolicy
    java.lang.String getPromptPolicy() -> getPromptPolicy
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    java.lang.String getServerState() -> getServerState
    void setServerState(java.lang.String) -> setServerState
com.minus.table.ChatTable -> com.minus.table.ChatTable:
    java.lang.String initdate -> initdate
    java.lang.String account -> account
    java.lang.String status -> status
    java.lang.String message -> message
    int msgtype -> msgtype
    java.lang.String recordTime -> recordTime
    void setAccount(java.lang.String) -> setAccount
    java.lang.String getAccount() -> getAccount
    void setInitdate(java.lang.String) -> setInitdate
    java.lang.String getInitdate() -> getInitdate
    void setStatus(java.lang.String) -> setStatus
    java.lang.String getStatus() -> getStatus
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getMessage() -> getMessage
    int getMsgtype() -> getMsgtype
    void setMsgtype(int) -> setMsgtype
    java.lang.String getRecordTime() -> getRecordTime
    void setRecordTime(java.lang.String) -> setRecordTime
    void same(com.minus.table.ChatTable) -> same
com.minus.table.CommonTable -> com.minus.table.CommonTable:
    java.lang.String account -> account
    java.lang.String motion -> motion
    java.lang.String friends -> friends
    java.lang.String witness -> witness
    java.lang.String houseStyle -> houseStyle
    java.lang.String lightState -> lightState
    java.lang.String firstPicture -> firstPicture
    void setAccount(java.lang.String) -> setAccount
    java.lang.String getAccount() -> getAccount
    java.lang.String getMotion() -> getMotion
    void setMotion(java.lang.String) -> setMotion
    java.lang.String getFriends() -> getFriends
    void setFriends(java.lang.String) -> setFriends
    java.lang.String getWitness() -> getWitness
    void setWitness(java.lang.String) -> setWitness
    java.lang.String getHouseStyle() -> getHouseStyle
    void setHouseStyle(java.lang.String) -> setHouseStyle
    java.lang.String getLightState() -> getLightState
    void setLightState(java.lang.String) -> setLightState
    java.lang.String getFirstPicture() -> getFirstPicture
    void setFirstPicture(java.lang.String) -> setFirstPicture
    void same(com.minus.table.CommonTable) -> same
com.minus.table.CustomActionTable -> com.minus.table.CustomActionTable:
    java.lang.String typeID -> typeID
    java.lang.String content -> content
    java.lang.String status -> status
    java.lang.String getTypeID() -> getTypeID
    void setTypeID(java.lang.String) -> setTypeID
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
com.minus.table.DiaryTable -> com.minus.table.DiaryTable:
    int id -> id
    java.lang.String initdate -> initdate
    java.lang.String author -> author
    int isnew -> isnew
    java.lang.String title -> title
    java.lang.String content -> content
    java.lang.String editdate -> editdate
    java.lang.String serverState -> serverState
    int getId() -> getId
    void setId(int) -> setId
    void setServerState(java.lang.String) -> setServerState
    java.lang.String getServerState() -> getServerState
    void setAuthor(java.lang.String) -> setAuthor
    java.lang.String getAuthor() -> getAuthor
    void setInitdate(java.lang.String) -> setInitdate
    java.lang.String getInitdate() -> getInitdate
    void setIsnew(int) -> setIsnew
    int getIsnew() -> getIsnew
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setContent(java.lang.String) -> setContent
    java.lang.String getContent() -> getContent
    void setEditdate(java.lang.String) -> setEditdate
    java.lang.String getEditdate() -> getEditdate
    void same(com.minus.table.DiaryTable) -> same
com.minus.table.GalleryTable -> com.minus.table.GalleryTable:
    java.lang.String lastModefyTime -> lastModefyTime
    java.lang.String path -> path
    java.lang.String oriPath -> oriPath
    int deleteStatus -> deleteStatus
    java.lang.String getLastModefyTime() -> getLastModefyTime
    void setLastModefyTime(java.lang.String) -> setLastModefyTime
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    java.lang.String getOriPath() -> getOriPath
    void setOriPath(java.lang.String) -> setOriPath
    int getDeleteStatus() -> getDeleteStatus
    void setDeleteStatus(int) -> setDeleteStatus
com.minus.table.LASTMODIFYTIME -> com.minus.table.LASTMODIFYTIME:
    java.lang.String module -> module
    java.lang.String date -> date
    java.lang.String getModule() -> getModule
    void setModule(java.lang.String) -> setModule
    java.lang.String getDate() -> getDate
    void setDate(java.lang.String) -> setDate
com.minus.table.TargetTable -> com.minus.table.TargetTable:
    java.lang.String account -> account
    java.lang.String sex -> sex
    java.lang.String bigName -> bigName
    java.lang.String appearance -> appearance
    java.lang.String status -> status
    java.lang.String smallname -> smallname
    java.lang.String target -> target
    java.lang.String headphoto -> headphoto
    void setAccount(java.lang.String) -> setAccount
    java.lang.String getAccount() -> getAccount
    java.lang.String getSex() -> getSex
    void setSex(java.lang.String) -> setSex
    java.lang.String getBigName() -> getBigName
    void setBigName(java.lang.String) -> setBigName
    java.lang.String getAppearance() -> getAppearance
    void setAppearance(java.lang.String) -> setAppearance
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    java.lang.String getSmallname() -> getSmallname
    void setSmallname(java.lang.String) -> setSmallname
    java.lang.String getTarget() -> getTarget
    void setTarget(java.lang.String) -> setTarget
    void setHeadphoto(java.lang.String) -> setHeadphoto
    java.lang.String getHeadphoto() -> getHeadphoto
    void same(com.minus.table.TargetTable) -> same
com.minus.table.Temp -> com.minus.table.Temp:
    java.lang.String account -> account
    java.lang.String headphoto -> headphoto
    void setAccount(java.lang.String) -> setAccount
    java.lang.String getAccount() -> getAccount
    void setHeadphoto(java.lang.String) -> setHeadphoto
    java.lang.String getHeadphoto() -> getHeadphoto
    void same(com.minus.table.Temp) -> same
com.minus.table.UserTable -> com.minus.table.UserTable:
    java.lang.String account -> account
    java.lang.String password -> password
    java.lang.String sex -> sex
    java.lang.String bigname -> bigname
    java.lang.String appearance -> appearance
    java.lang.String status -> status
    java.lang.String smallname -> smallname
    java.lang.String target -> target
    java.lang.String headphoto -> headphoto
    void setAccount(java.lang.String) -> setAccount
    java.lang.String getAccount() -> getAccount
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getPassword() -> getPassword
    java.lang.String getSex() -> getSex
    void setSex(java.lang.String) -> setSex
    java.lang.String getBigname() -> getBigname
    void setBigname(java.lang.String) -> setBigname
    java.lang.String getAppearance() -> getAppearance
    void setAppearance(java.lang.String) -> setAppearance
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    java.lang.String getSmallname() -> getSmallname
    void setSmallname(java.lang.String) -> setSmallname
    java.lang.String getTarget() -> getTarget
    void setTarget(java.lang.String) -> setTarget
    void setHeadphoto(java.lang.String) -> setHeadphoto
    java.lang.String getHeadphoto() -> getHeadphoto
    void same(com.minus.table.UserTable) -> same
com.minus.weather.ParseBaiDu_Xml -> com.minus.weather.a:
    android.content.Context context -> a
    java.io.InputStream input -> c
    int dateFlag -> d
    int weatherFlag -> e
    int tempFlag -> f
    java.lang.String nodeName -> g
    com.minus.weather.WeatherTable weatherTable -> b
    java.lang.String name -> h
    java.lang.String DayChanged(java.lang.String) -> a
    java.lang.String DateChanged(java.lang.String,boolean) -> a
    boolean getWeatherInfos() -> a
com.minus.weather.WeatherActivity -> com.minus.weather.WeatherActivity:
    com.amap.api.location.LocationManagerProxy mAMapLocManager -> d
    com.amap.api.location.AMapLocation aMapLocation -> e
    android.os.Handler locationHandler -> f
    android.widget.ImageView backButton -> g
    android.widget.ImageView myHeadphoto -> h
    android.widget.ImageView targetHeadphoto -> i
    android.widget.TextView myTodayCity -> j
    android.widget.TextView targetCity -> k
    android.widget.TextView myTodayTemper -> n
    android.widget.TextView myNextdayTemper -> o
    android.widget.TextView myNext2datTemper -> p
    android.widget.TextView targetTodayTemper -> q
    android.widget.TextView targetNextdayTemper -> r
    android.widget.TextView targetNext2datTemper -> s
    android.widget.TextView myTodayDate -> t
    android.widget.TextView myNextdayDate -> u
    android.widget.TextView myNext2datDate -> v
    android.widget.TextView targetTodayDate -> w
    android.widget.TextView targetNextdayDate -> x
    android.widget.TextView targetNext2datDate -> y
    android.widget.ImageView myTodayWeather -> z
    android.widget.ImageView myNextdayWeather -> A
    android.widget.ImageView myNext2dayWeather -> B
    android.widget.ImageView targetTodayWeather -> C
    android.widget.ImageView targetNextdayWeather -> D
    android.widget.ImageView targetNext2dayWeather -> E
    android.widget.TextView targetTodayWeek -> F
    com.minus.weather.WeatherUtils weatherUtils -> G
    java.lang.String myLocation -> H
    java.lang.String myAcc -> a
    double myLat -> b
    double myLng -> c
    java.lang.String targetLocation -> I
    int[] DefHeadimageIds -> J
    com.amap.api.services.geocoder.GeocodeSearch geocoderSearch -> K
    com.minius.ui.ProgressHUD waitingHUD -> L
    com.minus.weather.WeatherActivity$MyReceiver receiver -> M
    com.minus.weather.WeatherActivity$MyHandler mHandler -> N
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void startReadMyWeather() -> a
    void startReadTarWeather() -> b
    void showProgressHUD(java.lang.String) -> a
    void stopLocation() -> g
    void LoadHeadphoto() -> c
    void setMyLocation(java.lang.String,java.lang.String) -> a
    void setTarLocation(java.lang.String) -> b
    void handleGetMyWeatherSucc() -> d
    void handleGetTarWeatherSucc() -> e
    void initView() -> f
    void processResponse(java.lang.String) -> c
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void run() -> run
    void onLocationChanged(com.amap.api.location.AMapLocation) -> onLocationChanged
    void onGeocodeSearched(com.amap.api.services.geocoder.GeocodeResult,int) -> onGeocodeSearched
    void onRegeocodeSearched(com.amap.api.services.geocoder.RegeocodeResult,int) -> onRegeocodeSearched
    com.minus.weather.WeatherActivity$MyHandler access$0(com.minus.weather.WeatherActivity) -> a
    com.minius.ui.ProgressHUD access$1(com.minus.weather.WeatherActivity) -> b
    com.minus.weather.WeatherUtils access$2(com.minus.weather.WeatherActivity) -> c
    java.lang.String access$3(com.minus.weather.WeatherActivity) -> d
    java.lang.String access$4(com.minus.weather.WeatherActivity) -> e
com.minus.weather.WeatherActivity$1 -> com.minus.weather.b:
    com.minus.weather.WeatherActivity this$0 -> a
    void run() -> run
com.minus.weather.WeatherActivity$2 -> com.minus.weather.c:
    com.minus.weather.WeatherActivity this$0 -> a
    void run() -> run
com.minus.weather.WeatherActivity$3 -> com.minus.weather.d:
    com.minus.weather.WeatherActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.minus.weather.WeatherActivity$MyHandler -> com.minus.weather.WeatherActivity$MyHandler:
    java.lang.ref.WeakReference mActivity -> a
    com.minus.weather.WeatherActivity this$0 -> b
    void handleMessage(android.os.Message) -> handleMessage
com.minus.weather.WeatherActivity$MyReceiver -> com.minus.weather.WeatherActivity$a:
    com.minus.weather.WeatherActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.minus.weather.WeatherTable -> com.minus.weather.e:
    java.lang.String MyTodayCode -> a
    java.lang.String MyTodayText -> b
    java.lang.String MyTodayDate -> c
    java.lang.String TargetTodayDay -> d
    java.lang.String MyTodayTemp -> e
    java.lang.String MyNextdayCode -> f
    java.lang.String MyNextdayText -> g
    java.lang.String MyNextdayDate -> h
    java.lang.String MyNextdayTemp -> i
    java.lang.String MyNext2dayCode -> j
    java.lang.String MyNext2dayText -> k
    java.lang.String MyNext2dayDate -> l
    java.lang.String MyNext2dayTemp -> m
    java.lang.String TargetTodayCode -> n
    java.lang.String TargetTodayText -> o
    java.lang.String TargetTodayDate -> p
    java.lang.String TargetTodayTemp -> q
    java.lang.String TargetNextdayCode -> r
    java.lang.String TargetNextdayText -> s
    java.lang.String TargetNextdayDate -> t
    java.lang.String TargetNextdayTemp -> u
    java.lang.String TargetNext2dayCode -> v
    java.lang.String TargetNext2dayText -> w
    java.lang.String TargetNext2dayDate -> x
    java.lang.String TargetNext2dayTemp -> y
    java.lang.String getMyTodayCode() -> a
    void setMyTodayCode(java.lang.String) -> a
    java.lang.String getMyTodayDate() -> b
    void setMyTodayDate(java.lang.String) -> b
    java.lang.String getTargetTodayDay() -> c
    void setTargetTodayDay(java.lang.String) -> c
    java.lang.String getMyTodayTemp() -> d
    void setMyTodayTemp(java.lang.String) -> d
    java.lang.String getMyNextdayCode() -> e
    void setMyNextdayCode(java.lang.String) -> e
    java.lang.String getMyNextdayDate() -> f
    void setMyNextdayDate(java.lang.String) -> f
    java.lang.String getMyNextdayTemp() -> g
    void setMyNextdayTemp(java.lang.String) -> g
    java.lang.String getMyNext2dayCode() -> h
    void setMyNext2dayCode(java.lang.String) -> h
    java.lang.String getMyNext2dayDate() -> i
    void setMyNext2dayDate(java.lang.String) -> i
    java.lang.String getMyNext2dayTemp() -> j
    void setMyNext2dayTemp(java.lang.String) -> j
    java.lang.String getTargetTodayCode() -> k
    void setTargetTodayCode(java.lang.String) -> k
    java.lang.String getTargetTodayDate() -> l
    void setTargetTodayDate(java.lang.String) -> l
    java.lang.String getTargetTodayTemp() -> m
    void setTargetTodayTemp(java.lang.String) -> m
    java.lang.String getTargetNextdayCode() -> n
    void setTargetNextdayCode(java.lang.String) -> n
    java.lang.String getTargetNextdayDate() -> o
    void setTargetNextdayDate(java.lang.String) -> o
    java.lang.String getTargetNextdayTemp() -> p
    void setTargetNextdayTemp(java.lang.String) -> p
    java.lang.String getTargetNext2dayCode() -> q
    void setTargetNext2dayCode(java.lang.String) -> q
    java.lang.String getTargetNext2dayDate() -> r
    void setTargetNext2dayDate(java.lang.String) -> r
    java.lang.String getTargetNext2dayTemp() -> s
    void setTargetNext2dayTemp(java.lang.String) -> s
com.minus.weather.WeatherUtils -> com.minus.weather.f:
    android.content.Context context -> a
    com.minus.weather.WeatherTable weatherTable -> b
    boolean GetMyWeather(java.lang.String) -> a
    boolean GetTarWeather(java.lang.String) -> b
    boolean isMobile() -> a
    boolean GetWeatherFromBaidu(java.lang.String,java.lang.String) -> b
    java.io.InputStream getStringInputStream(java.lang.String) -> c
    android.graphics.drawable.Drawable ImageViewChange(java.lang.String,java.lang.String) -> a
com.minus.xsocket.ContentHandler -> com.minus.a.a:
    int remaining -> a
    byte[] buffer -> b
    com.minus.xsocket.MyHandler mdl -> c
    boolean onData(org.xsocket.connection.INonBlockingConnection) -> onData
    void processUserPacket(byte[]) -> a
    void processDiaryPacket(byte[]) -> b
    void processLocationPacket(byte[]) -> c
    void processHeartPacket(byte[]) -> d
    void processChatPacket(byte[]) -> e
    void processActionPacket(byte[]) -> f
    void processAlbumPacket(byte[]) -> g
    void processCalendarPacket(byte[]) -> h
    boolean onDisconnect(org.xsocket.connection.INonBlockingConnection) -> onDisconnect
    boolean onConnect(org.xsocket.connection.INonBlockingConnection) -> onConnect
    boolean onConnectionTimeout(org.xsocket.connection.INonBlockingConnection) -> onConnectionTimeout
    boolean onIdleTimeout(org.xsocket.connection.INonBlockingConnection) -> onIdleTimeout
com.minus.xsocket.MyHandler -> com.minus.a.b:
    boolean onConnect(org.xsocket.connection.INonBlockingConnection) -> onConnect
    boolean onDisconnect(org.xsocket.connection.INonBlockingConnection) -> onDisconnect
    boolean onData(org.xsocket.connection.INonBlockingConnection) -> onData
    boolean onIdleTimeout(org.xsocket.connection.INonBlockingConnection) -> onIdleTimeout
    boolean onConnectionTimeout(org.xsocket.connection.INonBlockingConnection) -> onConnectionTimeout
com.minus.xsocket.asynsocket.AsynSocket -> com.minus.a.a.a:
    org.xsocket.connection.INonBlockingConnection nbc -> a
    org.xsocket.connection.NonBlockingConnectionPool pool -> b
    boolean isConnected -> c
    java.lang.String defaultHost -> d
    com.minus.xsocket.MyHandler mHandler -> e
    int PORT -> f
    com.minus.xsocket.asynsocket.AsynSocket getInstance() -> a
    void closeSocket() -> b
    void connection(java.lang.String,org.xsocket.connection.IHandler) -> a
    void sendImgData(byte[]) -> a
    boolean sendData(java.lang.String) -> a
    void setConnected(boolean) -> a
    boolean isConnected() -> c
com.minus.xsocket.asynsocket.AsynSocket$AsynSocketContainer -> com.minus.a.a.a$a:
    com.minus.xsocket.asynsocket.AsynSocket instance -> a
    com.minus.xsocket.asynsocket.AsynSocket access$0() -> a
com.minus.xsocket.asynsocket.protocol.Encrypt -> com.minus.a.a.a.a:
    java.lang.String keyStr -> a
    byte[] key -> b
    byte[] sBox -> c
    void init() -> b
    com.minus.xsocket.asynsocket.protocol.Encrypt getInstance() -> a
    void encode(byte[],int) -> a
    void decode(byte[],int) -> b
    void AddRoundKey(byte[],int,byte) -> a
    void SubBytes(byte[],int) -> c
    void ShiftRows(byte[],int) -> d
    void InvSubBytes(byte[],int) -> e
    void InvShiftRows(byte[],int) -> f
com.minus.xsocket.asynsocket.protocol.Encrypt$EncryptContainer -> com.minus.a.a.a.a$a:
    com.minus.xsocket.asynsocket.protocol.Encrypt instance -> a
    com.minus.xsocket.asynsocket.protocol.Encrypt access$0() -> a
com.minus.xsocket.asynsocket.protocol.Protocol -> com.minus.a.a.a.b:
    java.lang.String pinkHouse -> a
    java.lang.String blueHouse -> b
    java.lang.String brownHouse -> c
com.minus.xsocket.handler.ActionPacketHandler -> com.minus.a.b.a:
    java.lang.String setLength(int) -> a
    void process(byte[]) -> a
    boolean SendSingleActionBegin(java.lang.String,int) -> a
    boolean SendSingleActionEnd(java.lang.String,int) -> b
    boolean SendCoupleActionRequest(java.lang.String,int) -> c
    boolean SendCoupleActionReject(java.lang.String,int) -> d
    boolean SendCoupleActionAccept(java.lang.String,int) -> e
    void RequsetUnacceptAction() -> a
    void getAllSelfCustomAction() -> b
    void getAllTargetCustomAction() -> c
    void addSelfCustomActionWithType(java.lang.String,java.lang.String) -> a
    boolean deleteSelfCustomActionWithType(java.lang.String) -> a
    boolean updateSelfCustomActionWithType(java.lang.String,java.lang.String) -> b
    boolean sendSingleCustomActionBeginTime(java.lang.String,java.lang.String) -> c
    boolean SendSingleCustomActionEndTime(java.lang.String,int) -> f
com.minus.xsocket.handler.AlbumPacketHandler -> com.minus.a.b.b:
    java.io.ByteArrayOutputStream picData -> a
    java.lang.String setLength(int) -> a
    int getIntFromByte(byte[],int) -> a
    void getImageWithInitDate(java.lang.String) -> a
    void removeImageWithInitDate(java.lang.String) -> b
    void getAlbumLastModifyTime() -> a
    void updateAlbumLastModifyTime() -> b
    void getAlbumTimeList() -> c
    void setHomePageWithInitDate(java.lang.String) -> c
    void UploadFirstPictureData(java.lang.String,byte[],int) -> a
    void UploadAppendPictureData(java.lang.String,byte[]) -> a
    void UploadPictureFinish(java.lang.String,int) -> a
    void sendStopUpload() -> d
    void dealWithWaitForRemovingImages() -> e
    void receiveImage(byte[]) -> a
    void processAlbumUploadImage(byte[]) -> b
    void processRemoveImage(byte[]) -> c
    void processAlbumLastModifyTime(byte[]) -> d
    void processAlbumTimeList(byte[]) -> e
    void processReturnConfirm(byte[]) -> f
    void processAlbumRemoveOneImage(byte[]) -> g
    void processAlbum(byte[]) -> h
com.minus.xsocket.handler.CalendarHandler -> com.minus.a.b.c:
    com.minus.xsocket.handler.CalendarHandler handler -> a
    boolean TIME_LIST_LOADING -> b
    com.minus.xsocket.handler.CalendarHandler getInstance() -> a
    java.lang.String setLength(int) -> a
    void process(byte[]) -> a
    void processReceiveCalendarRemoved(byte[]) -> b
    void processLastModifyTimeRead(byte[]) -> c
    void processLastModifyTimeWrite(byte[]) -> d
    void processOneCalendar(byte[]) -> e
    void processAddCalendar(byte[]) -> f
    void processModifyCalendar(byte[]) -> g
    void processRemoveCalendar(byte[]) -> h
    void processCalendarTimeList(byte[]) -> i
    void getLastModifyTimeRead() -> b
    void getLastModifyTimeWrite() -> c
    void addCalendar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void modifyCalendar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    void removeCalendar(java.lang.String) -> a
    void loadAllCalendar() -> d
    void requestCalendarTimeList() -> e
    void loadOneCalendar(java.lang.String) -> b
com.minus.xsocket.handler.ChatPacketHandler -> com.minus.a.b.d:
    java.io.ByteArrayOutputStream picData -> a
    java.io.ByteArrayOutputStream voiceData -> b
    java.lang.String setLength(int) -> a
    int getIntFromByte(byte[],int) -> a
    int getIntFromChar(java.lang.String,int) -> c
    void sendTextWithAccount(java.lang.String,java.lang.String) -> a
    void sendMsgReadWithAccount(java.lang.String,java.lang.String) -> b
    void sendComfirmMsgReadWithAccount() -> a
    void getLastMessageDateWithAccount() -> b
    void getMessageRecordWithAccount(java.lang.String) -> a
    void getMessageWithAccount(java.lang.String,java.lang.String) -> c
    void savePicToAlbumWithPicDate(java.lang.String,java.lang.String) -> d
    void sendVoiceFirstSectionWithAccount(java.lang.String,int,byte[]) -> a
    void sendVoiceAppendSectionWithAccount(java.lang.String,byte[]) -> a
    void sendVoiceFinishSectionWithAccount(java.lang.String,int) -> a
    void sendPicFirstSectionWithAccount(java.lang.String,int,byte[]) -> b
    void sendPicAppendSectionWithAccount(java.lang.String,byte[]) -> b
    void sendPicFinishSectionWithAccount(java.lang.String,int) -> b
    void processChat(byte[]) -> a
    void receiveMsgRemind(byte[]) -> b
    void updateMsgReadStateToCurrentTime(java.lang.String) -> b
    void receiveMsgState(byte[]) -> c
    void receiveMsgReadState(byte[]) -> d
    void receiveLastMessageDate(byte[]) -> e
    void receiveTextMsg(byte[]) -> f
    void receiveVoiceMsg(byte[]) -> g
    void receivePictureMsg(byte[]) -> h
    void receiveMsgRecordFinish() -> c
    void receiveMsgRecordNoExist() -> d
    void responseForSavePicToAlbumState(byte[]) -> i
    void dealWithSendingMsg() -> e
    void uploadPic(java.lang.String,java.lang.String) -> f
    byte[] Bitmap2Bytes(android.graphics.Bitmap) -> a
    void sendRecordData(java.lang.String,java.lang.String) -> e
com.minus.xsocket.handler.ChatPacketHandler$1 -> com.minus.a.b.e:
    com.minus.xsocket.handler.ChatPacketHandler this$0 -> a
    java.lang.String val$picturePath -> b
    java.lang.String val$imageDate -> c
    void run() -> run
com.minus.xsocket.handler.ChatPacketHandler$2 -> com.minus.a.b.f:
    com.minus.xsocket.handler.ChatPacketHandler this$0 -> a
    java.lang.String val$voicePath -> b
    java.lang.String val$currentDate -> c
    void run() -> run
com.minus.xsocket.handler.ConnectHandler -> com.minus.a.b.g:
    java.lang.String IP -> a
    boolean isConnecting -> b
    int connectCount -> c
    java.util.Timer timerForTimeout -> d
    com.minus.xsocket.handler.ConnectHandler getInstance() -> a
    void connectToServer() -> b
    void didConnectToServer() -> c
    void access$1(com.minus.xsocket.handler.ConnectHandler) -> a
com.minus.xsocket.handler.ConnectHandler$1 -> com.minus.a.b.h:
    com.minus.xsocket.handler.ConnectHandler this$0 -> a
    void run() -> run
com.minus.xsocket.handler.ConnectHandler$ConnectHandlerContainer -> com.minus.a.b.g$a:
    com.minus.xsocket.handler.ConnectHandler instance -> a
    com.minus.xsocket.handler.ConnectHandler access$0() -> a
com.minus.xsocket.handler.ControlHandler -> com.minus.a.b.i:
    void dealWithNewNotificationAndWaitForSending() -> a
    void responseForDiaryLastModifyTime(java.lang.String) -> a
    void responseForAlbumLastModifyTime(java.lang.String) -> b
    void receiveLastMsgDate(java.lang.String) -> c
com.minus.xsocket.handler.CrashHandler -> com.minus.a.b.j:
    com.minus.lovershouse.singleton.GlobalApplication softApp -> a
    java.io.File fileErrorLog -> b
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void write2ErrorLog(java.io.File,java.lang.String) -> a
com.minus.xsocket.handler.DiaryPacketHandler -> com.minus.a.b.k:
    java.lang.String setLength(int) -> a
    int getIntFromByte(byte[],int) -> a
    void process(byte[]) -> a
    void processToAll(byte[]) -> b
    void processAddDiary(byte[]) -> c
    void processModifyDiary(byte[]) -> d
    void processRemoveDiary(byte[]) -> e
    void processDiaryReturnLastModifyTime(byte[]) -> f
    void processDiaryTimeList(byte[]) -> g
    void processOneDiary(byte[]) -> h
    void processOneModifyDiary(byte[]) -> i
    void processOneRemoveDiary(byte[]) -> j
    void AddDiary(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void ModifyDiary(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    void RemoveDiary(java.lang.String) -> a
    void getDiaryReadLastModifyTime() -> a
    void GetDiaryLastModifyTime() -> b
    void GetDiaryTimeList() -> c
    void GetDiaryWithAccount(java.lang.String,java.lang.String) -> a
    void RemoveDiaryNewSymbol(java.lang.String) -> b
    void dealWithWaitForAddModifyRemoveDiary() -> d
com.minus.xsocket.handler.HeartPacketHandler -> com.minus.a.b.l:
    int timeoutCount -> a
    java.util.Timer timerForTimeout -> b
    java.util.Timer timerForHeart -> c
    com.minus.xsocket.handler.HeartPacketHandler getInstance() -> a
    java.lang.String setLength(int) -> a
    void process(byte[]) -> a
    void processHeartPacketFromServer() -> b
    void startHeart() -> c
    void stopHeart() -> d
    void sendHeartPacketToServer() -> e
    java.util.Timer access$1(com.minus.xsocket.handler.HeartPacketHandler) -> a
    void access$2(com.minus.xsocket.handler.HeartPacketHandler,java.util.Timer) -> a
    int access$3(com.minus.xsocket.handler.HeartPacketHandler) -> b
    void access$4(com.minus.xsocket.handler.HeartPacketHandler,int) -> a
com.minus.xsocket.handler.HeartPacketHandler$1 -> com.minus.a.b.m:
    com.minus.xsocket.handler.HeartPacketHandler this$0 -> a
    void run() -> run
com.minus.xsocket.handler.HeartPacketHandler$2 -> com.minus.a.b.n:
    com.minus.xsocket.handler.HeartPacketHandler this$0 -> a
    void run() -> run
com.minus.xsocket.handler.HeartPacketHandler$HeartPacketHandlerContainer -> com.minus.a.b.l$a:
    com.minus.xsocket.handler.HeartPacketHandler instance -> a
    com.minus.xsocket.handler.HeartPacketHandler access$0() -> a
com.minus.xsocket.handler.LocationHandler -> com.minus.a.b.o:
    java.lang.String setLength(int) -> a
    void process(byte[]) -> a
    void processLocation(byte[]) -> b
    void UploadPosition(java.lang.String,float,float) -> a
com.minus.xsocket.handler.UserPacketHandler -> com.minus.a.b.p:
    java.io.ByteArrayOutputStream picData -> a
    java.io.ByteArrayOutputStream tarPicData -> b
    java.lang.String setLength(int) -> a
    void process(byte[]) -> a
    void processRegister(byte[]) -> b
    void processLogin(byte[]) -> c
    void processPasswordsentback(byte[]) -> d
    void processModifySex(byte[]) -> e
    void processModifyPassword(byte[]) -> f
    void processModifyBigName(byte[]) -> g
    void processModifyFigure(byte[]) -> h
    void processModifyStatus(byte[]) -> i
    void processModifySmallName(byte[]) -> j
    void processModifyHeadPhoto(byte[]) -> k
    void processTransmitReq(byte[]) -> l
    void processMatchAccOrReject(byte[]) -> m
    void processSelfInfo(byte[]) -> n
    void processMatchInfo(byte[]) -> o
    void processCommonInfo(byte[]) -> p
    void processAddFriend(byte[]) -> q
    void processModifyHouseBack(byte[]) -> r
    void processModifyHouseStyle(byte[]) -> s
    void processCanMailReg(byte[]) -> t
    int getIntFromByte(byte[],int) -> a
    void receiveMatchHeadPhoto(byte[]) -> u
    void receiveSelfHeadPhoto(byte[]) -> v
    void processRequestMatch(byte[]) -> w
    void processAlbumHomePageState(byte[]) -> x
    void processChangeAlbumHomePage(byte[]) -> y
    void processLightState(byte[]) -> z
    void uploadTokenToServer() -> a
    void uploadLogoutTokenToServer() -> b
    void Login(java.lang.String,java.lang.String) -> a
    void Logout() -> c
    void CanMailReg(java.lang.String) -> a
    void UploadFirstHeadPhotoData(java.lang.String,byte[]) -> a
    void UploadAppendHeadPhotoData(byte[]) -> A
    void UploadHeadPhotoDataFinish(int) -> b
    void AddMatch(java.lang.String) -> b
    void register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void ModifyPassword(java.lang.String) -> c
    void ModifyBigName(java.lang.String) -> d
    void ModifyFigure(java.lang.String) -> e
    void ModifySmallName(java.lang.String) -> f
    void ModifyHouseStyle(java.lang.String) -> g
    void getMatchInfo() -> d
    void getMatchHeadPhoto() -> e
    void getMyHeadPhoto() -> f
    void clientAcceptMatch(java.lang.String) -> h
    void clientRejectMatch(java.lang.String) -> i
    void clientForgetpassword(java.lang.String) -> j
    boolean turnOnLight() -> g
    boolean turnOffLight() -> h
com.minus.xsocket.util.NetDataTypeTransform -> com.minus.a.c.a:
    java.lang.String ByteArraytoString(byte[],int) -> a
com.minus.xsocket.util.NetWorkUtil -> com.minus.a.c.b:
    boolean isNetworkAvailable(android.content.Context) -> a
com.nostra13.universalimageloader.cache.disc.DiscCacheAware -> com.nostra13.universalimageloader.cache.disc.DiscCacheAware:
    java.io.File getDirectory() -> getDirectory
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void close() -> close
    void clear() -> clear
com.nostra13.universalimageloader.cache.disc.DiskCache -> com.nostra13.universalimageloader.cache.disc.DiskCache:
com.nostra13.universalimageloader.cache.disc.impl.BaseDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.BaseDiscCache:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> DEFAULT_COMPRESS_FORMAT
    int DEFAULT_COMPRESS_QUALITY -> DEFAULT_COMPRESS_QUALITY
    java.lang.String ERROR_ARG_NULL -> ERROR_ARG_NULL
    java.lang.String TEMP_IMAGE_POSTFIX -> TEMP_IMAGE_POSTFIX
    java.io.File cacheDir -> cacheDir
    java.io.File reserveCacheDir -> reserveCacheDir
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> fileNameGenerator
    int bufferSize -> bufferSize
    android.graphics.Bitmap$CompressFormat compressFormat -> compressFormat
    int compressQuality -> compressQuality
    java.io.File getDirectory() -> getDirectory
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void close() -> close
    void clear() -> clear
    java.io.File getFile(java.lang.String) -> getFile
    void setBufferSize(int) -> setBufferSize
    void setCompressFormat(android.graphics.Bitmap$CompressFormat) -> setCompressFormat
    void setCompressQuality(int) -> setCompressQuality
com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.LimitedAgeDiscCache:
    long maxFileAge -> maxFileAge
    java.util.Map loadingDates -> loadingDates
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void clear() -> clear
    void rememberUsage(java.lang.String) -> rememberUsage
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache:
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache:
    java.lang.String JOURNAL_FILE -> JOURNAL_FILE
    java.lang.String JOURNAL_FILE_TEMP -> JOURNAL_FILE_TEMP
    java.lang.String JOURNAL_FILE_BACKUP -> JOURNAL_FILE_BACKUP
    java.lang.String MAGIC -> MAGIC
    java.lang.String VERSION_1 -> VERSION_1
    long ANY_SEQUENCE_NUMBER -> ANY_SEQUENCE_NUMBER
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> LEGAL_KEY_PATTERN
    java.lang.String CLEAN -> CLEAN
    java.lang.String DIRTY -> DIRTY
    java.lang.String REMOVE -> REMOVE
    java.lang.String READ -> READ
    java.io.File directory -> directory
    java.io.File journalFile -> journalFile
    java.io.File journalFileTmp -> journalFileTmp
    java.io.File journalFileBackup -> journalFileBackup
    int appVersion -> appVersion
    long maxSize -> maxSize
    int maxFileCount -> maxFileCount
    int valueCount -> valueCount
    long size -> size
    int fileCount -> fileCount
    java.io.Writer journalWriter -> journalWriter
    java.util.LinkedHashMap lruEntries -> lruEntries
    int redundantOpCount -> redundantOpCount
    long nextSequenceNumber -> nextSequenceNumber
    java.util.concurrent.ThreadPoolExecutor executorService -> executorService
    java.util.concurrent.Callable cleanupCallable -> cleanupCallable
    java.io.OutputStream NULL_OUTPUT_STREAM -> NULL_OUTPUT_STREAM
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache open(java.io.File,int,int,long,int) -> open
    void readJournal() -> readJournal
    void readJournalLine(java.lang.String) -> readJournalLine
    void processJournal() -> processJournal
    void rebuildJournal() -> rebuildJournal
    void deleteIfExists(java.io.File) -> deleteIfExists
    void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot get(java.lang.String) -> get
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String) -> edit
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit(java.lang.String,long) -> edit
    java.io.File getDirectory() -> getDirectory
    long getMaxSize() -> getMaxSize
    int getMaxFileCount() -> getMaxFileCount
    void setMaxSize(long) -> setMaxSize
    long size() -> size
    long fileCount() -> fileCount
    void completeEdit(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> completeEdit
    boolean journalRebuildRequired() -> journalRebuildRequired
    boolean remove(java.lang.String) -> remove
    boolean isClosed() -> isClosed
    void checkNotClosed() -> checkNotClosed
    void flush() -> flush
    void close() -> close
    void trimToSize() -> trimToSize
    void trimToFileCount() -> trimToFileCount
    void delete() -> delete
    void validateKey(java.lang.String) -> validateKey
    java.lang.String inputStreamToString(java.io.InputStream) -> inputStreamToString
    java.io.Writer access$000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$000
    void access$100(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$100
    void access$200(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$200
    boolean access$300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$300
    void access$400(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$400
    int access$502(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,int) -> access$502
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$1700(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,java.lang.String,long) -> access$1700
    java.lang.String access$1800(java.io.InputStream) -> access$1800
    int access$1900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$1900
    java.io.File access$2000(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache) -> access$2000
    java.io.OutputStream access$2100() -> access$2100
    void access$2300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> access$2300
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1 -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$1:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    java.lang.Void call() -> call
    java.lang.Object call() -> call
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2 -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$2:
    void write(int) -> write
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry entry -> entry
    boolean[] written -> written
    boolean hasErrors -> hasErrors
    boolean committed -> committed
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    java.io.InputStream newInputStream(int) -> newInputStream
    java.lang.String getString(int) -> getString
    java.io.OutputStream newOutputStream(int) -> newOutputStream
    void set(int,java.lang.String) -> set
    void commit() -> commit
    void abort() -> abort
    void abortUnlessCommitted() -> abortUnlessCommitted
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry access$1500(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> access$1500
    boolean[] access$1600(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> access$1600
    boolean access$2402(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor,boolean) -> access$2402
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor$FaultHidingOutputStream -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor$FaultHidingOutputStream:
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor this$1 -> this$1
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry:
    java.lang.String key -> key
    long[] lengths -> lengths
    boolean readable -> readable
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor currentEditor -> currentEditor
    long sequenceNumber -> sequenceNumber
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    java.lang.String getLengths() -> getLengths
    void setLengths(java.lang.String[]) -> setLengths
    java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    java.io.File getCleanFile(int) -> getCleanFile
    java.io.File getDirtyFile(int) -> getDirtyFile
    boolean access$702(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,boolean) -> access$702
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$802(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor) -> access$802
    void access$900(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,java.lang.String[]) -> access$900
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor access$800(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$800
    long[] access$1100(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$1100
    java.lang.String access$1200(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$1200
    boolean access$700(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$700
    long access$1300(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry) -> access$1300
    long access$1302(com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Entry,long) -> access$1302
com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot -> com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Snapshot:
    java.lang.String key -> key
    long sequenceNumber -> sequenceNumber
    java.io.File[] files -> files
    java.io.InputStream[] ins -> ins
    long[] lengths -> lengths
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache this$0 -> this$0
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache$Editor edit() -> edit
    java.io.File getFile(int) -> getFile
    java.io.InputStream getInputStream(int) -> getInputStream
    java.lang.String getString(int) -> getString
    long getLength(int) -> getLength
    void close() -> close
com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache -> com.nostra13.universalimageloader.cache.disc.impl.ext.LruDiscCache:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    android.graphics.Bitmap$CompressFormat DEFAULT_COMPRESS_FORMAT -> DEFAULT_COMPRESS_FORMAT
    int DEFAULT_COMPRESS_QUALITY -> DEFAULT_COMPRESS_QUALITY
    java.lang.String ERROR_ARG_NULL -> ERROR_ARG_NULL
    java.lang.String ERROR_ARG_NEGATIVE -> ERROR_ARG_NEGATIVE
    com.nostra13.universalimageloader.cache.disc.impl.ext.DiskLruCache cache -> cache
    java.io.File reserveCacheDir -> reserveCacheDir
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> fileNameGenerator
    int bufferSize -> bufferSize
    android.graphics.Bitmap$CompressFormat compressFormat -> compressFormat
    int compressQuality -> compressQuality
    void initCache(java.io.File,java.io.File,long,int) -> initCache
    java.io.File getDirectory() -> getDirectory
    java.io.File get(java.lang.String) -> get
    boolean save(java.lang.String,java.io.InputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> save
    boolean save(java.lang.String,android.graphics.Bitmap) -> save
    boolean remove(java.lang.String) -> remove
    void close() -> close
    void clear() -> clear
    java.lang.String getKey(java.lang.String) -> getKey
    void setReserveCacheDir(java.io.File) -> setReserveCacheDir
    void setBufferSize(int) -> setBufferSize
    void setCompressFormat(android.graphics.Bitmap$CompressFormat) -> setCompressFormat
    void setCompressQuality(int) -> setCompressQuality
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader -> com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader:
    byte CR -> CR
    byte LF -> LF
    java.io.InputStream in -> in
    java.nio.charset.Charset charset -> charset
    byte[] buf -> buf
    int pos -> pos
    int end -> end
    void close() -> close
    java.lang.String readLine() -> readLine
    void fillBuf() -> fillBuf
    java.nio.charset.Charset access$000(com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader) -> access$000
com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader$1 -> com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader$1:
    com.nostra13.universalimageloader.cache.disc.impl.ext.StrictLineReader this$0 -> this$0
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.cache.disc.impl.ext.Util -> com.nostra13.universalimageloader.cache.disc.impl.ext.Util:
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.lang.String readFully(java.io.Reader) -> readFully
    void deleteContents(java.io.File) -> deleteContents
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator:
    java.lang.String generate(java.lang.String) -> generate
com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator -> com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator:
    java.lang.String HASH_ALGORITHM -> HASH_ALGORITHM
    int RADIX -> RADIX
    java.lang.String generate(java.lang.String) -> generate
    byte[] getMD5(byte[]) -> getMD5
com.nostra13.universalimageloader.cache.memory.BaseMemoryCache -> com.nostra13.universalimageloader.cache.memory.BaseMemoryCache:
    java.util.Map softMap -> softMap
    android.graphics.Bitmap get(java.lang.String) -> get
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    void remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache:
    int MAX_NORMAL_CACHE_SIZE_IN_MB -> MAX_NORMAL_CACHE_SIZE_IN_MB
    int MAX_NORMAL_CACHE_SIZE -> MAX_NORMAL_CACHE_SIZE
    int sizeLimit -> sizeLimit
    java.util.concurrent.atomic.AtomicInteger cacheSize -> cacheSize
    java.util.List hardCache -> hardCache
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSizeLimit() -> getSizeLimit
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.MemoryCache -> com.nostra13.universalimageloader.cache.memory.MemoryCache:
com.nostra13.universalimageloader.cache.memory.MemoryCacheAware -> com.nostra13.universalimageloader.cache.memory.MemoryCacheAware:
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void remove(java.lang.Object) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FIFOLimitedMemoryCache:
    java.util.List queue -> queue
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCache cache -> cache
    java.util.Comparator keyComparator -> keyComparator
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Collection keys() -> keys
    void remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LRULimitedMemoryCache:
    int INITIAL_CAPACITY -> INITIAL_CAPACITY
    float LOAD_FACTOR -> LOAD_FACTOR
    java.util.Map lruCache -> lruCache
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    void remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LargestLimitedMemoryCache:
    java.util.Map valueSizes -> valueSizes
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    void remove(java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LimitedAgeMemoryCache:
    com.nostra13.universalimageloader.cache.memory.MemoryCache cache -> cache
    long maxAge -> maxAge
    java.util.Map loadingDates -> loadingDates
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    void remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.LruMemoryCache:
    java.util.LinkedHashMap map -> map
    int maxSize -> maxSize
    int size -> size
    android.graphics.Bitmap get(java.lang.String) -> get
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    void trimToSize(int) -> trimToSize
    void remove(java.lang.String) -> remove
    java.util.Collection keys() -> keys
    void clear() -> clear
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    java.lang.String toString() -> toString
    void remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache:
    java.util.Map usingCounts -> usingCounts
    boolean put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    void clear() -> clear
    int getSize(android.graphics.Bitmap) -> getSize
    android.graphics.Bitmap removeNext() -> removeNext
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    void remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache -> com.nostra13.universalimageloader.cache.memory.impl.WeakMemoryCache:
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory:
    java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> createExecutor
    java.util.concurrent.Executor createTaskDistributor() -> createTaskDistributor
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> createFileNameGenerator
    com.nostra13.universalimageloader.cache.disc.DiskCache createDiskCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,long,int) -> createDiskCache
    java.io.File createReserveDiskCacheDir(android.content.Context) -> createReserveDiskCacheDir
    com.nostra13.universalimageloader.cache.memory.MemoryCache createMemoryCache(int) -> createMemoryCache
    com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> createImageDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder createImageDecoder(boolean) -> createImageDecoder
    com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> createBitmapDisplayer
    java.util.concurrent.ThreadFactory createThreadFactory(int,java.lang.String) -> createThreadFactory
com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> poolNumber
    java.lang.ThreadGroup group -> group
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    java.lang.String namePrefix -> namePrefix
    int threadPriority -> threadPriority
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.nostra13.universalimageloader.core.DisplayBitmapTask:
    java.lang.String LOG_DISPLAY_IMAGE_IN_IMAGEAWARE -> LOG_DISPLAY_IMAGE_IN_IMAGEAWARE
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    android.graphics.Bitmap bitmap -> bitmap
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    void run() -> run
    boolean isViewWasReused() -> isViewWasReused
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.nostra13.universalimageloader.core.DisplayImageOptions:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisk -> cacheOnDisk
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    boolean shouldShowImageOnLoading() -> shouldShowImageOnLoading
    boolean shouldShowImageForEmptyUri() -> shouldShowImageForEmptyUri
    boolean shouldShowImageOnFail() -> shouldShowImageOnFail
    boolean shouldPreProcess() -> shouldPreProcess
    boolean shouldPostProcess() -> shouldPostProcess
    boolean shouldDelayBeforeLoading() -> shouldDelayBeforeLoading
    android.graphics.drawable.Drawable getImageOnLoading(android.content.res.Resources) -> getImageOnLoading
    android.graphics.drawable.Drawable getImageForEmptyUri(android.content.res.Resources) -> getImageForEmptyUri
    android.graphics.drawable.Drawable getImageOnFail(android.content.res.Resources) -> getImageOnFail
    boolean isResetViewBeforeLoading() -> isResetViewBeforeLoading
    boolean isCacheInMemory() -> isCacheInMemory
    boolean isCacheOnDisk() -> isCacheOnDisk
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
    int getDelayBeforeLoading() -> getDelayBeforeLoading
    boolean isConsiderExifParams() -> isConsiderExifParams
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> getPreProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> getPostProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> getDisplayer
    android.os.Handler getHandler() -> getHandler
    boolean isSyncLoading() -> isSyncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> createSimple
    int access$1900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$1900
    int access$2000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2000
    int access$2100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2100
    android.graphics.drawable.Drawable access$2200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2200
    android.graphics.drawable.Drawable access$2300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2300
    android.graphics.drawable.Drawable access$2400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2400
    boolean access$2500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2500
    boolean access$2600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2600
    boolean access$2700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2700
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$2800(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2800
    android.graphics.BitmapFactory$Options access$2900(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$2900
    int access$3000(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3000
    boolean access$3100(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3100
    java.lang.Object access$3200(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3200
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3300(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$3400(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3400
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$3500(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3500
    android.os.Handler access$3600(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3600
    boolean access$3700(com.nostra13.universalimageloader.core.DisplayImageOptions) -> access$3700
com.nostra13.universalimageloader.core.DisplayImageOptions$1 -> com.nostra13.universalimageloader.core.DisplayImageOptions$1:
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.nostra13.universalimageloader.core.DisplayImageOptions$Builder:
    int imageResOnLoading -> imageResOnLoading
    int imageResForEmptyUri -> imageResForEmptyUri
    int imageResOnFail -> imageResOnFail
    android.graphics.drawable.Drawable imageOnLoading -> imageOnLoading
    android.graphics.drawable.Drawable imageForEmptyUri -> imageForEmptyUri
    android.graphics.drawable.Drawable imageOnFail -> imageOnFail
    boolean resetViewBeforeLoading -> resetViewBeforeLoading
    boolean cacheInMemory -> cacheInMemory
    boolean cacheOnDisk -> cacheOnDisk
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    int delayBeforeLoading -> delayBeforeLoading
    boolean considerExifParams -> considerExifParams
    java.lang.Object extraForDownloader -> extraForDownloader
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> preProcessor
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> postProcessor
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> displayer
    android.os.Handler handler -> handler
    boolean isSyncLoading -> isSyncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showStubImage(int) -> showStubImage
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(int) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(android.graphics.drawable.Drawable) -> showImageOnLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(int) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(android.graphics.drawable.Drawable) -> showImageForEmptyUri
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(int) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnFail(android.graphics.drawable.Drawable) -> showImageOnFail
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading() -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading(boolean) -> resetViewBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory() -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory(boolean) -> cacheInMemory
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc() -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc(boolean) -> cacheOnDisc
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisk(boolean) -> cacheOnDisk
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.universalimageloader.core.assist.ImageScaleType) -> imageScaleType
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder bitmapConfig(android.graphics.Bitmap$Config) -> bitmapConfig
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder decodingOptions(android.graphics.BitmapFactory$Options) -> decodingOptions
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder delayBeforeLoading(int) -> delayBeforeLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder extraForDownloader(java.lang.Object) -> extraForDownloader
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder considerExifParams(boolean) -> considerExifParams
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder preProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> preProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder postProcessor(com.nostra13.universalimageloader.core.process.BitmapProcessor) -> postProcessor
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer) -> displayer
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder syncLoading(boolean) -> syncLoading
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder handler(android.os.Handler) -> handler
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.universalimageloader.core.DisplayImageOptions) -> cloneFrom
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> build
    int access$000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$200
    android.graphics.drawable.Drawable access$300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$300
    android.graphics.drawable.Drawable access$400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$400
    android.graphics.drawable.Drawable access$500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$500
    boolean access$600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$600
    boolean access$700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$700
    boolean access$800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$800
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$900(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$900
    android.graphics.BitmapFactory$Options access$1000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1000
    int access$1100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1100
    boolean access$1200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1200
    java.lang.Object access$1300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1300
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1400
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1500
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$1600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1600
    android.os.Handler access$1700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1700
    boolean access$1800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> access$1800
com.nostra13.universalimageloader.core.ImageLoader -> com.nostra13.universalimageloader.core.ImageLoader:
    java.lang.String TAG -> TAG
    java.lang.String LOG_INIT_CONFIG -> LOG_INIT_CONFIG
    java.lang.String LOG_DESTROY -> LOG_DESTROY
    java.lang.String LOG_LOAD_IMAGE_FROM_MEMORY_CACHE -> LOG_LOAD_IMAGE_FROM_MEMORY_CACHE
    java.lang.String WARNING_RE_INIT_CONFIG -> WARNING_RE_INIT_CONFIG
    java.lang.String ERROR_WRONG_ARGUMENTS -> ERROR_WRONG_ARGUMENTS
    java.lang.String ERROR_NOT_INIT -> ERROR_NOT_INIT
    java.lang.String ERROR_INIT_CONFIG_WITH_NULL -> ERROR_INIT_CONFIG_WITH_NULL
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener emptyListener -> emptyListener
    com.nostra13.universalimageloader.core.ImageLoader instance -> instance
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> getInstance
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> init
    boolean isInited() -> isInited
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> displayImage
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> displayImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener) -> loadImage
    void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener) -> loadImage
    android.graphics.Bitmap loadImageSync(java.lang.String) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> loadImageSync
    android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions) -> loadImageSync
    void checkConfiguration() -> checkConfiguration
    com.nostra13.universalimageloader.cache.memory.MemoryCache getMemoryCache() -> getMemoryCache
    void clearMemoryCache() -> clearMemoryCache
    com.nostra13.universalimageloader.cache.disc.DiskCache getDiscCache() -> getDiscCache
    com.nostra13.universalimageloader.cache.disc.DiskCache getDiskCache() -> getDiskCache
    void clearDiscCache() -> clearDiscCache
    void clearDiskCache() -> clearDiskCache
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    java.lang.String getLoadingUriForView(android.widget.ImageView) -> getLoadingUriForView
    void cancelDisplayTask(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTask
    void cancelDisplayTask(android.widget.ImageView) -> cancelDisplayTask
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void destroy() -> destroy
    android.os.Handler defineHandler(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defineHandler
com.nostra13.universalimageloader.core.ImageLoader$1 -> com.nostra13.universalimageloader.core.ImageLoader$1:
com.nostra13.universalimageloader.core.ImageLoader$SyncImageLoadingListener -> com.nostra13.universalimageloader.core.ImageLoader$SyncImageLoadingListener:
    android.graphics.Bitmap loadedImage -> loadedImage
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    android.graphics.Bitmap getLoadedBitmap() -> getLoadedBitmap
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration:
    android.content.res.Resources resources -> resources
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiskCache -> maxImageWidthForDiskCache
    int maxImageHeightForDiskCache -> maxImageHeightForDiskCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache -> processorForDiskCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiskCache diskCache -> diskCache
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration createDefault(android.content.Context) -> createDefault
    com.nostra13.universalimageloader.core.assist.ImageSize getMaxImageSize() -> getMaxImageSize
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1 -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder:
    java.lang.String WARNING_OVERLAP_DISK_CACHE_PARAMS -> WARNING_OVERLAP_DISK_CACHE_PARAMS
    java.lang.String WARNING_OVERLAP_DISK_CACHE_NAME_GENERATOR -> WARNING_OVERLAP_DISK_CACHE_NAME_GENERATOR
    java.lang.String WARNING_OVERLAP_MEMORY_CACHE -> WARNING_OVERLAP_MEMORY_CACHE
    java.lang.String WARNING_OVERLAP_EXECUTOR -> WARNING_OVERLAP_EXECUTOR
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    int DEFAULT_THREAD_PRIORITY -> DEFAULT_THREAD_PRIORITY
    com.nostra13.universalimageloader.core.assist.QueueProcessingType DEFAULT_TASK_PROCESSING_TYPE -> DEFAULT_TASK_PROCESSING_TYPE
    android.content.Context context -> context
    int maxImageWidthForMemoryCache -> maxImageWidthForMemoryCache
    int maxImageHeightForMemoryCache -> maxImageHeightForMemoryCache
    int maxImageWidthForDiskCache -> maxImageWidthForDiskCache
    int maxImageHeightForDiskCache -> maxImageHeightForDiskCache
    com.nostra13.universalimageloader.core.process.BitmapProcessor processorForDiskCache -> processorForDiskCache
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    boolean customExecutor -> customExecutor
    boolean customExecutorForCachedImages -> customExecutorForCachedImages
    int threadPoolSize -> threadPoolSize
    int threadPriority -> threadPriority
    boolean denyCacheImageMultipleSizesInMemory -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> tasksProcessingType
    int memoryCacheSize -> memoryCacheSize
    long diskCacheSize -> diskCacheSize
    int diskCacheFileCount -> diskCacheFileCount
    com.nostra13.universalimageloader.cache.memory.MemoryCache memoryCache -> memoryCache
    com.nostra13.universalimageloader.cache.disc.DiskCache diskCache -> diskCache
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator diskCacheFileNameGenerator -> diskCacheFileNameGenerator
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> defaultDisplayImageOptions
    boolean writeLogs -> writeLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheExtraOptions(int,int) -> memoryCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheExtraOptions(int,int,com.nostra13.universalimageloader.core.process.BitmapProcessor) -> discCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheExtraOptions(int,int,com.nostra13.universalimageloader.core.process.BitmapProcessor) -> diskCacheExtraOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutor(java.util.concurrent.Executor) -> taskExecutor
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder taskExecutorForCachedImages(java.util.concurrent.Executor) -> taskExecutorForCachedImages
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPoolSize(int) -> threadPoolSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> threadPriority
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> denyCacheImageMultipleSizesInMemory
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> tasksProcessingOrder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSize(int) -> memoryCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSizePercentage(int) -> memoryCacheSizePercentage
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCache(com.nostra13.universalimageloader.cache.memory.MemoryCache) -> memoryCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheSize(int) -> discCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheSize(int) -> diskCacheSize
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileCount(int) -> discCacheFileCount
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheFileCount(int) -> diskCacheFileCount
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> discCacheFileNameGenerator
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCacheFileNameGenerator(com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator) -> diskCacheFileNameGenerator
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCache(com.nostra13.universalimageloader.cache.disc.DiskCache) -> discCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder diskCache(com.nostra13.universalimageloader.cache.disc.DiskCache) -> diskCache
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDownloader(com.nostra13.universalimageloader.core.download.ImageDownloader) -> imageDownloader
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDecoder(com.nostra13.universalimageloader.core.decode.ImageDecoder) -> imageDecoder
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder defaultDisplayImageOptions(com.nostra13.universalimageloader.core.DisplayImageOptions) -> defaultDisplayImageOptions
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder writeDebugLogs() -> writeDebugLogs
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> build
    void initEmptyFieldsWithDefaultValues() -> initEmptyFieldsWithDefaultValues
    android.content.Context access$000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$000
    int access$100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$100
    int access$200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$200
    int access$300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$300
    int access$400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$400
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$500
    java.util.concurrent.Executor access$600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$600
    java.util.concurrent.Executor access$700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$700
    int access$800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$800
    int access$900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$900
    com.nostra13.universalimageloader.core.assist.QueueProcessingType access$1000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1000
    com.nostra13.universalimageloader.cache.disc.DiskCache access$1100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1100
    com.nostra13.universalimageloader.cache.memory.MemoryCache access$1200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1200
    com.nostra13.universalimageloader.core.DisplayImageOptions access$1300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1300
    com.nostra13.universalimageloader.core.download.ImageDownloader access$1400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1400
    com.nostra13.universalimageloader.core.decode.ImageDecoder access$1500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1500
    boolean access$1600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1600
    boolean access$1700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1700
    boolean access$1800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> access$1800
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$NetworkDeniedImageDownloader -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$NetworkDeniedImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$SlowNetworkImageDownloader -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$SlowNetworkImageDownloader:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> wrappedDownloader
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.ImageLoaderEngine -> com.nostra13.universalimageloader.core.ImageLoaderEngine:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    java.util.concurrent.Executor taskExecutorForCachedImages -> taskExecutorForCachedImages
    java.util.concurrent.Executor taskDistributor -> taskDistributor
    java.util.Map cacheKeysForImageAwares -> cacheKeysForImageAwares
    java.util.Map uriLocks -> uriLocks
    java.util.concurrent.atomic.AtomicBoolean paused -> paused
    java.util.concurrent.atomic.AtomicBoolean networkDenied -> networkDenied
    java.util.concurrent.atomic.AtomicBoolean slowNetwork -> slowNetwork
    java.lang.Object pauseLock -> pauseLock
    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> submit
    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> submit
    void initExecutorsIfNeed() -> initExecutorsIfNeed
    java.util.concurrent.Executor createTaskExecutor() -> createTaskExecutor
    java.lang.String getLoadingUriForView(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    void prepareDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware,java.lang.String) -> prepareDisplayTaskFor
    void cancelDisplayTaskFor(com.nostra13.universalimageloader.core.imageaware.ImageAware) -> cancelDisplayTaskFor
    void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    void handleSlowNetwork(boolean) -> handleSlowNetwork
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void fireCallback(java.lang.Runnable) -> fireCallback
    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> getLockForUri
    java.util.concurrent.atomic.AtomicBoolean getPause() -> getPause
    java.lang.Object getPauseLock() -> getPauseLock
    boolean isNetworkDenied() -> isNetworkDenied
    boolean isSlowNetwork() -> isSlowNetwork
    void access$000(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$000
    java.util.concurrent.Executor access$100(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$100
    java.util.concurrent.Executor access$200(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> access$200
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> com.nostra13.universalimageloader.core.ImageLoaderEngine$1:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask val$task -> val$task
    com.nostra13.universalimageloader.core.ImageLoaderEngine this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.nostra13.universalimageloader.core.ImageLoadingInfo:
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener -> progressListener
    java.util.concurrent.locks.ReentrantLock loadFromUriLock -> loadFromUriLock
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask:
    java.lang.String LOG_WAITING_FOR_RESUME -> LOG_WAITING_FOR_RESUME
    java.lang.String LOG_RESUME_AFTER_PAUSE -> LOG_RESUME_AFTER_PAUSE
    java.lang.String LOG_DELAY_BEFORE_LOADING -> LOG_DELAY_BEFORE_LOADING
    java.lang.String LOG_START_DISPLAY_IMAGE_TASK -> LOG_START_DISPLAY_IMAGE_TASK
    java.lang.String LOG_WAITING_FOR_IMAGE_LOADED -> LOG_WAITING_FOR_IMAGE_LOADED
    java.lang.String LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING -> LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING
    java.lang.String LOG_LOAD_IMAGE_FROM_NETWORK -> LOG_LOAD_IMAGE_FROM_NETWORK
    java.lang.String LOG_LOAD_IMAGE_FROM_DISK_CACHE -> LOG_LOAD_IMAGE_FROM_DISK_CACHE
    java.lang.String LOG_RESIZE_CACHED_IMAGE_FILE -> LOG_RESIZE_CACHED_IMAGE_FILE
    java.lang.String LOG_PREPROCESS_IMAGE -> LOG_PREPROCESS_IMAGE
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    java.lang.String LOG_CACHE_IMAGE_IN_MEMORY -> LOG_CACHE_IMAGE_IN_MEMORY
    java.lang.String LOG_CACHE_IMAGE_ON_DISK -> LOG_CACHE_IMAGE_ON_DISK
    java.lang.String LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISK -> LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISK
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_REUSED -> LOG_TASK_CANCELLED_IMAGEAWARE_REUSED
    java.lang.String LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED -> LOG_TASK_CANCELLED_IMAGEAWARE_COLLECTED
    java.lang.String LOG_TASK_INTERRUPTED -> LOG_TASK_INTERRUPTED
    java.lang.String ERROR_PRE_PROCESSOR_NULL -> ERROR_PRE_PROCESSOR_NULL
    java.lang.String ERROR_POST_PROCESSOR_NULL -> ERROR_POST_PROCESSOR_NULL
    java.lang.String ERROR_PROCESSOR_FOR_DISK_CACHE_NULL -> ERROR_PROCESSOR_FOR_DISK_CACHE_NULL
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> configuration
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> networkDeniedDownloader
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> slowNetworkDownloader
    com.nostra13.universalimageloader.core.decode.ImageDecoder decoder -> decoder
    java.lang.String uri -> uri
    java.lang.String memoryCacheKey -> memoryCacheKey
    com.nostra13.universalimageloader.core.imageaware.ImageAware imageAware -> imageAware
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    com.nostra13.universalimageloader.core.listener.ImageLoadingListener listener -> listener
    com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener progressListener -> progressListener
    boolean syncLoading -> syncLoading
    com.nostra13.universalimageloader.core.assist.LoadedFrom loadedFrom -> loadedFrom
    void run() -> run
    boolean waitIfPaused() -> waitIfPaused
    boolean delayIfNeed() -> delayIfNeed
    android.graphics.Bitmap tryLoadBitmap() -> tryLoadBitmap
    android.graphics.Bitmap decodeImage(java.lang.String) -> decodeImage
    boolean tryCacheImageOnDisk() -> tryCacheImageOnDisk
    boolean downloadImage() -> downloadImage
    boolean resizeAndSaveImage(int,int) -> resizeAndSaveImage
    boolean onBytesCopied(int,int) -> onBytesCopied
    boolean fireProgressEvent(int,int) -> fireProgressEvent
    void fireFailEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> fireFailEvent
    void fireCancelEvent() -> fireCancelEvent
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    void checkTaskNotActual() -> checkTaskNotActual
    boolean isTaskNotActual() -> isTaskNotActual
    void checkViewCollected() -> checkViewCollected
    boolean isViewCollected() -> isViewCollected
    void checkViewReused() -> checkViewReused
    boolean isViewReused() -> isViewReused
    void checkTaskInterrupted() -> checkTaskInterrupted
    boolean isTaskInterrupted() -> isTaskInterrupted
    java.lang.String getLoadingUri() -> getLoadingUri
    void runTask(java.lang.Runnable,boolean,android.os.Handler,com.nostra13.universalimageloader.core.ImageLoaderEngine) -> runTask
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration access$000(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> access$000
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1:
    int val$current -> val$current
    int val$total -> val$total
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType val$failType -> val$failType
    java.lang.Throwable val$failCause -> val$failCause
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3 -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$3:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException -> com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$TaskCancelledException:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> this$0
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask:
    java.lang.String LOG_POSTPROCESS_IMAGE -> LOG_POSTPROCESS_IMAGE
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> engine
    android.graphics.Bitmap bitmap -> bitmap
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> imageLoadingInfo
    android.os.Handler handler -> handler
    void run() -> run
com.nostra13.universalimageloader.core.assist.ContentLengthInputStream -> com.nostra13.universalimageloader.core.assist.ContentLengthInputStream:
    java.io.InputStream stream -> stream
    int length -> length
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    boolean markSupported() -> markSupported
com.nostra13.universalimageloader.core.assist.FailReason -> com.nostra13.universalimageloader.core.assist.FailReason:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType type -> type
    java.lang.Throwable cause -> cause
    com.nostra13.universalimageloader.core.assist.FailReason$FailType getType() -> getType
    java.lang.Throwable getCause() -> getCause
com.nostra13.universalimageloader.core.assist.FailReason$FailType -> com.nostra13.universalimageloader.core.assist.FailReason$FailType:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType IO_ERROR -> IO_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType DECODING_ERROR -> DECODING_ERROR
    com.nostra13.universalimageloader.core.assist.FailReason$FailType NETWORK_DENIED -> NETWORK_DENIED
    com.nostra13.universalimageloader.core.assist.FailReason$FailType OUT_OF_MEMORY -> OUT_OF_MEMORY
    com.nostra13.universalimageloader.core.assist.FailReason$FailType UNKNOWN -> UNKNOWN
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values() -> values
    com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.nostra13.universalimageloader.core.assist.FlushedInputStream:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageScaleType -> com.nostra13.universalimageloader.core.assist.ImageScaleType:
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE -> NONE
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_POWER_OF_2 -> IN_SAMPLE_POWER_OF_2
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT -> IN_SAMPLE_INT
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY -> EXACTLY
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY_STRETCHED -> EXACTLY_STRETCHED
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ImageSize -> com.nostra13.universalimageloader.core.assist.ImageSize:
    int TO_STRING_MAX_LENGHT -> TO_STRING_MAX_LENGHT
    java.lang.String SEPARATOR -> SEPARATOR
    int width -> width
    int height -> height
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ImageSize scaleDown(int) -> scaleDown
    com.nostra13.universalimageloader.core.assist.ImageSize scale(float) -> scale
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.LoadedFrom -> com.nostra13.universalimageloader.core.assist.LoadedFrom:
    com.nostra13.universalimageloader.core.assist.LoadedFrom NETWORK -> NETWORK
    com.nostra13.universalimageloader.core.assist.LoadedFrom DISC_CACHE -> DISC_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom MEMORY_CACHE -> MEMORY_CACHE
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.LoadedFrom[] values() -> values
    com.nostra13.universalimageloader.core.assist.LoadedFrom valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> com.nostra13.universalimageloader.core.assist.QueueProcessingType:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType FIFO -> FIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO -> LIFO
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
    com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ViewScaleType -> com.nostra13.universalimageloader.core.assist.ViewScaleType:
    com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE -> FIT_INSIDE
    com.nostra13.universalimageloader.core.assist.ViewScaleType CROP -> CROP
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> fromImageView
com.nostra13.universalimageloader.core.assist.ViewScaleType$1 -> com.nostra13.universalimageloader.core.assist.ViewScaleType$1:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> $SwitchMap$android$widget$ImageView$ScaleType
com.nostra13.universalimageloader.core.assist.deque.BlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.BlockingDeque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    void push(java.lang.Object) -> push
com.nostra13.universalimageloader.core.assist.deque.Deque -> com.nostra13.universalimageloader.core.assist.deque.Deque:
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque:
    long serialVersionUID -> serialVersionUID
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node first -> first
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node last -> last
    int count -> count
    int capacity -> capacity
    java.util.concurrent.locks.ReentrantLock lock -> lock
    java.util.concurrent.locks.Condition notEmpty -> notEmpty
    java.util.concurrent.locks.Condition notFull -> notFull
    boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkFirst
    boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkLast
    java.lang.Object unlinkFirst() -> unlinkFirst
    java.lang.Object unlinkLast() -> unlinkLast
    void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> unlink
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    int remainingCapacity() -> remainingCapacity
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.util.Iterator descendingIterator() -> descendingIterator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1 -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1:
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
    java.lang.Object nextItem -> nextItem
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node lastRet -> lastRet
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> succ
    void advance() -> advance
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> this$0
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node:
    java.lang.Object item -> item
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node prev -> prev
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> next
com.nostra13.universalimageloader.core.decode.BaseImageDecoder -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder:
    java.lang.String LOG_SUBSAMPLE_IMAGE -> LOG_SUBSAMPLE_IMAGE
    java.lang.String LOG_SCALE_IMAGE -> LOG_SCALE_IMAGE
    java.lang.String LOG_ROTATE_IMAGE -> LOG_ROTATE_IMAGE
    java.lang.String LOG_FLIP_IMAGE -> LOG_FLIP_IMAGE
    java.lang.String ERROR_CANT_DECODE_IMAGE -> ERROR_CANT_DECODE_IMAGE
    boolean loggingEnabled -> loggingEnabled
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
    java.io.InputStream getImageStream(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> getImageStream
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo defineImageSizeAndRotation(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> defineImageSizeAndRotation
    boolean canDefineExifParams(java.lang.String,java.lang.String) -> canDefineExifParams
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String) -> defineExifOrientation
    android.graphics.BitmapFactory$Options prepareDecodingOptions(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> prepareDecodingOptions
    java.io.InputStream resetStream(java.io.InputStream,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> resetStream
    android.graphics.Bitmap considerExactScaleAndOrientatiton(android.graphics.Bitmap,com.nostra13.universalimageloader.core.decode.ImageDecodingInfo,int,boolean) -> considerExactScaleAndOrientatiton
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo:
    int rotation -> rotation
    boolean flipHorizontal -> flipHorizontal
com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo -> com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ImageFileInfo:
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.decode.BaseImageDecoder$ExifInfo exif -> exif
com.nostra13.universalimageloader.core.decode.ImageDecoder -> com.nostra13.universalimageloader.core.decode.ImageDecoder:
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.decode.ImageDecodingInfo) -> decode
com.nostra13.universalimageloader.core.decode.ImageDecodingInfo -> com.nostra13.universalimageloader.core.decode.ImageDecodingInfo:
    java.lang.String imageKey -> imageKey
    java.lang.String imageUri -> imageUri
    java.lang.String originalImageUri -> originalImageUri
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> targetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> imageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType viewScaleType -> viewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> downloader
    java.lang.Object extraForDownloader -> extraForDownloader
    boolean considerExifParams -> considerExifParams
    android.graphics.BitmapFactory$Options decodingOptions -> decodingOptions
    void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions
    void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions10
    void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions11
    java.lang.String getImageKey() -> getImageKey
    java.lang.String getImageUri() -> getImageUri
    java.lang.String getOriginalImageUri() -> getOriginalImageUri
    com.nostra13.universalimageloader.core.assist.ImageSize getTargetSize() -> getTargetSize
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    com.nostra13.universalimageloader.core.assist.ViewScaleType getViewScaleType() -> getViewScaleType
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    boolean shouldConsiderExifParams() -> shouldConsiderExifParams
    android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
com.nostra13.universalimageloader.core.display.BitmapDisplayer -> com.nostra13.universalimageloader.core.display.BitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer -> com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer:
    int durationMillis -> durationMillis
    boolean animateFromNetwork -> animateFromNetwork
    boolean animateFromDisk -> animateFromDisk
    boolean animateFromMemory -> animateFromMemory
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
    void animate(android.view.View,int) -> animate
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer:
    int cornerRadius -> cornerRadius
    int margin -> margin
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable -> com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer$RoundedDrawable:
    float cornerRadius -> cornerRadius
    int margin -> margin
    android.graphics.RectF mRect -> mRect
    android.graphics.RectF mBitmapRect -> mBitmapRect
    android.graphics.BitmapShader bitmapShader -> bitmapShader
    android.graphics.Paint paint -> paint
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer -> com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer$RoundedVignetteDrawable -> com.nostra13.universalimageloader.core.display.RoundedVignetteBitmapDisplayer$RoundedVignetteDrawable:
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer:
    void display(android.graphics.Bitmap,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.LoadedFrom) -> display
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> com.nostra13.universalimageloader.core.download.BaseImageDownloader:
    int DEFAULT_HTTP_CONNECT_TIMEOUT -> DEFAULT_HTTP_CONNECT_TIMEOUT
    int DEFAULT_HTTP_READ_TIMEOUT -> DEFAULT_HTTP_READ_TIMEOUT
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String ALLOWED_URI_CHARS -> ALLOWED_URI_CHARS
    int MAX_REDIRECT_COUNT -> MAX_REDIRECT_COUNT
    java.lang.String CONTENT_CONTACTS_URI_PREFIX -> CONTENT_CONTACTS_URI_PREFIX
    java.lang.String ERROR_UNSUPPORTED_SCHEME -> ERROR_UNSUPPORTED_SCHEME
    android.content.Context context -> context
    int connectTimeout -> connectTimeout
    int readTimeout -> readTimeout
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
    java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object) -> createConnection
    java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object) -> getStreamFromFile
    java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object) -> getStreamFromContent
    java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object) -> getStreamFromAssets
    java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object) -> getStreamFromDrawable
    java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object) -> getStreamFromOtherSource
com.nostra13.universalimageloader.core.download.BaseImageDownloader$1 -> com.nostra13.universalimageloader.core.download.BaseImageDownloader$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme
com.nostra13.universalimageloader.core.download.ImageDownloader -> com.nostra13.universalimageloader.core.download.ImageDownloader:
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme -> com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme:
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTP -> HTTP
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTPS -> HTTPS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE -> FILE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme CONTENT -> CONTENT
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS -> ASSETS
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE -> DRAWABLE
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme UNKNOWN -> UNKNOWN
    java.lang.String scheme -> scheme
    java.lang.String uriPrefix -> uriPrefix
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] $VALUES -> $VALUES
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> ofUri
    boolean belongsTo(java.lang.String) -> belongsTo
    java.lang.String wrap(java.lang.String) -> wrap
    java.lang.String crop(java.lang.String) -> crop
com.nostra13.universalimageloader.core.imageaware.ImageAware -> com.nostra13.universalimageloader.core.imageaware.ImageAware:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ImageViewAware -> com.nostra13.universalimageloader.core.imageaware.ImageViewAware:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.widget.ImageView getWrappedView() -> getWrappedView
    void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> setImageDrawableInto
    void setImageBitmapInto(android.graphics.Bitmap,android.view.View) -> setImageBitmapInto
    int getImageViewFieldValue(java.lang.Object,java.lang.String) -> getImageViewFieldValue
    android.view.View getWrappedView() -> getWrappedView
com.nostra13.universalimageloader.core.imageaware.NonViewAware -> com.nostra13.universalimageloader.core.imageaware.NonViewAware:
    java.lang.String imageUri -> imageUri
    com.nostra13.universalimageloader.core.assist.ImageSize imageSize -> imageSize
    com.nostra13.universalimageloader.core.assist.ViewScaleType scaleType -> scaleType
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
com.nostra13.universalimageloader.core.imageaware.ViewAware -> com.nostra13.universalimageloader.core.imageaware.ViewAware:
    java.lang.String WARN_CANT_SET_DRAWABLE -> WARN_CANT_SET_DRAWABLE
    java.lang.String WARN_CANT_SET_BITMAP -> WARN_CANT_SET_BITMAP
    java.lang.ref.Reference viewRef -> viewRef
    boolean checkActualViewSize -> checkActualViewSize
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.nostra13.universalimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    android.view.View getWrappedView() -> getWrappedView
    boolean isCollected() -> isCollected
    int getId() -> getId
    boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawableInto(android.graphics.drawable.Drawable,android.view.View) -> setImageDrawableInto
    void setImageBitmapInto(android.graphics.Bitmap,android.view.View) -> setImageBitmapInto
com.nostra13.universalimageloader.core.listener.ImageLoadingListener -> com.nostra13.universalimageloader.core.listener.ImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener -> com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener:
    void onProgressUpdate(java.lang.String,android.view.View,int,int) -> onProgressUpdate
com.nostra13.universalimageloader.core.listener.PauseOnScrollListener -> com.nostra13.universalimageloader.core.listener.PauseOnScrollListener:
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    boolean pauseOnScroll -> pauseOnScroll
    boolean pauseOnFling -> pauseOnFling
    android.widget.AbsListView$OnScrollListener externalListener -> externalListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener -> com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener:
    void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> onLoadingFailed
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
com.nostra13.universalimageloader.core.process.BitmapProcessor -> com.nostra13.universalimageloader.core.process.BitmapProcessor:
    android.graphics.Bitmap process(android.graphics.Bitmap) -> process
com.nostra13.universalimageloader.utils.DiskCacheUtils -> com.nostra13.universalimageloader.utils.DiskCacheUtils:
    java.io.File findInCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiskCache) -> findInCache
    boolean removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.disc.DiskCache) -> removeFromCache
com.nostra13.universalimageloader.utils.ImageSizeUtils -> com.nostra13.universalimageloader.utils.ImageSizeUtils:
    int DEFAULT_MAX_BITMAP_DIMENSION -> DEFAULT_MAX_BITMAP_DIMENSION
    com.nostra13.universalimageloader.core.assist.ImageSize maxBitmapSize -> maxBitmapSize
    com.nostra13.universalimageloader.core.assist.ImageSize defineTargetSizeForView(com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.assist.ImageSize) -> defineTargetSizeForView
    int computeImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageSampleSize
    int computeMinImageSampleSize(com.nostra13.universalimageloader.core.assist.ImageSize) -> computeMinImageSampleSize
    float computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ViewScaleType,boolean) -> computeImageScale
com.nostra13.universalimageloader.utils.ImageSizeUtils$1 -> com.nostra13.universalimageloader.utils.ImageSizeUtils$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType -> $SwitchMap$com$nostra13$universalimageloader$core$assist$ViewScaleType
com.nostra13.universalimageloader.utils.IoUtils -> com.nostra13.universalimageloader.utils.IoUtils:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int CONTINUE_LOADING_PERCENTAGE -> CONTINUE_LOADING_PERCENTAGE
    boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener) -> copyStream
    boolean copyStream(java.io.InputStream,java.io.OutputStream,com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int) -> copyStream
    boolean shouldStopLoading(com.nostra13.universalimageloader.utils.IoUtils$CopyListener,int,int) -> shouldStopLoading
    void readAndCloseStream(java.io.InputStream) -> readAndCloseStream
    void closeSilently(java.io.Closeable) -> closeSilently
com.nostra13.universalimageloader.utils.IoUtils$CopyListener -> com.nostra13.universalimageloader.utils.IoUtils$CopyListener:
    boolean onBytesCopied(int,int) -> onBytesCopied
com.nostra13.universalimageloader.utils.L -> com.nostra13.universalimageloader.utils.L:
    java.lang.String LOG_FORMAT -> LOG_FORMAT
    boolean writeDebugLogs -> writeDebugLogs
    boolean writeLogs -> writeLogs
    void enableLogging() -> enableLogging
    void disableLogging() -> disableLogging
    void writeDebugLogs(boolean) -> writeDebugLogs
    void writeLogs(boolean) -> writeLogs
    void d(java.lang.String,java.lang.Object[]) -> d
    void i(java.lang.String,java.lang.Object[]) -> i
    void w(java.lang.String,java.lang.Object[]) -> w
    void e(java.lang.Throwable) -> e
    void e(java.lang.String,java.lang.Object[]) -> e
    void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
com.nostra13.universalimageloader.utils.MemoryCacheUtils -> com.nostra13.universalimageloader.utils.MemoryCacheUtils:
    java.lang.String URI_AND_SIZE_SEPARATOR -> URI_AND_SIZE_SEPARATOR
    java.lang.String WIDTH_AND_HEIGHT_SEPARATOR -> WIDTH_AND_HEIGHT_SEPARATOR
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> generateKey
    java.util.Comparator createFuzzyKeyComparator() -> createFuzzyKeyComparator
    java.util.List findCachedBitmapsForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCache) -> findCachedBitmapsForImageUri
    java.util.List findCacheKeysForImageUri(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCache) -> findCacheKeysForImageUri
    void removeFromCache(java.lang.String,com.nostra13.universalimageloader.cache.memory.MemoryCache) -> removeFromCache
com.nostra13.universalimageloader.utils.MemoryCacheUtils$1 -> com.nostra13.universalimageloader.utils.MemoryCacheUtils$1:
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.utils.StorageUtils -> com.nostra13.universalimageloader.utils.StorageUtils:
    java.lang.String EXTERNAL_STORAGE_PERMISSION -> EXTERNAL_STORAGE_PERMISSION
    java.lang.String INDIVIDUAL_DIR_NAME -> INDIVIDUAL_DIR_NAME
    java.io.File getCacheDirectory(android.content.Context) -> getCacheDirectory
    java.io.File getCacheDirectory(android.content.Context,boolean) -> getCacheDirectory
    java.io.File getIndividualCacheDirectory(android.content.Context) -> getIndividualCacheDirectory
    java.io.File getOwnCacheDirectory(android.content.Context,java.lang.String) -> getOwnCacheDirectory
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    boolean hasExternalStoragePermission(android.content.Context) -> hasExternalStoragePermission
com.umeng.analytics.AnalyticsConfig -> com.umeng.a.a:
    java.lang.String a -> p
    java.lang.String b -> q
    java.lang.String mWrapperType -> a
    java.lang.String mWrapperVersion -> b
    int mVerticalType -> c
    java.lang.String GPU_VENDER -> d
    java.lang.String GPU_RENDERER -> e
    com.umeng.analytics.Gender sGender -> f
    int sAge -> g
    java.lang.String sId -> h
    java.lang.String sSource -> i
    double[] c -> r
    int[] d -> s
    boolean ACTIVITY_DURATION_OPEN -> j
    boolean COMPRESS_DATA -> k
    boolean ENABLE_MEMORY_BUFFER -> l
    boolean CATCH_EXCEPTION -> m
    long kContinueSessionMillis -> n
    boolean UPDATE_IN_MAIN_PROCESS -> o
    java.lang.String getAppkey(android.content.Context) -> a
    java.lang.String getChannel(android.content.Context) -> b
    double[] getLocation() -> a
    void setReportPolicy(int,int) -> a
    int[] getReportPolicy(android.content.Context) -> c
com.umeng.analytics.Gender -> com.umeng.a.b:
    com.umeng.analytics.Gender Male -> a
    com.umeng.analytics.Gender Female -> b
    com.umeng.analytics.Gender Unknown -> c
    int value -> d
    int[] a -> e
    com.umeng.analytics.Gender[] b -> f
    u.aly.ap transGender(com.umeng.analytics.Gender) -> a
    com.umeng.analytics.Gender[] values() -> values
    com.umeng.analytics.Gender valueOf(java.lang.String) -> valueOf
    int[] a() -> a
com.umeng.analytics.Gender$1 -> com.umeng.a.c:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$2 -> com.umeng.a.d:
    java.lang.String toString() -> toString
com.umeng.analytics.Gender$3 -> com.umeng.a.e:
    java.lang.String toString() -> toString
com.umeng.analytics.MobclickAgent -> com.umeng.a.f:
    com.umeng.analytics.d b -> a
    void onPause(android.content.Context) -> a
    void onResume(android.content.Context) -> b
    void updateOnlineConfig(android.content.Context) -> c
com.umeng.analytics.ReportPolicy -> com.umeng.a.g:
com.umeng.analytics.ReportPolicy$a -> com.umeng.a.g$a:
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$b -> com.umeng.a.g$b:
    long a -> a
    long b -> b
    u.aly.w c -> c
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$c -> com.umeng.a.g$c:
    int a -> a
    u.aly.q b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$d -> com.umeng.a.g$d:
    long a -> a
    u.aly.w b -> b
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$e -> com.umeng.a.g$e:
    boolean a(boolean) -> a
com.umeng.analytics.ReportPolicy$f -> com.umeng.a.g$f:
    android.content.Context a -> a
    boolean a(boolean) -> a
com.umeng.analytics.a -> com.umeng.a.h:
    java.lang.String[] f -> a
    java.lang.String[] g -> b
com.umeng.analytics.b -> com.umeng.a.i:
    boolean a(android.content.Context) -> a
com.umeng.analytics.c -> com.umeng.a.j:
    void a() -> a
    void b() -> b
com.umeng.analytics.d -> com.umeng.a.k:
    com.umeng.analytics.onlineconfig.a a -> a
    android.content.Context b -> b
    com.umeng.analytics.c c -> c
    u.aly.m d -> d
    u.aly.z e -> e
    u.aly.v f -> f
    u.aly.n g -> g
    u.aly.k h -> h
    boolean i -> i
    void f(android.content.Context) -> d
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void g(android.content.Context) -> e
    void h(android.content.Context) -> f
    void a(java.lang.Throwable) -> a
    void a(com.umeng.analytics.d,android.content.Context) -> a
    void b(com.umeng.analytics.d,android.content.Context) -> b
com.umeng.analytics.d$1 -> com.umeng.a.l:
    com.umeng.analytics.d a -> a
    android.content.Context b -> b
    void a() -> a
com.umeng.analytics.d$2 -> com.umeng.a.m:
    com.umeng.analytics.d a -> a
    android.content.Context b -> b
    void a() -> a
com.umeng.analytics.e -> com.umeng.a.n:
    java.util.concurrent.ExecutorService a -> a
    long b -> b
    java.util.concurrent.ExecutorService c -> c
    void a(java.lang.Runnable) -> a
    void a() -> a
    void b(java.lang.Runnable) -> b
com.umeng.analytics.f -> com.umeng.a.o:
    void run() -> run
    void a() -> a
com.umeng.analytics.g -> com.umeng.a.p:
    com.umeng.analytics.g a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    long d -> d
    long e -> e
    com.umeng.analytics.g a(android.content.Context) -> a
    boolean a(java.io.File) -> a
    int[] a() -> a
    void a(int,int) -> a
    byte[] b() -> b
    void a(byte[]) -> a
    void c() -> c
    byte[] d() -> d
    void b(byte[]) -> b
    void e() -> e
    boolean f() -> f
    android.content.SharedPreferences g() -> g
    java.lang.String l() -> h
    java.lang.String m() -> i
    java.lang.String n() -> j
com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener -> com.umeng.a.a.a:
    void onDataReceived(org.json.JSONObject) -> a
com.umeng.analytics.onlineconfig.a -> com.umeng.a.a.b:
    java.lang.String h -> a
    java.lang.String i -> b
    java.lang.String j -> c
    com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener k -> d
    com.umeng.analytics.onlineconfig.c l -> e
    long m -> f
    void a(android.content.Context) -> a
    void a(com.umeng.analytics.onlineconfig.c) -> a
    void a(org.json.JSONObject) -> a
    org.json.JSONObject b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
    void a(com.umeng.analytics.onlineconfig.a,org.json.JSONObject) -> a
    org.json.JSONObject a(com.umeng.analytics.onlineconfig.a,android.content.Context) -> a
    com.umeng.analytics.onlineconfig.c a(com.umeng.analytics.onlineconfig.a) -> a
    void a(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
com.umeng.analytics.onlineconfig.a$a -> com.umeng.a.a.b$a:
    org.json.JSONObject e -> e
    com.umeng.analytics.onlineconfig.a a -> a
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
com.umeng.analytics.onlineconfig.a$b -> com.umeng.a.a.b$b:
    android.content.Context a -> a
    com.umeng.analytics.onlineconfig.a b -> b
    void run() -> run
    boolean a() -> a
    void b() -> b
com.umeng.analytics.onlineconfig.b -> com.umeng.a.a.c:
    org.json.JSONObject a -> a
    boolean b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(org.json.JSONObject) -> a
    void a() -> a
com.umeng.analytics.onlineconfig.c -> com.umeng.a.a.d:
    void a(int,long) -> a
com.umeng.common.message.DeviceConfig -> com.umeng.b.a.a:
    java.lang.String a -> a
    java.lang.String getAppVersionCode(android.content.Context) -> a
    java.lang.String getAppVersionName(android.content.Context) -> b
    boolean checkPermission(android.content.Context,java.lang.String) -> a
    java.lang.String getCPU() -> a
    java.lang.String getDeviceId(android.content.Context) -> c
    java.lang.String getDeviceIdMD5(android.content.Context) -> d
    java.lang.String[] getNetworkAccessMode(android.content.Context) -> e
    int getTimeZone(android.content.Context) -> f
    java.lang.String[] getLocaleInfo(android.content.Context) -> g
    java.util.Locale a(android.content.Context) -> o
    java.lang.String getAppkey(android.content.Context) -> h
    java.lang.String getMetaData(android.content.Context,java.lang.String) -> b
    java.lang.String getMac(android.content.Context) -> i
    java.lang.String getResolution(android.content.Context) -> j
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String getOperator(android.content.Context) -> k
    java.lang.String getChannel(android.content.Context) -> l
    java.lang.String getPackageName(android.content.Context) -> m
    java.lang.String getUtdid(android.content.Context) -> n
com.umeng.common.message.Log -> com.umeng.b.a.b:
    boolean LOG -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> c
com.umeng.common.message.b -> com.umeng.b.a.c:
    java.lang.String C -> A
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    long f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    int s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String D -> B
    java.lang.String E -> C
    java.lang.String F -> D
    java.lang.String G -> E
    java.lang.String H -> F
    java.lang.String I -> G
    java.lang.String J -> H
    java.lang.String K -> I
    java.lang.String L -> J
    java.lang.String M -> K
    java.lang.String N -> L
    java.lang.String O -> M
    java.lang.String P -> N
    java.lang.String Q -> O
    java.lang.String R -> P
    java.lang.String S -> Q
    java.lang.String T -> R
    java.lang.String U -> S
    java.lang.String V -> T
    java.lang.String W -> U
    java.lang.String X -> V
    java.lang.String Y -> W
    java.lang.String Z -> X
    java.lang.String aa -> Y
    java.lang.String ab -> Z
    java.lang.String ac -> aa
    void j(org.json.JSONObject) -> b
    void k(org.json.JSONObject) -> c
    void l(org.json.JSONObject) -> d
    void m(org.json.JSONObject) -> e
    void n(org.json.JSONObject) -> f
    void o(org.json.JSONObject) -> g
    void p(org.json.JSONObject) -> h
    void b(org.json.JSONObject) -> a
    void a(android.content.Context,java.lang.String[]) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void e(android.content.Context) -> e
    void b(android.content.Context,java.lang.String[]) -> b
com.umeng.common.message.c -> com.umeng.b.a.d:
    java.lang.String a -> a
    com.umeng.common.message.c b -> b
    android.content.Context c -> c
    java.lang.Class d -> d
    java.lang.Class e -> e
    java.lang.Class f -> f
    java.lang.Class g -> g
    java.lang.Class h -> h
    java.lang.Class i -> i
    java.lang.Class j -> j
    java.lang.Class k -> k
    com.umeng.common.message.c a(android.content.Context) -> a
    int c(java.lang.String) -> a
    int h(java.lang.String) -> b
    int a(java.lang.Class,java.lang.String) -> a
com.umeng.fb.ContactActivity -> com.umeng.fb.ContactActivity:
    android.widget.ImageView b -> a
    android.widget.ImageView c -> b
    android.widget.EditText d -> c
    com.umeng.fb.FeedbackAgent e -> d
    android.widget.TextView f -> e
    void onCreate(android.os.Bundle) -> onCreate
    void a() -> a
    com.umeng.fb.FeedbackAgent a(com.umeng.fb.ContactActivity) -> a
    android.widget.EditText b(com.umeng.fb.ContactActivity) -> b
com.umeng.fb.ContactActivity$1 -> com.umeng.fb.a:
    com.umeng.fb.ContactActivity a -> a
    void onClick(android.view.View) -> onClick
com.umeng.fb.ContactActivity$2 -> com.umeng.fb.b:
    com.umeng.fb.ContactActivity a -> a
    void onClick(android.view.View) -> onClick
com.umeng.fb.ContactActivity$3 -> com.umeng.fb.c:
    com.umeng.fb.ContactActivity a -> a
    void a(android.app.Activity) -> a
com.umeng.fb.ConversationActivity -> com.umeng.fb.ConversationActivity:
    java.lang.String e -> e
    com.umeng.fb.FeedbackAgent f -> f
    com.umeng.fb.model.Conversation g -> g
    com.umeng.fb.ConversationActivity$a h -> h
    android.widget.ListView i -> i
    android.widget.RelativeLayout a -> a
    int b -> b
    int c -> c
    android.widget.EditText d -> d
    int j -> j
    void onCreate(android.os.Bundle) -> onCreate
    void b() -> b
    void a(android.view.View) -> a
    void a() -> a
    com.umeng.fb.model.Conversation a(com.umeng.fb.ConversationActivity) -> a
    android.widget.ListView b(com.umeng.fb.ConversationActivity) -> b
    void a(com.umeng.fb.ConversationActivity,int) -> a
    int c(com.umeng.fb.ConversationActivity) -> c
    com.umeng.fb.ConversationActivity$a d(com.umeng.fb.ConversationActivity) -> d
com.umeng.fb.ConversationActivity$1 -> com.umeng.fb.d:
    com.umeng.fb.ConversationActivity a -> a
    void onClick(android.view.View) -> onClick
    com.umeng.fb.ConversationActivity a(com.umeng.fb.ConversationActivity$1) -> a
com.umeng.fb.ConversationActivity$1$1 -> com.umeng.fb.e:
    com.umeng.fb.ConversationActivity$1 a -> a
    void a(android.app.Activity) -> a
com.umeng.fb.ConversationActivity$2 -> com.umeng.fb.f:
    com.umeng.fb.ConversationActivity a -> a
    void onClick(android.view.View) -> onClick
com.umeng.fb.ConversationActivity$3 -> com.umeng.fb.g:
    com.umeng.fb.ConversationActivity a -> a
    void onClick(android.view.View) -> onClick
com.umeng.fb.ConversationActivity$4 -> com.umeng.fb.h:
    com.umeng.fb.ConversationActivity a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void a(android.view.MotionEvent) -> a
com.umeng.fb.ConversationActivity$5 -> com.umeng.fb.i:
    int b -> b
    com.umeng.fb.ConversationActivity a -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.umeng.fb.ConversationActivity$6 -> com.umeng.fb.j:
    com.umeng.fb.ConversationActivity a -> a
    void onSendUserReply(java.util.List) -> a
    void onReceiveDevReply(java.util.List) -> b
com.umeng.fb.ConversationActivity$a -> com.umeng.fb.ConversationActivity$a:
    android.content.Context a -> a
    android.view.LayoutInflater b -> b
    com.umeng.fb.ConversationActivity c -> c
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
com.umeng.fb.ConversationActivity$a$a -> com.umeng.fb.ConversationActivity$a$a:
    android.widget.TextView a -> a
    android.widget.TextView b -> b
    com.umeng.fb.ConversationActivity$a c -> c
com.umeng.fb.FeedbackAgent -> com.umeng.fb.k:
    java.lang.String a -> a
    android.content.Context b -> b
    com.umeng.fb.model.Store c -> c
    java.util.List getAllConversationIds() -> a
    com.umeng.fb.model.Conversation getConversationById(java.lang.String) -> a
    com.umeng.fb.model.Conversation getDefaultConversation() -> b
    void sync() -> c
    void a(java.lang.String) -> b
    com.umeng.fb.model.UserInfo getUserInfo() -> d
    void setUserInfo(com.umeng.fb.model.UserInfo) -> a
    long getUserInfoLastUpdateAt() -> e
    void startFeedbackActivity() -> f
    android.content.Context a(com.umeng.fb.FeedbackAgent) -> a
    void a(com.umeng.fb.FeedbackAgent,java.lang.String) -> a
com.umeng.fb.FeedbackAgent$1 -> com.umeng.fb.l:
    com.umeng.fb.FeedbackAgent a -> a
    void onSendUserReply(java.util.List) -> a
    void onReceiveDevReply(java.util.List) -> b
com.umeng.fb.model.Conversation -> com.umeng.fb.model.Conversation:
    java.lang.String b -> b
    android.content.Context c -> c
    java.util.concurrent.ExecutorService d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.util.List a -> a
    java.lang.String g -> g
    java.util.Map h -> h
    java.util.List getReplyList() -> a
    void addUserReply(java.lang.String) -> a
    void b() -> d
    org.json.JSONArray a() -> b
    java.lang.String getId() -> c
    void sync(com.umeng.fb.model.Conversation$SyncListener) -> a
    java.util.Map a(com.umeng.fb.model.Conversation) -> a
    void b(com.umeng.fb.model.Conversation) -> b
    java.lang.String c(com.umeng.fb.model.Conversation) -> c
    android.content.Context d(com.umeng.fb.model.Conversation) -> d
    java.lang.String e(com.umeng.fb.model.Conversation) -> e
com.umeng.fb.model.Conversation$1 -> com.umeng.fb.model.a:
    com.umeng.fb.model.Conversation a -> a
    android.os.Handler b -> b
    void run() -> run
com.umeng.fb.model.Conversation$MessageWrapper -> com.umeng.fb.model.Conversation$a:
    java.util.List a -> a
    java.util.List b -> b
com.umeng.fb.model.Conversation$SyncHandler -> com.umeng.fb.model.Conversation$SyncHandler:
    com.umeng.fb.model.Conversation$SyncListener a -> a
    com.umeng.fb.model.Conversation d -> b
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.fb.model.Conversation$SyncListener -> com.umeng.fb.model.Conversation$b:
    void onReceiveDevReply(java.util.List) -> b
    void onSendUserReply(java.util.List) -> a
com.umeng.fb.model.DevReply -> com.umeng.fb.model.b:
    java.lang.String a -> a
    org.json.JSONObject toJson() -> a
com.umeng.fb.model.Reply -> com.umeng.fb.model.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.umeng.fb.model.Reply$TYPE g -> g
    java.util.Date h -> h
    com.umeng.fb.model.Reply$STATUS i -> i
    org.json.JSONObject toJson() -> a
    int compareTo(com.umeng.fb.model.Reply) -> a
    java.lang.String getContent() -> b
    java.util.Date getDatetime() -> c
    int compareTo(java.lang.Object) -> compareTo
com.umeng.fb.model.Reply$STATUS -> com.umeng.fb.model.c$a:
    com.umeng.fb.model.Reply$STATUS SENDING -> a
    com.umeng.fb.model.Reply$STATUS NOT_SENT -> b
    com.umeng.fb.model.Reply$STATUS SENT -> c
    java.lang.String a -> d
    com.umeng.fb.model.Reply$STATUS[] b -> e
    java.lang.String toString() -> toString
    com.umeng.fb.model.Reply$STATUS get(java.lang.String) -> a
    com.umeng.fb.model.Reply$STATUS[] values() -> values
    com.umeng.fb.model.Reply$STATUS valueOf(java.lang.String) -> valueOf
com.umeng.fb.model.Reply$TYPE -> com.umeng.fb.model.c$b:
    com.umeng.fb.model.Reply$TYPE NEW_FEEDBACK -> a
    com.umeng.fb.model.Reply$TYPE DEV_REPLY -> b
    com.umeng.fb.model.Reply$TYPE USER_REPLY -> c
    java.lang.String a -> d
    com.umeng.fb.model.Reply$TYPE[] b -> e
    java.lang.String toString() -> toString
    com.umeng.fb.model.Reply$TYPE get(java.lang.String) -> a
    com.umeng.fb.model.Reply$TYPE[] values() -> values
    com.umeng.fb.model.Reply$TYPE valueOf(java.lang.String) -> valueOf
com.umeng.fb.model.Store -> com.umeng.fb.model.d:
    java.lang.String a -> a
    com.umeng.fb.model.Store b -> b
    android.content.Context c -> c
    com.umeng.fb.model.Store getInstance(android.content.Context) -> a
    void saveCoversation(com.umeng.fb.model.Conversation) -> a
    void saveUserInfo(com.umeng.fb.model.UserInfo) -> a
    com.umeng.fb.model.UserInfo getUserInfo() -> a
    long getUserInfoLastUpdateAt() -> b
    long getUserInfoLastSyncAt() -> c
    com.umeng.fb.model.Conversation getConversationById(java.lang.String) -> a
    java.util.List getAllConversationIds() -> d
com.umeng.fb.model.UserInfo -> com.umeng.fb.model.e:
    java.lang.String e -> e
    int a -> a
    java.lang.String b -> b
    java.util.Map c -> c
    java.util.Map d -> d
    org.json.JSONObject toJson() -> a
    java.util.Map getContact() -> b
    void setContact(java.util.Map) -> a
com.umeng.fb.model.UserReply -> com.umeng.fb.model.f:
    org.json.JSONObject toJson() -> a
com.umeng.fb.model.UserTitleReply -> com.umeng.fb.model.g:
    java.lang.String a -> a
    org.json.JSONObject toJson() -> a
com.umeng.message.IUmengRegisterCallback -> com.umeng.message.IUmengRegisterCallback:
    void onRegistered(java.lang.String) -> onRegistered
com.umeng.message.IUmengUnregisterCallback -> com.umeng.message.IUmengUnregisterCallback:
    void onUnregistered(java.lang.String) -> onUnregistered
com.umeng.message.MessageSharedPrefs -> com.umeng.message.MessageSharedPrefs:
    android.content.Context a -> a
    android.content.SharedPreferences b -> b
    com.umeng.message.MessageSharedPrefs c -> c
    com.umeng.message.MessageSharedPrefs getInstance(android.content.Context) -> getInstance
    void setAppLaunchLogSentAt(long) -> setAppLaunchLogSentAt
    long getAppLaunchLogSentAt() -> getAppLaunchLogSentAt
    boolean hasAppLaunchLogSentToday() -> hasAppLaunchLogSentToday
    java.lang.String getPushIntentServiceClass() -> getPushIntentServiceClass
    boolean getMergeNotificaiton() -> getMergeNotificaiton
    java.lang.String getMessageAppKey() -> getMessageAppKey
    java.lang.String getMessageAppSecret() -> getMessageAppSecret
    java.lang.String getMessageChannel() -> getMessageChannel
    void setAppLaunchLogSendPolicy(int) -> setAppLaunchLogSendPolicy
    void setTagSendPolicy(int) -> setTagSendPolicy
    int getAppLaunchLogSendPolicy() -> getAppLaunchLogSendPolicy
    int a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    void e() -> e
    boolean g() -> f
    boolean a(java.lang.String) -> a
    boolean h() -> g
    boolean i() -> h
    boolean b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
com.umeng.message.MsgConstant -> com.umeng.message.MsgConstant:
    java.lang.String e -> b
    java.lang.String LOG_ENDPOINT -> LOG_ENDPOINT
    java.lang.String REGISTER_ENDPOINT -> REGISTER_ENDPOINT
    java.lang.String TAG_ENDPOINT -> TAG_ENDPOINT
    java.lang.String ALIAS_ENDPOINT -> ALIAS_ENDPOINT
    java.lang.String DELETE_ALIAS_ENDPOINT -> DELETE_ALIAS_ENDPOINT
    java.lang.String LAUNCH_ENDPOINT -> LAUNCH_ENDPOINT
    java.lang.String f -> c
    java.lang.String DEFAULT_INTENT_SERVICE_CLASS_NAME -> DEFAULT_INTENT_SERVICE_CLASS_NAME
    long a -> a
com.umeng.message.MsgLogStore -> com.umeng.message.MsgLogStore:
    com.umeng.message.MsgLogStore a -> a
    android.database.sqlite.SQLiteDatabase b -> b
    com.umeng.message.MsgLogStore$MsgLogStoreHelper c -> c
    android.content.Context d -> d
    com.umeng.message.MsgLogStore getInstance(android.content.Context) -> getInstance
    void a() -> a
    void a(java.io.File) -> a
    java.lang.String b(java.io.File) -> b
    boolean addLog(java.lang.String,int,long) -> addLog
    boolean removeLog(java.lang.String,int) -> removeLog
    java.util.ArrayList getMsgLogs(int) -> getMsgLogs
com.umeng.message.MsgLogStore$1 -> com.umeng.message.MsgLogStore$1:
    com.umeng.message.MsgLogStore a -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.umeng.message.MsgLogStore$MsgLog -> com.umeng.message.MsgLogStore$MsgLog:
    java.lang.String msgId -> msgId
    long time -> time
    int actionType -> actionType
    com.umeng.message.MsgLogStore a -> a
    android.content.ContentValues getContentValues() -> getContentValues
com.umeng.message.MsgLogStore$MsgLogStoreHelper -> com.umeng.message.MsgLogStore$MsgLogStoreHelper:
    com.umeng.message.MsgLogStore a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.umeng.message.NotificationProxyBroadcastReceiver -> com.umeng.message.NotificationProxyBroadcastReceiver:
    java.lang.String a -> a
    com.umeng.message.UHandler b -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.umeng.message.PushAgent -> com.umeng.message.PushAgent:
    com.umeng.message.PushAgent a -> a
    com.umeng.message.tag.TagManager b -> b
    android.content.Context c -> c
    boolean d -> d
    boolean DEBUG -> DEBUG
    java.lang.String e -> e
    com.umeng.message.UHandler f -> f
    com.umeng.message.UHandler g -> g
    com.umeng.message.IUmengRegisterCallback h -> h
    com.umeng.message.IUmengUnregisterCallback i -> i
    com.umeng.message.PushAgent getInstance(android.content.Context) -> getInstance
    void enable() -> enable
    boolean isEnabled() -> isEnabled
    com.umeng.message.UHandler getMessageHandler() -> getMessageHandler
    com.umeng.message.UHandler getNotificationClickHandler() -> getNotificationClickHandler
    java.lang.String getMessageSecret() -> getMessageSecret
    java.lang.String getMessageAppkey() -> getMessageAppkey
    java.lang.String getMessageChannel() -> getMessageChannel
    void onAppStart() -> onAppStart
    java.lang.String getPushIntentServiceClass() -> getPushIntentServiceClass
    int getNoDisturbStartHour() -> getNoDisturbStartHour
    int getNoDisturbStartMinute() -> getNoDisturbStartMinute
    int getNoDisturbEndHour() -> getNoDisturbEndHour
    int getNoDisturbEndMinute() -> getNoDisturbEndMinute
    void setAppLaunchByMessage() -> setAppLaunchByMessage
    boolean isAppLaunchByMessage() -> isAppLaunchByMessage
    boolean getMergeNotificaiton() -> getMergeNotificaiton
    com.umeng.message.IUmengRegisterCallback getRegisterCallback() -> getRegisterCallback
    com.umeng.message.IUmengUnregisterCallback getUnregisterCallback() -> getUnregisterCallback
com.umeng.message.RegistrationReceiver -> com.umeng.message.RegistrationReceiver:
    java.lang.String a(android.content.Context) -> a
com.umeng.message.UHandler -> com.umeng.message.UHandler:
    void handleMessage(android.content.Context,com.umeng.message.entity.UMessage) -> handleMessage
com.umeng.message.UTrack -> com.umeng.message.UTrack:
    java.lang.String a -> a
    org.json.JSONObject b -> b
    com.umeng.message.UTrack c -> c
    java.util.concurrent.ScheduledThreadPoolExecutor d -> d
    android.content.Context e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    com.umeng.message.UTrack getInstance(android.content.Context) -> getInstance
    void a(com.umeng.message.entity.UMessage) -> a
    void trackMsgClick(com.umeng.message.entity.UMessage) -> trackMsgClick
    void trackMsgDismissed(com.umeng.message.entity.UMessage) -> trackMsgDismissed
    void a(java.lang.String,int,long) -> a
    void b(java.lang.String,int,long) -> b
    void sendCachedMsgLog(long) -> sendCachedMsgLog
    void trackAppLaunch(long) -> trackAppLaunch
    void trackRegister() -> trackRegister
    org.json.JSONObject a(org.json.JSONObject,java.lang.String) -> a
    void b() -> b
    boolean c() -> c
    java.lang.String d() -> d
    org.json.JSONObject e() -> e
    void a(com.umeng.message.UTrack,java.lang.String,int,long) -> a
    android.content.Context a(com.umeng.message.UTrack) -> a
    java.lang.String a() -> a
    boolean a(boolean) -> a
    org.json.JSONObject b(com.umeng.message.UTrack) -> b
    org.json.JSONObject a(com.umeng.message.UTrack,org.json.JSONObject,java.lang.String) -> a
    boolean b(boolean) -> b
    java.lang.String c(com.umeng.message.UTrack) -> c
    boolean c(boolean) -> c
com.umeng.message.UTrack$1 -> com.umeng.message.UTrack$1:
    java.lang.String a -> a
    int b -> b
    long c -> c
    com.umeng.message.UTrack d -> d
    void run() -> run
com.umeng.message.UTrack$2 -> com.umeng.message.UTrack$2:
    com.umeng.message.UTrack a -> a
    void run() -> run
com.umeng.message.UTrack$3 -> com.umeng.message.UTrack$3:
    com.umeng.message.UTrack a -> a
    void run() -> run
com.umeng.message.UTrack$4 -> com.umeng.message.UTrack$4:
    com.umeng.message.UTrack a -> a
    void run() -> run
com.umeng.message.UmengBaseIntentService -> com.umeng.message.UmengBaseIntentService:
    java.lang.String a -> a
    boolean shouldProcessMessage(android.content.Context,android.content.Intent) -> a
    void onMessage(android.content.Context,android.content.Intent) -> b
    void onError(android.content.Context,java.lang.String) -> a
    void onRegistered(android.content.Context,java.lang.String) -> b
    void onUnregistered(android.content.Context,java.lang.String) -> c
    java.lang.Class getAgooService() -> a
com.umeng.message.UmengBroadcastReceiver -> com.umeng.message.UmengBroadcastReceiver:
    java.lang.String a(android.content.Context) -> a
com.umeng.message.UmengDownloadResourceService -> com.umeng.message.UmengDownloadResourceService:
    java.lang.String TAG -> TAG
    java.util.concurrent.ScheduledThreadPoolExecutor a -> a
    android.content.Context b -> b
    java.lang.Thread m -> d
    java.util.ArrayList c -> c
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void notification(com.umeng.message.entity.UMessage) -> notification
    void downloadResource(com.umeng.message.entity.UMessage,int) -> downloadResource
    void setAlarm(com.umeng.message.entity.UMessage,int) -> setAlarm
    void deleteAlarm(com.umeng.message.entity.UMessage,int) -> deleteAlarm
    android.app.PendingIntent a(com.umeng.message.entity.UMessage,int) -> a
    void close(java.io.Closeable) -> close
    void checkCache() -> checkCache
    void checkDir(java.io.File,long,long) -> checkDir
    long a(java.io.File) -> a
    void b(java.io.File,long) -> b
    java.lang.String getMessageResourceFolder(android.content.Context,com.umeng.message.entity.UMessage) -> getMessageResourceFolder
    void a(java.io.File,long) -> a
    java.lang.Thread a(java.lang.Thread) -> a
com.umeng.message.UmengDownloadResourceService$1 -> com.umeng.message.UmengDownloadResourceService$1:
    java.io.File a -> a
    long b -> b
    void run() -> run
com.umeng.message.UmengDownloadResourceService$DownloadResourceTask -> com.umeng.message.UmengDownloadResourceService$DownloadResourceTask:
    com.umeng.message.entity.UMessage a -> a
    java.util.ArrayList b -> b
    int c -> c
    com.umeng.message.UmengDownloadResourceService d -> d
    java.lang.Boolean a(java.lang.Void[]) -> a
    void a(java.lang.Boolean) -> a
    boolean download(java.lang.String) -> download
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.message.UmengIntentService -> com.umeng.message.UmengIntentService:
    java.lang.String a -> a
    void onMessage(android.content.Context,android.content.Intent) -> b
com.umeng.message.UmengMessageHandler -> com.umeng.message.UmengMessageHandler:
    int a -> a
    java.lang.String b -> b
    java.util.Date c -> c
    void handleMessage(android.content.Context,com.umeng.message.entity.UMessage) -> handleMessage
    void dealWithNotificationMessage(android.content.Context,com.umeng.message.entity.UMessage) -> dealWithNotificationMessage
    void a(android.content.Context,android.app.Notification) -> a
    void a(android.content.Context) -> a
    void dealWithCustomMessage(android.content.Context,com.umeng.message.entity.UMessage) -> dealWithCustomMessage
    android.app.PendingIntent getClickPendingIntent(android.content.Context,com.umeng.message.entity.UMessage) -> getClickPendingIntent
    android.app.PendingIntent getDismissPendingIntent(android.content.Context,com.umeng.message.entity.UMessage) -> getDismissPendingIntent
    boolean isInNoDisturbTime(android.content.Context) -> isInNoDisturbTime
    int getNotificationDefaults(android.content.Context,com.umeng.message.entity.UMessage) -> getNotificationDefaults
    boolean startDownloadResourceService(android.content.Context,com.umeng.message.entity.UMessage) -> startDownloadResourceService
    boolean a(android.content.Context,android.support.v4.app.NotificationCompat$Builder,com.umeng.message.entity.UMessage) -> a
    int getSmallIconId(android.content.Context,com.umeng.message.entity.UMessage) -> getSmallIconId
    android.graphics.Bitmap getLargeIcon(android.content.Context,com.umeng.message.entity.UMessage) -> getLargeIcon
    android.net.Uri getSound(android.content.Context,com.umeng.message.entity.UMessage) -> getSound
    android.app.Notification getNotification(android.content.Context,com.umeng.message.entity.UMessage) -> getNotification
com.umeng.message.UmengMessageHandler$1 -> com.umeng.message.UmengMessageHandler$1:
    android.os.PowerManager a -> a
    com.umeng.message.UmengMessageHandler b -> b
    boolean a() -> a
com.umeng.message.UmengNotificationClickHandler -> com.umeng.message.UmengNotificationClickHandler:
    java.lang.String a -> a
    void handleMessage(android.content.Context,com.umeng.message.entity.UMessage) -> handleMessage
    void openUrl(android.content.Context,com.umeng.message.entity.UMessage) -> openUrl
    void openActivity(android.content.Context,com.umeng.message.entity.UMessage) -> openActivity
    void launchApp(android.content.Context,com.umeng.message.entity.UMessage) -> launchApp
    void dealWithCustomAction(android.content.Context,com.umeng.message.entity.UMessage) -> dealWithCustomAction
    android.content.Intent a(android.content.Intent,com.umeng.message.entity.UMessage) -> a
com.umeng.message.UmengRegistrar -> com.umeng.message.UmengRegistrar:
    java.lang.String b -> a
    void register(android.content.Context,java.lang.String,java.lang.String) -> register
    void a(android.content.Context,boolean) -> a
    boolean isRegisteredToUmeng(android.content.Context) -> isRegisteredToUmeng
    void registerToUmeng(android.content.Context) -> registerToUmeng
    void checkRegisteredToUmeng(android.content.Context) -> checkRegisteredToUmeng
com.umeng.message.UmengService -> com.umeng.message.UmengService:
com.umeng.message.UmengUT -> com.umeng.message.UmengUT:
    boolean b -> a
    void start(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> start
    void stop(android.content.Context) -> stop
    void onCaughException(java.lang.Throwable) -> onCaughException
    void commitEvent(int,java.lang.Object,java.lang.Object) -> commitEvent
    void commitEvent(int,java.lang.Object,java.lang.Object,java.lang.Object) -> commitEvent
    void commitEvent(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String[]) -> commitEvent
    java.lang.String getUtdId(android.content.Context) -> getUtdId
com.umeng.message.entity.UMessage -> com.umeng.message.entity.UMessage:
    java.lang.String msg_id -> msg_id
    java.lang.String display_type -> display_type
    java.lang.String alias -> alias
    java.lang.String ticker -> ticker
    java.lang.String title -> title
    java.lang.String text -> text
    boolean play_vibrate -> play_vibrate
    boolean play_lights -> play_lights
    boolean play_sound -> play_sound
    boolean screen_on -> screen_on
    java.lang.String after_open -> after_open
    java.lang.String custom -> custom
    java.lang.String url -> url
    java.lang.String sound -> sound
    java.lang.String img -> img
    java.lang.String icon -> icon
    java.lang.String activity -> activity
    int builder_id -> builder_id
    java.util.Map extra -> extra
    org.json.JSONObject a -> a
    java.lang.String largeIcon -> largeIcon
    long random_min -> random_min
    org.json.JSONObject getRaw() -> getRaw
    boolean hasResourceFromInternet() -> hasResourceFromInternet
    boolean isLargeIconFromInternet() -> isLargeIconFromInternet
    boolean isSoundFromInternet() -> isSoundFromInternet
com.umeng.message.proguard.A -> com.umeng.message.proguard.A:
    float a -> a
    int a(float) -> a
com.umeng.message.proguard.C -> com.umeng.message.proguard.C:
    java.lang.String[] H -> a
    com.umeng.message.proguard.C$c K -> b
    java.net.HttpURLConnection L -> c
    java.net.URL M -> d
    java.lang.String N -> e
    com.umeng.message.proguard.C$g O -> f
    boolean P -> g
    boolean R -> h
    boolean S -> i
    int T -> j
    java.lang.String U -> k
    int V -> l
    java.lang.String v(java.lang.String) -> c
    com.umeng.message.proguard.C c(java.lang.CharSequence) -> c
    java.net.Proxy T() -> g
    java.net.HttpURLConnection U() -> h
    java.lang.String toString() -> toString
    java.net.HttpURLConnection a() -> a
    int c() -> c
    java.io.ByteArrayOutputStream m() -> b
    java.lang.String b(java.lang.String) -> b
    java.io.BufferedInputStream q() -> q
    java.io.InputStream r() -> r
    com.umeng.message.proguard.C a(java.lang.String,java.lang.String) -> a
    java.lang.String e(java.lang.String) -> e
    int g(java.lang.String) -> g
    int a(java.lang.String,int) -> a
    java.lang.String c(java.lang.String,java.lang.String) -> b
    java.lang.String x() -> x
    com.umeng.message.proguard.C r(java.lang.String) -> r
    com.umeng.message.proguard.C f(java.lang.String,java.lang.String) -> f
    int G() -> G
    com.umeng.message.proguard.C t(java.lang.String) -> t
    com.umeng.message.proguard.C H() -> H
    com.umeng.message.proguard.C a(java.io.InputStream,java.io.OutputStream) -> a
    com.umeng.message.proguard.C I() -> d
    com.umeng.message.proguard.C J() -> e
    com.umeng.message.proguard.C K() -> f
    com.umeng.message.proguard.C i(java.lang.CharSequence) -> i
    java.net.URL P() -> P
    java.lang.String Q() -> Q
    java.lang.String u(java.lang.String) -> a
    int a(com.umeng.message.proguard.C) -> a
com.umeng.message.proguard.C$b -> com.umeng.message.proguard.C$b:
    java.io.Closeable a -> a
    boolean b -> b
    void c() -> c
com.umeng.message.proguard.C$c -> com.umeng.message.proguard.C$c:
    com.umeng.message.proguard.C$c a -> a
    java.net.HttpURLConnection a(java.net.URL) -> a
    java.net.HttpURLConnection a(java.net.URL,java.net.Proxy) -> a
com.umeng.message.proguard.C$e -> com.umeng.message.proguard.C$e:
    java.io.IOException a() -> a
    java.lang.Throwable getCause() -> getCause
com.umeng.message.proguard.C$f -> com.umeng.message.proguard.C$f:
    java.lang.Object b() -> b
    void c() -> c
    java.lang.Object call() -> call
com.umeng.message.proguard.C$g -> com.umeng.message.proguard.C$g:
    java.nio.charset.CharsetEncoder a -> a
    com.umeng.message.proguard.C$g a(java.lang.String) -> a
com.umeng.message.proguard.L -> com.umeng.message.proguard.L:
    java.io.InputStream a -> a
    java.io.OutputStream b -> b
    com.umeng.message.proguard.C c -> c
    com.umeng.message.proguard.C a() -> a
    java.lang.Object b() -> b
com.umeng.message.proguard.N -> com.umeng.message.proguard.N:
    java.net.HttpURLConnection a(java.net.URL) -> a
    java.net.HttpURLConnection a(java.net.URL,java.net.Proxy) -> a
com.umeng.message.proguard.P -> com.umeng.message.proguard.P:
    void a(android.content.Context,java.lang.String,long,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    long c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    android.content.SharedPreferences f(android.content.Context) -> f
    android.content.SharedPreferences g(android.content.Context) -> g
    android.content.SharedPreferences x(android.content.Context) -> a
    java.lang.String h(android.content.Context) -> h
    void a(android.content.Context,java.lang.String) -> a
    void i(android.content.Context) -> i
    void j(android.content.Context) -> j
    int k(android.content.Context) -> k
    void a(android.content.Context,int) -> a
    boolean m(android.content.Context) -> m
    java.lang.String n(android.content.Context) -> n
    java.lang.String o(android.content.Context) -> o
    java.lang.String p(android.content.Context) -> p
    java.lang.String q(android.content.Context) -> q
    void b(android.content.Context,java.lang.String) -> b
    java.lang.String r(android.content.Context) -> r
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void s(android.content.Context) -> s
    void t(android.content.Context) -> t
    boolean a(android.content.Context,java.lang.String,boolean) -> a
    boolean u(android.content.Context) -> u
    boolean a(android.content.Context,boolean) -> a
    void a(android.content.Context,boolean,long) -> a
    boolean w(android.content.Context) -> w
    void a(android.content.Context,long,int) -> a
com.umeng.message.proguard.Q -> com.umeng.message.proguard.Q:
    com.umeng.message.proguard.R a -> a
    void a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
com.umeng.message.proguard.R -> com.umeng.message.proguard.R:
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
com.umeng.message.proguard.S -> com.umeng.message.proguard.S:
    void start(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> start
    void stop(android.content.Context) -> stop
    void onCaughException(java.lang.Throwable) -> onCaughException
    void commitEvent(int,java.lang.Object,java.lang.Object) -> commitEvent
    void commitEvent(int,java.lang.Object,java.lang.Object,java.lang.Object) -> commitEvent
    void commitEvent(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.String[]) -> commitEvent
    java.lang.String getUtdId(android.content.Context) -> getUtdId
com.umeng.message.proguard.T -> com.umeng.message.proguard.T:
    com.umeng.message.proguard.T a -> a
    com.umeng.message.proguard.S b -> b
    com.umeng.message.proguard.T a() -> a
    com.umeng.message.proguard.S a(android.content.Context) -> a
com.umeng.message.proguard.U -> com.umeng.message.proguard.U:
    com.umeng.message.proguard.S v -> a
    boolean w -> b
    void a(android.content.Context) -> a
    void a(java.lang.Throwable) -> a
    void b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,long) -> a
    void d(android.content.Context) -> d
    void f(android.content.Context) -> f
    void b(android.content.Context,java.lang.String) -> b
    void c(android.content.Context,java.lang.String) -> c
    void d(android.content.Context,java.lang.String) -> d
    void e(android.content.Context,java.lang.String) -> e
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void g(android.content.Context,java.lang.String) -> g
    void h(android.content.Context,java.lang.String) -> h
    void a(android.content.Context,long,long) -> a
    void a(android.content.Context,long,java.lang.String) -> a
    void a(android.content.Context,long,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,int,java.lang.String) -> a
    void g(android.content.Context) -> g
    void i(android.content.Context,java.lang.String) -> i
com.umeng.message.proguard.V -> com.umeng.message.proguard.V:
    boolean c -> a
    boolean d -> b
    java.util.logging.Logger e -> c
    boolean a() -> a
    void b() -> b
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    java.lang.String b(java.lang.Throwable) -> b
    java.lang.String c() -> c
    java.lang.String a(int) -> a
    java.lang.String a(long) -> a
    java.lang.String a(java.lang.Throwable) -> a
com.umeng.message.proguard.V$1 -> com.umeng.message.proguard.V$1:
com.umeng.message.proguard.V$a -> com.umeng.message.proguard.V$a:
    java.lang.String a -> a
    void a(java.util.logging.LogRecord) -> a
    java.lang.String format(java.util.logging.LogRecord) -> format
com.umeng.message.proguard.W -> com.umeng.message.proguard.W:
    com.umeng.message.proguard.Z f -> e
    java.lang.String g -> f
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void b(java.lang.String) -> b
    java.lang.String b() -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    java.lang.String d() -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void e() -> e
    boolean f() -> f
    void g() -> g
com.umeng.message.proguard.Z -> com.umeng.message.proguard.Z:
    void onHandleMessage(java.lang.String) -> onHandleMessage
    void onHandleError(java.lang.String) -> onHandleError
com.umeng.message.proguard.a -> com.umeng.message.proguard.a:
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    byte[] b(byte[]) -> b
    byte[] a(byte[],byte[]) -> a
    byte[] b(byte[],byte[]) -> b
    byte[] c(java.lang.String) -> c
    java.lang.String a(byte[]) -> a
    void a(java.lang.StringBuffer,byte) -> a
com.umeng.message.proguard.aA -> com.umeng.message.proguard.aA:
    void a(int,java.util.Map) -> a
    void a() -> a
    void a(int,java.util.Map,java.lang.Throwable) -> a
    void a(char[]) -> a
    void a(java.lang.String) -> a
com.umeng.message.proguard.aC -> com.umeng.message.proguard.aC:
    byte[] a() -> a
com.umeng.message.proguard.aE -> com.umeng.message.proguard.aE:
    byte[] a() -> a
com.umeng.message.proguard.aG -> com.umeng.message.proguard.aG:
    byte[] a() -> a
com.umeng.message.proguard.aI -> com.umeng.message.proguard.aI:
    java.lang.String a(android.content.Context) -> a
    int b(android.content.Context) -> b
com.umeng.message.proguard.aJ -> com.umeng.message.proguard.aJ:
    byte[] n -> a
    byte[] o -> b
    byte[] p -> c
    byte[] q -> d
    byte[] r -> e
    byte[] s -> f
    byte[] b(int) -> a
    int a(byte[],int,byte[],int,int) -> a
    byte[] b(byte[],int,int,int) -> b
    byte[] a(java.lang.String,int) -> a
com.umeng.message.proguard.aK -> com.umeng.message.proguard.aK:
    java.lang.String a -> a
    java.lang.String f -> b
    java.lang.String g -> c
    void a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
com.umeng.message.proguard.aL -> com.umeng.message.proguard.aL:
    android.content.Context a -> a
    void run() -> run
com.umeng.message.proguard.aM -> com.umeng.message.proguard.aM:
    java.lang.String a(long) -> a
com.umeng.message.proguard.aN -> com.umeng.message.proguard.aN:
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(java.io.InputStream,java.lang.String) -> a
    java.lang.String c(java.io.InputStream) -> c
    java.lang.String a(byte[]) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.umeng.message.proguard.aO -> com.umeng.message.proguard.aO:
    byte[] f -> a
    java.lang.ThreadLocal g -> b
    java.security.spec.AlgorithmParameterSpec h -> c
    java.security.SecureRandom i -> d
    java.lang.String a(java.lang.String,java.lang.String,int) -> a
    byte[] b(byte[],javax.crypto.spec.SecretKeySpec) -> a
    javax.crypto.Cipher a(javax.crypto.spec.SecretKeySpec,int) -> a
    javax.crypto.Cipher a() -> a
    javax.crypto.spec.SecretKeySpec a(byte[],int) -> a
    byte[] a(byte[]) -> a
    byte[] b(byte[]) -> b
com.umeng.message.proguard.aP -> com.umeng.message.proguard.aP:
    java.lang.String a -> a
    java.lang.String a(byte[]) -> a
com.umeng.message.proguard.aQ -> com.umeng.message.proguard.aQ:
    int a(byte[],int,int,int) -> a
    int a(long) -> a
    int a(long,java.lang.String) -> a
com.umeng.message.proguard.aR -> com.umeng.message.proguard.aR:
    void a(android.content.Context) -> a
    void a(android.content.Context,java.lang.Class) -> a
    void b(android.content.Context,java.lang.Class) -> b
com.umeng.message.proguard.aS -> com.umeng.message.proguard.aS:
    void a(android.content.Context,java.lang.Class) -> a
    void b(android.content.Context,java.lang.Class) -> b
    void a(android.content.Context) -> a
com.umeng.message.proguard.aT -> com.umeng.message.proguard.aT:
    int b -> a
    int a() -> a
    void a(java.lang.Runnable) -> a
com.umeng.message.proguard.aa -> com.umeng.message.proguard.aa:
    long n -> e
    long o -> f
    long p -> g
    long q -> h
    long r -> i
    long s -> j
    long t -> k
    long u -> l
    long v -> m
    long w -> n
    long x -> o
    long y -> p
    long z -> q
    long A -> r
    boolean B -> s
    com.umeng.message.proguard.aa$b C -> t
    com.umeng.message.proguard.aa$a D -> u
    org.android.agoo.net.mtop.MtopHttpChunked E -> v
    java.lang.String F -> w
    com.umeng.message.proguard.af G -> x
    org.android.agoo.helper.a H -> y
    int I -> z
    android.app.AlarmManager J -> A
    java.lang.String K -> B
    android.content.BroadcastReceiver P -> C
    void h() -> h
    void i() -> i
    void j() -> j
    void e() -> e
    void a(long,java.lang.String) -> a
    void b(long,java.lang.String) -> b
    void g(java.lang.String) -> g
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void h(java.lang.String) -> h
    void k() -> k
    long l() -> l
    void m() -> m
    long n() -> n
    void a(boolean) -> a
    void a(char[],long) -> a
    void a(int,java.util.Map) -> a
    boolean a(java.util.Map) -> a
    void o() -> o
    void p() -> p
    void q() -> q
    void g() -> g
    void c(long,java.lang.String) -> c
    void d(long,java.lang.String) -> d
    boolean f() -> f
    org.android.agoo.net.mtop.MtopHttpChunked a(com.umeng.message.proguard.aa) -> a
    long b(com.umeng.message.proguard.aa) -> b
    void a(com.umeng.message.proguard.aa,long,java.lang.String) -> a
    long c(com.umeng.message.proguard.aa) -> c
    int a(com.umeng.message.proguard.aa,int) -> a
    int d(com.umeng.message.proguard.aa) -> d
    void e(com.umeng.message.proguard.aa) -> e
    long a(com.umeng.message.proguard.aa,long) -> a
    void b(com.umeng.message.proguard.aa,long,java.lang.String) -> b
    void a(com.umeng.message.proguard.aa,java.lang.String) -> a
    void b(com.umeng.message.proguard.aa,java.lang.String) -> b
    void c(com.umeng.message.proguard.aa,long,java.lang.String) -> c
    void f(com.umeng.message.proguard.aa) -> f
    void a(com.umeng.message.proguard.aa,int,java.util.Map) -> a
    boolean g(com.umeng.message.proguard.aa) -> g
    void a(com.umeng.message.proguard.aa,char[],long) -> a
    long h(com.umeng.message.proguard.aa) -> h
    void i(com.umeng.message.proguard.aa) -> i
    long j(com.umeng.message.proguard.aa) -> j
    void d(com.umeng.message.proguard.aa,long,java.lang.String) -> d
    long k(com.umeng.message.proguard.aa) -> k
    java.lang.String l(com.umeng.message.proguard.aa) -> l
    long m(com.umeng.message.proguard.aa) -> m
    android.app.AlarmManager n(com.umeng.message.proguard.aa) -> n
    void a(com.umeng.message.proguard.aa,boolean) -> a
com.umeng.message.proguard.aa$a -> com.umeng.message.proguard.aa$a:
    android.content.IntentFilter c -> b
    android.app.PendingIntent d -> c
    android.content.Intent e -> d
    boolean f -> e
    long g -> f
    long h -> g
    com.umeng.message.proguard.aa a -> a
    void a() -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(long,long,long) -> a
    void b() -> b
    boolean a(com.umeng.message.proguard.aa$a) -> a
    long b(com.umeng.message.proguard.aa$a) -> b
    long c(com.umeng.message.proguard.aa$a) -> c
com.umeng.message.proguard.aa$b -> com.umeng.message.proguard.aa$b:
    android.content.IntentFilter j -> b
    android.app.PendingIntent k -> c
    android.content.Intent l -> d
    android.os.Handler m -> e
    android.os.HandlerThread n -> f
    boolean o -> g
    boolean p -> h
    long q -> i
    java.lang.String r -> j
    java.util.concurrent.locks.Lock s -> k
    com.umeng.message.proguard.aa a -> a
    void b() -> b
    void c() -> c
    void d() -> d
    boolean a(int,long) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void a(long) -> a
    void a(long,java.lang.String,boolean) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a() -> a
    void a(com.umeng.message.proguard.aa$b) -> a
com.umeng.message.proguard.ab -> com.umeng.message.proguard.ab:
    int b -> b
    com.umeng.message.proguard.aa a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.umeng.message.proguard.ac -> com.umeng.message.proguard.ac:
    long b -> b
    com.umeng.message.proguard.aa a -> a
    void a(int,java.util.Map) -> a
    void a() -> a
    void a(int,java.util.Map,java.lang.Throwable) -> a
    void a(char[]) -> a
    void a(java.lang.String) -> a
com.umeng.message.proguard.ad -> com.umeng.message.proguard.ad:
    com.umeng.message.proguard.aa a -> a
    void a(java.lang.String) -> a
    void a(int,java.lang.String) -> a
com.umeng.message.proguard.ae -> com.umeng.message.proguard.ae:
    android.content.Intent a -> a
    android.content.Context b -> b
    com.umeng.message.proguard.aa$a c -> c
    void run() -> run
    void a(long) -> a
com.umeng.message.proguard.af -> com.umeng.message.proguard.af:
    boolean a -> a
    java.lang.String b -> b
    long a() -> a
    long b() -> b
    long c() -> c
    long d() -> d
    long e() -> e
    long f() -> f
    long g() -> g
    long h() -> h
    long a(long) -> a
    long i() -> i
    long j() -> j
    long k() -> k
    long l() -> l
    long m() -> m
com.umeng.message.proguard.ag -> com.umeng.message.proguard.ag:
    java.lang.String A -> a
    int B -> b
    java.lang.String C -> c
    boolean D -> d
    java.lang.String E -> e
    void a(android.content.Context,android.net.NetworkInfo) -> a
    void b(android.content.Context) -> b
    boolean a(android.content.Context) -> a
    void b(java.lang.String) -> a
    boolean a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    int e() -> e
com.umeng.message.proguard.ai -> com.umeng.message.proguard.ai:
    int g -> a
    int h -> b
    org.apache.http.impl.client.DefaultHttpClient i -> c
    org.apache.http.protocol.HttpContext j -> d
    java.util.Map k -> e
    org.apache.http.impl.client.DefaultHttpClient getHttpClient() -> getHttpClient
    org.apache.http.protocol.HttpContext getHttpContext() -> getHttpContext
    java.lang.String a(java.lang.String,com.umeng.message.proguard.aq) -> a
    java.util.Map a(com.umeng.message.proguard.ai) -> a
com.umeng.message.proguard.ai$a -> com.umeng.message.proguard.ai$a:
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
com.umeng.message.proguard.aj -> com.umeng.message.proguard.aj:
    com.umeng.message.proguard.ai a -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.umeng.message.proguard.ak -> com.umeng.message.proguard.ak:
    com.umeng.message.proguard.ai a -> a
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.umeng.message.proguard.al -> com.umeng.message.proguard.al:
    java.util.concurrent.ThreadPoolExecutor b -> a
    java.util.Map c -> b
    void get(android.content.Context,java.lang.String,com.umeng.message.proguard.aq,com.umeng.message.proguard.an) -> get
    void get(android.content.Context,org.apache.http.HttpHost,java.lang.String,org.apache.http.Header[],com.umeng.message.proguard.aq,com.umeng.message.proguard.an) -> get
    void a(android.content.Context,org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.HttpHost,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.umeng.message.proguard.an) -> a
    org.apache.http.protocol.HttpContext getHttpContext() -> getHttpContext
    org.apache.http.impl.client.DefaultHttpClient getHttpClient() -> getHttpClient
com.umeng.message.proguard.am -> com.umeng.message.proguard.am:
    org.apache.http.impl.client.AbstractHttpClient b -> a
    org.apache.http.protocol.HttpContext c -> b
    org.apache.http.client.methods.HttpUriRequest d -> c
    com.umeng.message.proguard.an e -> d
    boolean f -> e
    int g -> f
    android.content.Context h -> g
    void run() -> run
    void a() -> a
    void b() -> b
com.umeng.message.proguard.an -> com.umeng.message.proguard.an:
    android.os.Handler a -> a
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onFailure(java.lang.Throwable) -> onFailure
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
    void a(java.lang.String) -> a
    void a(java.lang.Throwable,java.lang.String) -> a
    void a(java.lang.Throwable,byte[]) -> a
    void a() -> a
    void b() -> b
    void b(java.lang.String) -> b
    void b(java.lang.Throwable,java.lang.String) -> b
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    android.os.Message a(int,java.lang.Object) -> a
    void a(org.apache.http.HttpResponse) -> a
com.umeng.message.proguard.ao -> com.umeng.message.proguard.ao:
    com.umeng.message.proguard.an a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.message.proguard.ap -> com.umeng.message.proguard.ap:
    java.lang.String[] a -> a
    void a(byte[]) -> a
    void b(java.lang.Throwable,byte[]) -> b
    void b(byte[]) -> b
    void a(java.lang.Throwable,byte[]) -> a
    void c(byte[]) -> c
    void c(java.lang.Throwable,byte[]) -> c
    void a(android.os.Message) -> a
    void a(org.apache.http.HttpResponse) -> a
com.umeng.message.proguard.aq -> com.umeng.message.proguard.aq:
    java.lang.String b -> b
    java.util.concurrent.ConcurrentHashMap a -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String toString() -> toString
    void d() -> b
    java.util.List b() -> a
    java.lang.String c() -> c
com.umeng.message.proguard.ar -> com.umeng.message.proguard.ar:
    java.util.HashSet b -> a
    java.util.HashSet c -> b
    int d -> c
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
com.umeng.message.proguard.as -> com.umeng.message.proguard.as:
    com.umeng.message.proguard.as$a get(android.content.Context,java.lang.String,com.umeng.message.proguard.aq) -> get
    com.umeng.message.proguard.as$a get(android.content.Context,org.apache.http.HttpHost,java.lang.String,com.umeng.message.proguard.aq) -> get
    org.apache.http.protocol.HttpContext getHttpContext() -> getHttpContext
    org.apache.http.impl.client.DefaultHttpClient getHttpClient() -> getHttpClient
com.umeng.message.proguard.as$a -> com.umeng.message.proguard.as$a:
    int a -> a
    java.lang.String b -> b
com.umeng.message.proguard.at -> com.umeng.message.proguard.at:
    java.util.concurrent.ThreadPoolExecutor p -> g
    com.umeng.message.proguard.aA q -> h
    java.util.concurrent.Future r -> i
    java.util.concurrent.Future s -> j
    java.lang.String t -> k
    int u -> l
    com.umeng.message.proguard.ay a -> a
    java.io.InputStream b -> b
    int c -> c
    boolean d -> d
    java.lang.String e -> e
    java.util.Map f -> f
    int v -> m
    java.util.concurrent.atomic.AtomicBoolean w -> n
    char[] x -> o
    void callError(boolean) -> callError
    boolean hasCallError() -> hasCallError
    void a() -> a
    void l() -> l
    int b() -> b
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void a(android.content.Context) -> a
    void connect(android.content.Context,java.lang.String,long,com.umeng.message.proguard.aA) -> connect
    void disconnect(int) -> disconnect
    com.umeng.message.proguard.ay readyState() -> readyState
    void close() -> close
    void a(java.lang.String) -> a
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void a(char[]) -> a
    void b(java.lang.String) -> b
    void a(java.util.Map) -> a
    boolean m() -> m
    void h() -> h
    void a(int,java.util.Map) -> a
    void a(int,java.lang.Throwable) -> a
    java.lang.String i() -> i
    int j() -> j
    boolean k() -> k
    void a(com.umeng.message.proguard.at) -> a
com.umeng.message.proguard.au -> com.umeng.message.proguard.au:
    java.lang.String a -> a
    com.umeng.message.proguard.at b -> b
    void run() -> run
com.umeng.message.proguard.av -> com.umeng.message.proguard.av:
    long a -> a
    java.lang.String b -> b
    com.umeng.message.proguard.at c -> c
    void run() -> run
com.umeng.message.proguard.aw -> com.umeng.message.proguard.aw:
    int a -> a
    com.umeng.message.proguard.at b -> b
    void run() -> run
com.umeng.message.proguard.ax -> com.umeng.message.proguard.ax:
    com.umeng.message.proguard.at a -> a
    void run() -> run
com.umeng.message.proguard.ay -> com.umeng.message.proguard.ay:
    com.umeng.message.proguard.ay a -> a
    com.umeng.message.proguard.ay b -> b
    com.umeng.message.proguard.ay c -> c
    com.umeng.message.proguard.ay d -> d
    com.umeng.message.proguard.ay[] e -> e
    com.umeng.message.proguard.ay[] values() -> values
    com.umeng.message.proguard.ay valueOf(java.lang.String) -> valueOf
com.umeng.message.proguard.az -> com.umeng.message.proguard.az:
    java.net.HttpURLConnection m -> g
    void a(java.lang.String) -> a
    java.util.Map a(java.net.HttpURLConnection) -> a
    java.lang.String a(java.util.List) -> a
    void b(java.net.HttpURLConnection) -> b
    void d() -> d
    void c() -> c
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    boolean hasCallError() -> hasCallError
    void callError(boolean) -> callError
com.umeng.message.proguard.b -> com.umeng.message.proguard.b:
    boolean g -> a
    byte[] a(java.lang.String,int) -> a
    byte[] a(byte[],int) -> a
    byte[] a(byte[],int,int,int) -> a
    java.lang.String b(byte[],int) -> b
    byte[] c(byte[],int) -> c
    byte[] c(byte[],int,int,int) -> c
com.umeng.message.proguard.b$a -> com.umeng.message.proguard.b$a:
    byte[] a -> a
    int b -> b
com.umeng.message.proguard.b$b -> com.umeng.message.proguard.b$b:
    int[] c -> c
    int[] d -> d
    int g -> e
    int h -> f
    int[] i -> g
    boolean a(byte[],int,int,boolean) -> a
com.umeng.message.proguard.b$c -> com.umeng.message.proguard.b$c:
    byte[] i -> h
    byte[] j -> i
    byte[] k -> j
    int d -> c
    int l -> k
    boolean e -> e
    boolean f -> f
    boolean g -> g
    byte[] m -> l
    boolean h -> d
    boolean a(byte[],int,int,boolean) -> a
com.umeng.message.proguard.c -> com.umeng.message.proguard.c:
    byte[] a(int) -> a
com.umeng.message.proguard.e -> com.umeng.message.proguard.e:
    java.lang.String a() -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
com.umeng.message.proguard.f -> com.umeng.message.proguard.f:
    boolean a(java.lang.String) -> a
    int b(java.lang.String) -> b
com.umeng.message.proguard.h -> com.umeng.message.proguard.h:
    java.lang.String[] a -> a
    char[] c -> b
    int d -> c
    java.io.Writer e -> d
    java.io.OutputStream f -> e
    java.nio.charset.CharsetEncoder g -> f
    java.nio.ByteBuffer h -> g
    boolean i -> h
    void a(char) -> a
    void a(java.lang.String,int,int) -> a
    void a(char[],int,int) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void b(char[],int,int) -> b
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    void cdsect(java.lang.String) -> cdsect
    void comment(java.lang.String) -> comment
    void docdecl(java.lang.String) -> docdecl
    void endDocument() -> endDocument
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    void entityRef(java.lang.String) -> entityRef
    void a() -> a
    void flush() -> flush
    int getDepth() -> getDepth
    boolean getFeature(java.lang.String) -> getFeature
    java.lang.String getName() -> getName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    void processingInstruction(java.lang.String) -> processingInstruction
    void setFeature(java.lang.String,boolean) -> setFeature
    void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    void setOutput(java.io.Writer) -> setOutput
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
com.umeng.message.proguard.i -> com.umeng.message.proguard.i:
    boolean a() -> a
    java.util.Map b() -> b
    java.lang.String a(java.lang.String,java.lang.String) -> a
    long a(java.lang.String,long) -> a
    com.umeng.message.proguard.i$a c() -> c
com.umeng.message.proguard.i$a -> com.umeng.message.proguard.i$a:
    com.umeng.message.proguard.i$a a(java.lang.String,java.lang.String) -> a
    com.umeng.message.proguard.i$a a(java.lang.String,int) -> a
    com.umeng.message.proguard.i$a a(java.lang.String,long) -> a
    com.umeng.message.proguard.i$a a(java.lang.String,float) -> a
    com.umeng.message.proguard.i$a a(java.lang.String,boolean) -> a
    com.umeng.message.proguard.i$a a() -> a
    boolean b() -> b
com.umeng.message.proguard.i$b -> com.umeng.message.proguard.i$b:
    void a(com.umeng.message.proguard.i,java.lang.String) -> a
com.umeng.message.proguard.j -> com.umeng.message.proguard.j:
    java.lang.String c -> a
    java.lang.String d -> b
    boolean e -> c
    boolean f -> d
    boolean g -> e
    android.content.SharedPreferences h -> f
    com.umeng.message.proguard.i i -> g
    android.content.SharedPreferences$Editor j -> h
    com.umeng.message.proguard.i$a k -> i
    android.content.Context l -> j
    com.umeng.message.proguard.k m -> k
    boolean n -> l
    com.umeng.message.proguard.k g(java.lang.String) -> a
    java.io.File h(java.lang.String) -> c
    void a(android.content.SharedPreferences,com.umeng.message.proguard.i) -> a
    void a(com.umeng.message.proguard.i,android.content.SharedPreferences) -> a
    boolean e() -> a
    void f() -> b
    void a(java.lang.String,long) -> a
    void a(java.lang.String,java.lang.String) -> a
    boolean c() -> c
    java.lang.String b(java.lang.String) -> b
com.umeng.message.proguard.k -> com.umeng.message.proguard.k:
    java.lang.Object d -> a
    java.io.File e -> b
    java.lang.Object f -> c
    java.util.HashMap g -> d
    java.io.File a(java.io.File,java.lang.String) -> a
    java.io.File b() -> b
    java.io.File a(java.lang.String) -> a
    com.umeng.message.proguard.i a(java.lang.String,int) -> a
    java.io.File b(java.io.File) -> b
    java.io.File a(java.io.File) -> a
    java.lang.Object a() -> a
com.umeng.message.proguard.k$a -> com.umeng.message.proguard.k$a:
    java.io.File a -> a
    java.io.File b -> b
    int c -> c
    java.util.Map d -> d
    boolean e -> e
    java.lang.Object f -> f
    java.util.WeakHashMap g -> g
    boolean a() -> a
    void a(boolean) -> a
    boolean d() -> d
    void a(java.util.Map) -> a
    java.util.Map b() -> b
    java.lang.String a(java.lang.String,java.lang.String) -> a
    long a(java.lang.String,long) -> a
    com.umeng.message.proguard.i$a c() -> c
    java.io.FileOutputStream a(java.io.File) -> a
    boolean e() -> e
    java.util.WeakHashMap a(com.umeng.message.proguard.k$a) -> a
    java.util.Map b(com.umeng.message.proguard.k$a) -> b
    boolean c(com.umeng.message.proguard.k$a) -> c
com.umeng.message.proguard.k$a$a -> com.umeng.message.proguard.k$a$a:
    java.util.Map b -> b
    boolean c -> c
    com.umeng.message.proguard.k$a a -> a
    com.umeng.message.proguard.i$a a(java.lang.String,java.lang.String) -> a
    com.umeng.message.proguard.i$a a(java.lang.String,int) -> a
    com.umeng.message.proguard.i$a a(java.lang.String,long) -> a
    com.umeng.message.proguard.i$a a(java.lang.String,float) -> a
    com.umeng.message.proguard.i$a a(java.lang.String,boolean) -> a
    com.umeng.message.proguard.i$a a() -> a
    boolean b() -> b
com.umeng.message.proguard.l -> com.umeng.message.proguard.l:
    void a(java.util.Map,java.io.OutputStream) -> a
    void a(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void a(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void a(byte[],java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void a(int[],java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    void a(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer) -> a
    java.util.HashMap a(java.io.InputStream) -> a
    java.util.HashMap a(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList b(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> b
    int[] c(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]) -> c
    java.lang.Object a(org.xmlpull.v1.XmlPullParser,java.lang.String[]) -> a
    java.lang.Object b(org.xmlpull.v1.XmlPullParser,java.lang.String[]) -> b
com.umeng.message.proguard.m -> com.umeng.message.proguard.m:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    long e -> e
    long f -> f
    void a(long) -> a
    long b() -> a
    void b(long) -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    java.lang.String e() -> e
    void c(java.lang.String) -> c
    java.lang.String f() -> f
    void d(java.lang.String) -> d
com.umeng.message.proguard.n -> com.umeng.message.proguard.n:
    com.umeng.message.proguard.m d -> c
    java.lang.String a -> a
    java.lang.Object b -> b
    long a(com.umeng.message.proguard.m) -> a
    com.umeng.message.proguard.m b(android.content.Context) -> b
    com.umeng.message.proguard.m a(android.content.Context) -> a
com.umeng.message.proguard.o -> com.umeng.message.proguard.o:
    java.lang.String a(android.content.Context) -> a
com.umeng.message.proguard.p -> com.umeng.message.proguard.p:
    android.content.Context d -> a
    java.lang.Object e -> b
    com.umeng.message.proguard.p f -> c
    java.lang.String g -> d
    com.umeng.message.proguard.q h -> e
    java.lang.String i -> f
    java.lang.String j -> g
    com.umeng.message.proguard.j k -> h
    com.umeng.message.proguard.j n -> i
    java.lang.String o -> j
    com.umeng.message.proguard.p a(android.content.Context) -> a
    long a(com.umeng.message.proguard.m) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    java.lang.String b() -> b
    boolean f(java.lang.String) -> f
    java.lang.String a() -> a
    byte[] c() -> c
    java.lang.String a(byte[]) -> a
com.umeng.message.proguard.q -> com.umeng.message.proguard.q:
    java.lang.String a -> a
    java.util.Random b -> b
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.umeng.message.proguard.r -> com.umeng.message.proguard.r:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.umeng.message.proguard.y -> com.umeng.message.proguard.y:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    boolean d(java.lang.String) -> d
com.umeng.message.tag.TagManager -> com.umeng.message.tag.TagManager:
    java.lang.String a -> a
    com.umeng.message.tag.TagManager d -> b
    android.content.Context e -> c
    com.umeng.message.tag.TagManager getInstance(android.content.Context) -> getInstance
com.umeng.update.UmengDialogButtonListener -> com.umeng.update.a:
    void onClick(int) -> a
com.umeng.update.UmengDownloadListener -> com.umeng.update.b:
    void OnDownloadStart() -> a
    void OnDownloadUpdate(int) -> a
    void OnDownloadEnd(int,java.lang.String) -> a
com.umeng.update.UmengUpdateAgent -> com.umeng.update.c:
    com.umeng.update.UmengUpdateListener a -> a
    com.umeng.update.UmengDialogButtonListener b -> b
    com.umeng.update.UmengDownloadListener c -> c
    android.content.Context d -> d
    com.umeng.update.c e -> e
    android.os.Handler f -> f
    void b(int,com.umeng.update.UpdateResponse) -> b
    void update(android.content.Context) -> a
    void b(android.content.Context) -> c
    void b(android.content.Context,com.umeng.update.UpdateResponse,int) -> b
    java.io.File downloadedFile(android.content.Context,com.umeng.update.UpdateResponse) -> a
    boolean isIgnore(android.content.Context,com.umeng.update.UpdateResponse) -> b
    void ignoreUpdate(android.content.Context,com.umeng.update.UpdateResponse) -> c
    void a(int,android.content.Context,com.umeng.update.UpdateResponse,java.io.File) -> a
    void a(android.content.Context,com.umeng.update.UpdateResponse,java.io.File) -> a
    void startInstall(android.content.Context,java.io.File) -> a
    void startDownload(android.content.Context,com.umeng.update.UpdateResponse) -> d
    boolean c(android.content.Context) -> d
    void a(int,com.umeng.update.UpdateResponse) -> a
    android.content.Context a() -> a
    void a(android.content.Context,com.umeng.update.UpdateResponse,int) -> a
    void a(android.content.Context) -> b
    com.umeng.update.UmengUpdateListener b() -> b
com.umeng.update.UmengUpdateAgent$1 -> com.umeng.update.UmengUpdateAgent$1:
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.update.UmengUpdateAgent$2 -> com.umeng.update.d:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$3 -> com.umeng.update.e:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$4 -> com.umeng.update.f:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$5 -> com.umeng.update.g:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$6 -> com.umeng.update.h:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$7 -> com.umeng.update.i:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateAgent$a -> com.umeng.update.c$a:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateListener -> com.umeng.update.j:
    void onUpdateReturned(int,com.umeng.update.UpdateResponse) -> a
com.umeng.update.UpdateConfig -> com.umeng.update.k:
    java.lang.String l -> a
    java.lang.String m -> b
    boolean n -> c
    boolean o -> d
    boolean p -> e
    boolean q -> f
    boolean r -> g
    boolean s -> h
    boolean t -> i
    int u -> j
    java.lang.String getAppkey(android.content.Context) -> a
    java.lang.String getChannel(android.content.Context) -> b
    void saveIgnoreMd5(android.content.Context,java.lang.String) -> a
    java.lang.String getIgnoreMd5(android.content.Context) -> c
    boolean isUpdateOnlyWifi() -> a
    boolean isUpdateAutoPopup() -> b
    boolean isUpdateForce() -> c
    void setUpdateForce(boolean) -> a
    boolean isDeltaUpdate() -> d
    boolean isSilentDownload() -> e
    void setSilentDownload(boolean) -> b
    int getStyle() -> f
    boolean isUpdateCheck() -> g
    boolean isRichNotification() -> h
com.umeng.update.UpdateDialogActivity -> com.umeng.update.UpdateDialogActivity:
    int a -> a
    com.umeng.update.UpdateResponse b -> b
    boolean c -> c
    java.io.File d -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
com.umeng.update.UpdateDialogActivity$1 -> com.umeng.update.l:
    com.umeng.update.UpdateDialogActivity a -> a
    int b -> b
    int c -> c
    void onClick(android.view.View) -> onClick
com.umeng.update.UpdateDialogActivity$2 -> com.umeng.update.m:
    com.umeng.update.UpdateDialogActivity a -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.umeng.update.UpdateResponse -> com.umeng.update.n:
    boolean hasUpdate -> a
    java.lang.String updateLog -> b
    java.lang.String version -> c
    java.lang.String path -> d
    java.lang.String origin -> e
    java.lang.String new_md5 -> f
    java.lang.String size -> g
    java.lang.String target_size -> h
    boolean delta -> i
    java.lang.String patch_md5 -> j
    void a(org.json.JSONObject) -> a
    java.lang.String a(android.content.Context,boolean) -> a
com.umeng.update.b -> com.umeng.update.o:
    android.content.Context a -> a
    java.lang.String[] b -> b
    java.lang.String c -> c
    boolean a() -> a
    com.umeng.update.UpdateResponse b() -> b
com.umeng.update.c -> com.umeng.update.p:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.update.UmengDownloadListener c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    android.content.Context h -> h
    java.lang.String i -> i
    com.umeng.update.net.a j -> j
    boolean k -> k
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.umeng.update.UmengDownloadListener) -> a
    boolean a() -> a
    void b() -> b
    void c() -> c
    void a(com.umeng.update.net.a) -> a
    void d() -> d
    void a(int) -> a
    void a(int,int,java.lang.String) -> a
    void b(int) -> b
    void a(android.content.Context,com.umeng.update.UpdateResponse,boolean,java.io.File) -> a
    com.umeng.update.c$a b(android.content.Context,com.umeng.update.UpdateResponse,boolean,java.io.File) -> b
com.umeng.update.c$a -> com.umeng.update.p$a:
    java.lang.String e -> e
    java.lang.String f -> f
    com.umeng.update.c a -> a
    com.umeng.update.c$a a(java.lang.CharSequence) -> a
    com.umeng.update.c$a b(java.lang.CharSequence) -> b
    com.umeng.update.c$a c(java.lang.CharSequence) -> c
    android.app.Notification a() -> a
com.umeng.update.d -> com.umeng.update.q:
    java.lang.String d -> d
    java.lang.String e -> e
    org.json.JSONObject f -> f
    org.json.JSONObject a(android.content.Context) -> a
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
com.umeng.update.net.DownloadingService -> com.umeng.update.net.DownloadingService:
    java.lang.String t -> d
    android.app.NotificationManager u -> e
    com.umeng.update.net.c v -> f
    android.content.Context A -> g
    android.os.Handler B -> h
    com.umeng.update.net.DownloadingService$a q -> a
    boolean r -> b
    java.util.Map E -> i
    android.util.SparseArray F -> j
    android.os.Messenger s -> c
    com.umeng.update.net.e G -> k
    boolean H -> l
    java.lang.Boolean I -> m
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onCreate() -> onCreate
    void d() -> d
    void a(com.umeng.update.net.a$a) -> a
    void a(java.lang.String) -> a
    void onDestroy() -> onDestroy
    void e() -> e
    java.lang.String a() -> a
    com.umeng.update.net.c a(com.umeng.update.net.DownloadingService) -> a
    android.util.SparseArray b() -> b
    android.content.Context b(com.umeng.update.net.DownloadingService) -> b
    java.util.Map c() -> c
    void a(com.umeng.update.net.DownloadingService,com.umeng.update.net.a$a) -> a
    android.app.NotificationManager c(com.umeng.update.net.DownloadingService) -> c
    android.os.Handler d(com.umeng.update.net.DownloadingService) -> d
    void a(com.umeng.update.net.DownloadingService,java.lang.String) -> a
    void a(com.umeng.update.net.DownloadingService,android.app.NotificationManager) -> a
    void a(java.lang.Boolean) -> a
com.umeng.update.net.DownloadingService$1 -> com.umeng.update.net.DownloadingService$1:
    com.umeng.update.net.DownloadingService a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.update.net.DownloadingService$2 -> com.umeng.update.net.b:
    android.util.SparseArray a -> a
    com.umeng.update.net.DownloadingService b -> b
    void a(int) -> a
    void a(int,int) -> a
    void a(int,java.lang.String) -> a
    void a(int,java.lang.Exception) -> a
com.umeng.update.net.DownloadingService$3 -> com.umeng.update.net.c:
    com.umeng.update.net.DownloadingService a -> a
    java.lang.String b -> b
    void run() -> run
com.umeng.update.net.DownloadingService$4 -> com.umeng.update.net.d:
    com.umeng.update.net.DownloadingService a -> a
    void run() -> run
com.umeng.update.net.DownloadingService$a -> com.umeng.update.net.DownloadingService$a:
    void a(int) -> a
    void a(int,int) -> a
    void a(int,java.lang.String) -> a
    void a(int,java.lang.Exception) -> a
com.umeng.update.net.DownloadingService$b -> com.umeng.update.net.DownloadingService$b:
    android.content.Context b -> b
    boolean c -> c
    java.io.File d -> d
    int e -> e
    long f -> f
    long g -> g
    int h -> h
    int i -> i
    com.umeng.update.net.DownloadingService$a j -> j
    com.umeng.update.net.a$a k -> k
    com.umeng.update.net.DownloadingService a -> a
    void run() -> run
    void a(int) -> a
    void a(boolean) -> a
    void a() -> a
    void b(int) -> b
    java.net.HttpURLConnection a(java.net.URL,java.io.File) -> a
    java.lang.String a(com.umeng.update.net.a$a) -> a
    void b() -> b
    void a(java.io.File,java.lang.String) -> a
    void a(java.lang.Exception) -> a
    android.content.Context a(com.umeng.update.net.DownloadingService$b) -> a
    com.umeng.update.net.DownloadingService b(com.umeng.update.net.DownloadingService$b) -> b
com.umeng.update.net.DownloadingService$b$1 -> com.umeng.update.net.e:
    com.umeng.update.net.DownloadingService$b a -> a
    void run() -> run
com.umeng.update.net.DownloadingService$c -> com.umeng.update.net.DownloadingService$c:
    com.umeng.update.net.DownloadingService a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.update.net.a -> com.umeng.update.net.a:
    java.lang.String b -> b
    android.content.Context c -> c
    com.umeng.update.net.d d -> d
    android.os.Messenger e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String[] k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    android.os.Messenger a -> a
    android.content.ServiceConnection o -> o
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void a() -> a
    java.lang.String b() -> b
    void a(com.umeng.update.net.a,android.os.Messenger) -> a
    java.lang.String a(com.umeng.update.net.a) -> a
    java.lang.String b(com.umeng.update.net.a) -> b
    java.lang.String c(com.umeng.update.net.a) -> c
    java.lang.String d(com.umeng.update.net.a) -> d
    java.lang.String e(com.umeng.update.net.a) -> e
    java.lang.String[] f(com.umeng.update.net.a) -> f
    boolean g(com.umeng.update.net.a) -> g
    boolean h(com.umeng.update.net.a) -> h
    boolean i(com.umeng.update.net.a) -> i
    android.os.Messenger j(com.umeng.update.net.a) -> j
    com.umeng.update.net.d k(com.umeng.update.net.a) -> k
    android.content.Context l(com.umeng.update.net.a) -> l
    android.content.ServiceConnection m(com.umeng.update.net.a) -> m
com.umeng.update.net.a$1 -> com.umeng.update.net.f:
    com.umeng.update.net.a a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.umeng.update.net.a$a -> com.umeng.update.net.a$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    android.os.Bundle a() -> a
    com.umeng.update.net.a$a a(android.os.Bundle) -> a
com.umeng.update.net.a$b -> com.umeng.update.net.a$b:
    com.umeng.update.net.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.update.net.b -> com.umeng.update.net.g:
    java.lang.String a -> a
    android.content.Context i -> b
    com.umeng.update.net.b$a k -> c
    com.umeng.update.net.b a(android.content.Context) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,int) -> a
    void a(int) -> a
    void finalize() -> finalize
    java.lang.String a() -> a
com.umeng.update.net.b$a -> com.umeng.update.net.g$a:
    com.umeng.update.net.b a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.umeng.update.net.b$b -> com.umeng.update.net.g$b:
    com.umeng.update.net.b a -> a
com.umeng.update.net.c -> com.umeng.update.net.h:
    java.lang.String e -> a
    android.util.SparseArray f -> b
    java.util.Map g -> c
    com.umeng.update.net.e h -> d
    int a(com.umeng.update.net.a$a) -> a
    com.umeng.update.net.c$a a(android.content.Context,com.umeng.update.net.a$a,int,int) -> a
    void a(android.content.Context,com.umeng.update.net.c$a,int,int) -> a
    boolean a(android.content.Context) -> a
    boolean a(com.umeng.update.net.a$a,boolean,android.os.Messenger) -> a
    int b(com.umeng.update.net.a$a) -> b
    void a(android.content.Context,int) -> a
    void b(android.content.Context,int) -> b
    void a(com.umeng.update.net.a$a,long,long,long) -> a
    void a(java.util.Map,boolean,java.lang.String[]) -> a
    boolean a(com.umeng.update.net.DownloadingService,android.content.Intent) -> a
    java.lang.String a() -> a
    java.util.Map a(com.umeng.update.net.c) -> a
com.umeng.update.net.c$1 -> com.umeng.update.net.i:
    com.umeng.update.net.c a -> a
    java.lang.String[] b -> b
    boolean c -> c
    java.util.Map d -> d
    void run() -> run
com.umeng.update.net.c$a -> com.umeng.update.net.h$a:
    com.umeng.update.net.c$a a(android.widget.RemoteViews) -> a
    com.umeng.update.net.c$a a(java.lang.CharSequence) -> a
    com.umeng.update.net.c$a b(java.lang.CharSequence) -> b
    com.umeng.update.net.c$a a(int,int,boolean) -> a
    com.umeng.update.net.c$a a() -> a
    com.umeng.update.net.c$a a(android.app.PendingIntent,android.app.PendingIntent) -> a
    com.umeng.update.net.c$a b() -> b
    com.umeng.update.net.c$a c() -> c
    android.app.Notification d() -> d
    void a(int,java.lang.String,android.app.PendingIntent) -> a
com.umeng.update.net.c$b -> com.umeng.update.net.h$b:
    com.umeng.update.net.DownloadingService$b a -> a
    com.umeng.update.net.c$a b -> b
    int c -> c
    int d -> d
    com.umeng.update.net.a$a e -> e
    long[] f -> f
    void a(android.util.SparseArray) -> a
    void b(android.util.SparseArray) -> b
com.umeng.update.net.c$c -> com.umeng.update.net.h$c:
    int a -> a
    java.lang.String b -> b
    com.umeng.update.net.a$a d -> d
    android.content.Context e -> e
    android.app.NotificationManager f -> f
    com.umeng.update.net.c c -> c
    void onPreExecute() -> onPreExecute
    java.lang.Integer a(java.lang.String[]) -> a
    void a(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.update.net.d -> com.umeng.update.net.j:
    void d() -> d
    void a(int) -> a
    void a(int,int,java.lang.String) -> a
    void b(int) -> b
com.umeng.update.net.e -> com.umeng.update.net.k:
    java.lang.String b -> a
    android.content.Context c -> b
    void a(int) -> a
    java.util.List a() -> a
    boolean b() -> b
    void b(int) -> b
com.umeng.update.net.f -> com.umeng.update.net.l:
    java.lang.String a(int,java.lang.String) -> a
    android.app.PendingIntent b(android.content.Context,java.lang.String) -> a
com.umeng.update.net.j -> com.umeng.update.net.m:
    java.lang.String b -> b
    boolean a -> a
    java.util.Map f -> c
    java.lang.Thread g -> d
    java.io.File a(java.lang.String,android.content.Context,boolean[]) -> a
    boolean a(java.lang.String,int,int,int) -> a
    boolean a(java.lang.String,int) -> a
    void a(java.io.File,long,long) -> a
    long a(java.io.File) -> a
    void b(java.io.File,long) -> b
    void a(java.io.File,long) -> a
    void a(java.lang.Thread) -> a
com.umeng.update.net.j$1 -> com.umeng.update.net.n:
    java.io.File a -> a
    long b -> b
    void run() -> run
com.umeng.update.util.DeltaUpdate -> com.umeng.update.util.DeltaUpdate:
    boolean a -> a
    boolean a() -> a
    int a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    int bspatch(java.lang.String,java.lang.String,java.lang.String) -> bspatch
com.umeng.update.util.b -> com.umeng.update.util.a:
    android.content.Context b -> b
    android.app.Notification c -> c
    android.app.Notification$Builder d -> d
    void e() -> e
    com.umeng.update.util.b b(android.widget.RemoteViews) -> b
    com.umeng.update.util.b a(android.app.PendingIntent) -> a
    com.umeng.update.util.b a(boolean) -> a
    com.umeng.update.util.b b(boolean) -> b
    com.umeng.update.util.b a(int) -> a
    com.umeng.update.util.b d(java.lang.CharSequence) -> d
    com.umeng.update.util.b a(long) -> a
net.tsz.afinal.FinalDb -> net.tsz.afinal.a:
    java.util.HashMap daoMap -> a
    android.database.sqlite.SQLiteDatabase db -> b
    net.tsz.afinal.FinalDb$DaoConfig config -> c
    net.tsz.afinal.FinalDb getInstance(net.tsz.afinal.FinalDb$DaoConfig) -> b
    net.tsz.afinal.FinalDb create(android.content.Context,java.lang.String,boolean,int,net.tsz.afinal.FinalDb$DbUpdateListener,boolean) -> a
    net.tsz.afinal.FinalDb create(net.tsz.afinal.FinalDb$DaoConfig) -> a
    void save(java.lang.Object) -> a
    boolean saveBindId(java.lang.Object) -> b
    void insertContentValues(java.util.List,android.content.ContentValues) -> a
    void update(java.lang.Object) -> c
    void update(java.lang.Object,java.lang.String) -> a
    void delete(java.lang.Object) -> d
    void deleteById(java.lang.Class,java.lang.Object) -> a
    void deleteByWhere(java.lang.Class,java.lang.String) -> a
    void deleteAll(java.lang.Class) -> a
    void dropDb() -> a
    void exeSqlInfo(net.tsz.afinal.db.sqlite.SqlInfo) -> a
    java.lang.Object findById(java.lang.Object,java.lang.Class) -> a
    java.lang.Object loadManyToOne(net.tsz.afinal.db.sqlite.DbModel,java.lang.Object,java.lang.Class,java.lang.Class[]) -> a
    java.util.List findAll(java.lang.Class) -> b
    java.util.List findAll(java.lang.Class,java.lang.String) -> b
    java.util.List findAllByWhere(java.lang.Class,java.lang.String) -> c
    java.util.List findAllByWhere(java.lang.Class,java.lang.String,java.lang.String) -> a
    java.util.List findAllBySql(java.lang.Class,java.lang.String) -> d
    void checkTableExist(java.lang.Class) -> c
    boolean tableIsExist(net.tsz.afinal.db.table.TableInfo) -> a
    void debugSql(java.lang.String) -> a
    android.database.sqlite.SQLiteDatabase createDbFileOnSDCard(java.lang.String,java.lang.String) -> a
    android.database.sqlite.SQLiteDatabase getDatebase() -> b
net.tsz.afinal.FinalDb$DaoConfig -> net.tsz.afinal.a$a:
    android.content.Context mContext -> a
    java.lang.String mDbName -> b
    int dbVersion -> c
    boolean debug -> d
    net.tsz.afinal.FinalDb$DbUpdateListener dbUpdateListener -> e
    java.lang.String targetDirectory -> f
    android.content.Context getContext() -> a
    void setContext(android.content.Context) -> a
    java.lang.String getDbName() -> b
    void setDbName(java.lang.String) -> a
    int getDbVersion() -> c
    void setDbVersion(int) -> a
    boolean isDebug() -> d
    void setDebug(boolean) -> a
    net.tsz.afinal.FinalDb$DbUpdateListener getDbUpdateListener() -> e
    void setDbUpdateListener(net.tsz.afinal.FinalDb$DbUpdateListener) -> a
    java.lang.String getTargetDirectory() -> f
net.tsz.afinal.FinalDb$DbUpdateListener -> net.tsz.afinal.a$b:
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> a
net.tsz.afinal.FinalDb$SqliteDbHelper -> net.tsz.afinal.a$c:
    net.tsz.afinal.FinalDb$DbUpdateListener mDbUpdateListener -> b
    net.tsz.afinal.FinalDb this$0 -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
net.tsz.afinal.annotation.sqlite.Id -> net.tsz.afinal.a.a.a:
    java.lang.String column() -> a
net.tsz.afinal.annotation.sqlite.ManyToOne -> net.tsz.afinal.a.a.b:
    java.lang.String column() -> a
net.tsz.afinal.annotation.sqlite.OneToMany -> net.tsz.afinal.a.a.c:
    java.lang.String manyColumn() -> a
net.tsz.afinal.annotation.sqlite.Property -> net.tsz.afinal.a.a.d:
    java.lang.String column() -> a
    java.lang.String defaultValue() -> b
net.tsz.afinal.annotation.sqlite.Table -> net.tsz.afinal.a.a.e:
    java.lang.String name() -> a
net.tsz.afinal.annotation.sqlite.Transient -> net.tsz.afinal.a.a.f:
net.tsz.afinal.core.AbstractCollection -> net.tsz.afinal.core.a:
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
net.tsz.afinal.core.ArrayDeque -> net.tsz.afinal.core.b:
    java.lang.Object[] elements -> b
    int head -> c
    int tail -> d
    boolean $assertionsDisabled -> a
    void doubleCapacity() -> d
    java.lang.Object[] copyElements(java.lang.Object[]) -> a
    void addLast(java.lang.Object) -> a
    boolean offerLast(java.lang.Object) -> b
    java.lang.Object pollFirst() -> a
    boolean removeFirstOccurrence(java.lang.Object) -> c
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> d
    java.lang.Object poll() -> b
    void checkInvariants() -> e
    boolean delete(int) -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    net.tsz.afinal.core.ArrayDeque clone() -> c
    java.lang.Object clone() -> clone
    int access$1(net.tsz.afinal.core.ArrayDeque) -> a
    int access$2(net.tsz.afinal.core.ArrayDeque) -> b
    java.lang.Object[] access$3(net.tsz.afinal.core.ArrayDeque) -> c
    boolean access$4(net.tsz.afinal.core.ArrayDeque,int) -> a
net.tsz.afinal.core.ArrayDeque$DeqIterator -> net.tsz.afinal.core.b$a:
    int cursor -> b
    int fence -> c
    int lastRet -> d
    net.tsz.afinal.core.ArrayDeque this$0 -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
net.tsz.afinal.core.Arrays -> net.tsz.afinal.core.c:
    boolean $assertionsDisabled -> a
    java.lang.Object[] copyOf(java.lang.Object[],int) -> a
    java.lang.Object[] copyOfRange(java.lang.Object[],int,int) -> a
net.tsz.afinal.core.AsyncTask -> net.tsz.afinal.core.AsyncTask:
    java.util.concurrent.ThreadFactory sThreadFactory -> d
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> e
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> a
    java.util.concurrent.Executor SERIAL_EXECUTOR -> b
    java.util.concurrent.Executor DUAL_THREAD_EXECUTOR -> c
    net.tsz.afinal.core.AsyncTask$InternalHandler sHandler -> f
    java.util.concurrent.Executor sDefaultExecutor -> g
    net.tsz.afinal.core.AsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> i
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> a
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> a
    boolean isCancelled() -> b
    void finish(java.lang.Object) -> c
    void access$0(net.tsz.afinal.core.AsyncTask,java.lang.Object) -> a
net.tsz.afinal.core.AsyncTask$1 -> net.tsz.afinal.core.d:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
net.tsz.afinal.core.AsyncTask$AsyncTaskResult -> net.tsz.afinal.core.AsyncTask$a:
    net.tsz.afinal.core.AsyncTask mTask -> a
    java.lang.Object[] mData -> b
net.tsz.afinal.core.AsyncTask$InternalHandler -> net.tsz.afinal.core.AsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
net.tsz.afinal.core.AsyncTask$SerialExecutor -> net.tsz.afinal.core.AsyncTask$b:
    net.tsz.afinal.core.ArrayDeque mTasks -> a
    java.lang.Runnable mActive -> b
    void execute(java.lang.Runnable) -> execute
    void scheduleNext() -> a
net.tsz.afinal.core.AsyncTask$SerialExecutor$1 -> net.tsz.afinal.core.e:
    net.tsz.afinal.core.AsyncTask$SerialExecutor this$1 -> a
    java.lang.Runnable val$r -> b
    void run() -> run
net.tsz.afinal.core.AsyncTask$Status -> net.tsz.afinal.core.AsyncTask$c:
    net.tsz.afinal.core.AsyncTask$Status PENDING -> a
    net.tsz.afinal.core.AsyncTask$Status RUNNING -> b
    net.tsz.afinal.core.AsyncTask$Status FINISHED -> c
    net.tsz.afinal.core.AsyncTask$Status[] ENUM$VALUES -> d
    net.tsz.afinal.core.AsyncTask$Status[] values() -> values
    net.tsz.afinal.core.AsyncTask$Status valueOf(java.lang.String) -> valueOf
net.tsz.afinal.core.Deque -> net.tsz.afinal.core.f:
net.tsz.afinal.core.Queue -> net.tsz.afinal.core.g:
net.tsz.afinal.db.sqlite.CursorUtils -> net.tsz.afinal.b.a.a:
    java.lang.Object getEntity(android.database.Cursor,java.lang.Class,net.tsz.afinal.FinalDb) -> a
net.tsz.afinal.db.sqlite.DbModel -> net.tsz.afinal.b.a.b:
    java.util.HashMap dataMap -> a
    java.lang.Object get(java.lang.String) -> a
net.tsz.afinal.db.sqlite.ManyToOneLazyLoader -> net.tsz.afinal.b.a.c:
    java.lang.Object manyEntity -> a
    java.lang.Class manyClazz -> b
    java.lang.Class oneClazz -> c
    net.tsz.afinal.FinalDb db -> d
    java.lang.Object fieldValue -> g
    java.lang.Object oneEntity -> e
    boolean hasLoaded -> f
    java.lang.Object get() -> a
    void set(java.lang.Object) -> a
    java.lang.Object getFieldValue() -> b
    void setFieldValue(java.lang.Object) -> b
net.tsz.afinal.db.sqlite.OneToManyLazyLoader -> net.tsz.afinal.b.a.d:
    java.lang.Object ownerEntity -> a
    java.lang.Class ownerClazz -> b
    java.lang.Class listItemClazz -> c
    net.tsz.afinal.FinalDb db -> d
net.tsz.afinal.db.sqlite.SqlBuilder -> net.tsz.afinal.b.a.e:
    net.tsz.afinal.db.sqlite.SqlInfo buildInsertSql(java.lang.Object) -> a
    java.util.List getSaveKeyValueListByEntity(java.lang.Object) -> b
    java.lang.String getDeleteSqlBytableName(java.lang.String) -> a
    net.tsz.afinal.db.sqlite.SqlInfo buildDeleteSql(java.lang.Object) -> c
    net.tsz.afinal.db.sqlite.SqlInfo buildDeleteSql(java.lang.Class,java.lang.Object) -> a
    java.lang.String buildDeleteSql(java.lang.Class,java.lang.String) -> a
    java.lang.String getSelectSqlByTableName(java.lang.String) -> b
    net.tsz.afinal.db.sqlite.SqlInfo getSelectSqlAsSqlInfo(java.lang.Class,java.lang.Object) -> b
    java.lang.String getSelectSQL(java.lang.Class) -> a
    java.lang.String getSelectSQLByWhere(java.lang.Class,java.lang.String) -> b
    net.tsz.afinal.db.sqlite.SqlInfo getUpdateSqlAsSqlInfo(java.lang.Object) -> d
    net.tsz.afinal.db.sqlite.SqlInfo getUpdateSqlAsSqlInfo(java.lang.Object,java.lang.String) -> a
    java.lang.String getCreatTableSQL(java.lang.Class) -> b
    net.tsz.afinal.db.table.KeyValue property2KeyValue(net.tsz.afinal.db.table.Property,java.lang.Object) -> a
    net.tsz.afinal.db.table.KeyValue manyToOne2KeyValue(net.tsz.afinal.db.table.ManyToOne,java.lang.Object) -> a
net.tsz.afinal.db.sqlite.SqlInfo -> net.tsz.afinal.b.a.f:
    java.lang.String sql -> a
    java.util.LinkedList bindArgs -> b
    java.lang.String getSql() -> a
    void setSql(java.lang.String) -> a
    java.lang.Object[] getBindArgsAsArray() -> b
    java.lang.String[] getBindArgsAsStringArray() -> c
    void addValue(java.lang.Object) -> a
net.tsz.afinal.db.table.Id -> net.tsz.afinal.b.b.a:
net.tsz.afinal.db.table.KeyValue -> net.tsz.afinal.b.b.b:
    java.lang.String key -> a
    java.lang.Object value -> b
    java.lang.String getKey() -> a
    java.lang.Object getValue() -> b
net.tsz.afinal.db.table.ManyToOne -> net.tsz.afinal.b.b.c:
    java.lang.Class manyClass -> a
    java.lang.Class getManyClass() -> a
    void setManyClass(java.lang.Class) -> a
net.tsz.afinal.db.table.OneToMany -> net.tsz.afinal.b.b.d:
    java.lang.Class oneClass -> a
    java.lang.Class getOneClass() -> a
    void setOneClass(java.lang.Class) -> a
net.tsz.afinal.db.table.Property -> net.tsz.afinal.b.b.e:
    java.lang.String fieldName -> a
    java.lang.String column -> b
    java.lang.String defaultValue -> c
    java.lang.Class dataType -> d
    java.lang.reflect.Field field -> e
    java.lang.reflect.Method get -> f
    java.lang.reflect.Method set -> g
    void setValue(java.lang.Object,java.lang.Object) -> a
    java.lang.Object getValue(java.lang.Object) -> a
    void setFieldName(java.lang.String) -> a
    java.lang.String getColumn() -> b
    void setColumn(java.lang.String) -> b
    java.lang.String getDefaultValue() -> c
    void setDefaultValue(java.lang.String) -> c
    java.lang.Class getDataType() -> d
    void setDataType(java.lang.Class) -> b
    void setGet(java.lang.reflect.Method) -> a
    void setSet(java.lang.reflect.Method) -> b
    void setField(java.lang.reflect.Field) -> a
net.tsz.afinal.db.table.TableInfo -> net.tsz.afinal.b.b.f:
    java.lang.String className -> d
    java.lang.String tableName -> e
    net.tsz.afinal.db.table.Id id -> f
    java.util.HashMap propertyMap -> a
    java.util.HashMap oneToManyMap -> b
    java.util.HashMap manyToOneMap -> c
    boolean checkDatabese -> g
    java.util.HashMap tableInfoMap -> h
    net.tsz.afinal.db.table.TableInfo get(java.lang.Class) -> a
    void clearTableInfo() -> a
    void setClassName(java.lang.String) -> a
    java.lang.String getTableName() -> b
    void setTableName(java.lang.String) -> b
    net.tsz.afinal.db.table.Id getId() -> c
    void setId(net.tsz.afinal.db.table.Id) -> a
    boolean isCheckDatabese() -> d
    void setCheckDatabese(boolean) -> a
net.tsz.afinal.exception.AfinalException -> net.tsz.afinal.c.a:
net.tsz.afinal.exception.DbException -> net.tsz.afinal.c.b:
net.tsz.afinal.utils.ClassUtils -> net.tsz.afinal.d.a:
    java.lang.String getTableName(java.lang.Class) -> a
    java.lang.reflect.Field getPrimaryKeyField(java.lang.Class) -> b
    java.lang.String getPrimaryKeyFieldName(java.lang.Class) -> c
    java.util.List getPropertyList(java.lang.Class) -> d
    java.util.List getManyToOneList(java.lang.Class) -> e
    java.util.List getOneToManyList(java.lang.Class) -> f
net.tsz.afinal.utils.FieldUtils -> net.tsz.afinal.d.b:
    java.text.SimpleDateFormat SDF -> a
    java.lang.reflect.Method getFieldGetMethod(java.lang.Class,java.lang.reflect.Field) -> a
    java.lang.reflect.Method getBooleanFieldGetMethod(java.lang.Class,java.lang.String) -> a
    java.lang.reflect.Method getBooleanFieldSetMethod(java.lang.Class,java.lang.reflect.Field) -> b
    boolean isISStart(java.lang.String) -> b
    java.lang.reflect.Method getFieldGetMethod(java.lang.Class,java.lang.String) -> b
    java.lang.reflect.Method getFieldSetMethod(java.lang.Class,java.lang.reflect.Field) -> c
    java.lang.String getColumnByField(java.lang.reflect.Field) -> a
    java.lang.String getPropertyDefaultValue(java.lang.reflect.Field) -> b
    boolean isTransient(java.lang.reflect.Field) -> c
    boolean isManyToOne(java.lang.reflect.Field) -> d
    boolean isOneToMany(java.lang.reflect.Field) -> e
    boolean isBaseDateType(java.lang.reflect.Field) -> f
    java.util.Date stringToDateTime(java.lang.String) -> a
org.agoo.ut.device.UTDevice -> org.a.a.a.a:
    java.lang.String getUtdid(android.content.Context) -> a
org.android.agoo.client.AgooIntentService -> org.android.agoo.a.a:
    void onDestroy() -> onDestroy
org.android.agoo.client.AgooSettings -> org.android.agoo.a.b:
    void setUTVersion(android.content.Context,java.lang.String) -> a
    void setAgooSecurityMode(android.content.Context,boolean) -> a
    boolean isAgooSoSecurityMode(android.content.Context) -> a
    long getAgooReleaseTime() -> a
    boolean isAgooTestMode(android.content.Context) -> b
    java.lang.String getPullUrl(android.content.Context) -> c
    java.lang.String getApollUrl(android.content.Context) -> d
    org.android.agoo.client.AgooSettings$Mode getMode(android.content.Context) -> e
    long getTargetTime(android.content.Context) -> f
    long getTargetTime(android.content.Context,long) -> a
org.android.agoo.client.AgooSettings$1 -> org.android.agoo.a.b$1:
org.android.agoo.client.AgooSettings$Mode -> org.android.agoo.a.b$a:
    org.android.agoo.client.AgooSettings$Mode TEST -> a
    org.android.agoo.client.AgooSettings$Mode PREVIEW -> b
    org.android.agoo.client.AgooSettings$Mode RELEASE -> c
    int a -> d
    org.android.agoo.client.AgooSettings$Mode[] b -> e
    org.android.agoo.client.AgooSettings$Mode[] values() -> values
    org.android.agoo.client.AgooSettings$Mode valueOf(java.lang.String) -> valueOf
    int getPushApollPort() -> a
    java.lang.String getPushApollIp() -> b
org.android.agoo.client.AgooSettings$Mode$1 -> org.android.agoo.a.c:
    java.lang.String getPushApollIp() -> b
    int getPushApollPort() -> a
org.android.agoo.client.AgooSettings$Mode$2 -> org.android.agoo.a.d:
    java.lang.String getPushApollIp() -> b
    int getPushApollPort() -> a
org.android.agoo.client.AgooSettings$Mode$3 -> org.android.agoo.a.e:
    java.lang.String getPushApollIp() -> b
    int getPushApollPort() -> a
org.android.agoo.client.BaseBroadcastReceiver -> org.android.agoo.a.f:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context,android.content.Intent) -> a
    java.lang.String a(android.content.Context) -> a
org.android.agoo.client.BaseBroadcastReceiver$1 -> org.android.agoo.a.g:
    android.content.Context a -> a
    android.content.Intent b -> b
    org.android.agoo.client.BaseBroadcastReceiver c -> c
    void run() -> run
org.android.agoo.client.BaseIntentService -> org.android.agoo.a.h:
    org.android.agoo.net.mtop.IMtopSynClient b -> a
    java.lang.String c -> b
    java.lang.String d -> c
    java.lang.String e -> d
    android.os.PowerManager$WakeLock j -> e
    java.lang.Object k -> f
    java.util.Random l -> g
    org.android.agoo.service.IElectionService n -> h
    android.content.ServiceConnection o -> i
    boolean p -> j
    org.android.agoo.service.IMessageService q -> k
    android.content.ServiceConnection r -> l
    void a() -> b
    boolean shouldProcessMessage(android.content.Context,android.content.Intent) -> a
    void onUserCommand(android.content.Context,android.content.Intent) -> c
    void onUserHandleIntent(android.content.Context,android.content.Intent) -> d
    void onMessage(android.content.Context,android.content.Intent) -> b
    java.lang.Class getAgooService() -> a
    void onError(android.content.Context,java.lang.String) -> a
    void onRegistered(android.content.Context,java.lang.String) -> b
    void onUnregistered(android.content.Context,java.lang.String) -> c
    boolean onRecoverableError(android.content.Context,java.lang.String) -> d
    void a(android.content.Context,android.content.Intent) -> e
    void b(android.content.Context,android.content.Intent) -> f
    void c(android.content.Context,android.content.Intent) -> g
    void a(android.content.Context,java.lang.String,java.lang.String[]) -> a
    void b(android.content.Context,java.lang.String,java.lang.String[]) -> b
    void d(android.content.Context,android.content.Intent) -> h
    void e(android.content.Context,android.content.Intent) -> i
    void f(android.content.Context,android.content.Intent) -> j
    void g(android.content.Context,android.content.Intent) -> k
    void h(android.content.Context,android.content.Intent) -> l
    void i(android.content.Context,android.content.Intent) -> m
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void a(android.content.Context,android.content.Intent,java.lang.String) -> a
    void a(android.content.Context,java.lang.String) -> e
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void b(android.content.Context,java.lang.String) -> f
    void d(android.content.Context) -> d
    void j(android.content.Context,android.content.Intent) -> n
    void k(android.content.Context,android.content.Intent) -> o
    void e(android.content.Context) -> e
    void f(android.content.Context) -> f
    void l(android.content.Context,android.content.Intent) -> p
    void m(android.content.Context,android.content.Intent) -> q
    void g(android.content.Context) -> g
    boolean b() -> c
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void c() -> d
    void h(android.content.Context) -> h
    void i(android.content.Context) -> i
    org.android.agoo.service.IElectionService a(org.android.agoo.client.BaseIntentService,org.android.agoo.service.IElectionService) -> a
    org.android.agoo.service.IElectionService a(org.android.agoo.client.BaseIntentService) -> a
    void a(org.android.agoo.client.BaseIntentService,android.content.Context) -> a
    boolean b(org.android.agoo.client.BaseIntentService) -> b
    boolean a(org.android.agoo.client.BaseIntentService,boolean) -> a
    org.android.agoo.service.IMessageService a(org.android.agoo.client.BaseIntentService,org.android.agoo.service.IMessageService) -> a
    void b(org.android.agoo.client.BaseIntentService,android.content.Context) -> b
    void c(org.android.agoo.client.BaseIntentService,android.content.Context) -> c
org.android.agoo.client.BaseIntentService$1 -> org.android.agoo.a.i:
    org.android.agoo.client.BaseIntentService a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
org.android.agoo.client.BaseIntentService$2 -> org.android.agoo.a.j:
    java.lang.String a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    org.android.agoo.client.BaseIntentService d -> d
    void run() -> run
org.android.agoo.client.BaseIntentService$3 -> org.android.agoo.a.k:
    org.android.agoo.client.BaseIntentService a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
org.android.agoo.client.BaseRegistrar -> org.android.agoo.a.l:
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void b(android.content.Context) -> a
    java.lang.String getRegistrationId(android.content.Context) -> getRegistrationId
    boolean isRegistered(android.content.Context) -> isRegistered
org.android.agoo.client.DeviceService -> org.android.agoo.a.m:
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> b
    java.lang.String getRegistrationId(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
org.android.agoo.client.IntentHelper -> org.android.agoo.a.n:
    android.content.Intent createComandIntent(android.content.Context,java.lang.String) -> a
    java.lang.String getAgooCommand(android.content.Context) -> a
    java.lang.String getAgooStart(android.content.Context) -> b
    java.lang.String getAgooCockroach(android.content.Context) -> c
org.android.agoo.client.IppFacade -> org.android.agoo.a.o:
    java.lang.String a -> a
    void performProtectOnlyOnce(android.content.Context) -> a
    java.lang.String a() -> a
org.android.agoo.client.IppFacade$1 -> org.android.agoo.a.p:
    android.content.ServiceConnection b -> b
    android.content.Context a -> a
    void run() -> run
    boolean a(java.lang.String) -> a
org.android.agoo.client.IppFacade$1$1 -> org.android.agoo.a.q:
    org.android.agoo.client.IppFacade$1 a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
org.android.agoo.client.MessageService -> org.android.agoo.a.r:
    android.database.sqlite.SQLiteOpenHelper q -> a
    org.android.agoo.client.MessageService r -> b
    android.content.Context s -> c
    org.android.agoo.client.MessageService getSingleton(android.content.Context) -> a
    void addMessage(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,int,long,int,int) -> a
    void notice(java.lang.String) -> a
    boolean hasMessageDuplicate(java.lang.String,int) -> a
    void reloadMessageAtTime() -> a
    long a(long,int) -> a
    void handleMessageAtTime(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,long,int,int) -> a
    boolean report(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
org.android.agoo.client.MessageService$MessageDBHelper -> org.android.agoo.a.r$a:
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
org.android.agoo.helper.PhoneHelper -> org.android.agoo.b.a:
    java.lang.String a() -> b
    java.lang.String getImei(android.content.Context) -> a
    java.lang.String getImsi(android.content.Context) -> b
    java.lang.String getLocalMacAddress(android.content.Context) -> c
    java.lang.String getOriginalImei(android.content.Context) -> d
    java.lang.String getOriginalImsi(android.content.Context) -> e
    java.lang.String getSerialNum() -> a
    java.lang.String getAndroidId(android.content.Context) -> f
org.android.agoo.helper.a -> org.android.agoo.b.b:
    int e -> a
    java.util.concurrent.ThreadPoolExecutor f -> b
    com.umeng.message.proguard.as g -> c
    android.content.Context h -> d
    java.lang.String i -> e
    void a(org.android.agoo.helper.a$b) -> a
    void a(com.umeng.message.proguard.as$a,org.android.agoo.helper.a$b,org.android.agoo.client.AgooSettings$Mode) -> a
    void b(org.android.agoo.helper.a$b) -> b
    java.lang.String a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int a(android.content.Context,java.lang.String[]) -> a
    boolean a(java.lang.String) -> a
    java.lang.String a(android.content.Context,int) -> a
    com.umeng.message.proguard.as a(org.android.agoo.helper.a) -> a
    com.umeng.message.proguard.as a(org.android.agoo.helper.a,com.umeng.message.proguard.as) -> a
    void a(org.android.agoo.helper.a,com.umeng.message.proguard.as$a,org.android.agoo.helper.a$b,org.android.agoo.client.AgooSettings$Mode) -> a
org.android.agoo.helper.a$a -> org.android.agoo.b.b$a:
    java.lang.String a -> a
    org.android.agoo.helper.a$b b -> b
    android.content.Context c -> c
    org.android.agoo.helper.a d -> d
    void run() -> run
org.android.agoo.helper.a$b -> org.android.agoo.b.b$b:
    void a(java.lang.String) -> a
    void a(int,java.lang.String) -> a
org.android.agoo.net.mtop.IMtopSynClient -> org.android.agoo.c.a.a:
    void setDefaultAppkey(java.lang.String) -> a
    void setDefaultAppSecret(java.lang.String) -> b
    void setBaseUrl(java.lang.String) -> c
    org.android.agoo.net.mtop.Result getV3(android.content.Context,org.android.agoo.net.mtop.MtopRequest) -> a
org.android.agoo.net.mtop.MtopAsyncClientV3 -> org.android.agoo.c.a.b:
    java.lang.String b -> a
    java.lang.String c -> b
    java.lang.String d -> c
    void setDefaultAppkey(java.lang.String) -> a
    void setDefaultAppSecret(java.lang.String) -> b
    void getV3(android.content.Context,org.android.agoo.net.mtop.MtopRequest,org.android.agoo.net.mtop.MtopResponseHandler) -> a
    void setBaseUrl(java.lang.String) -> c
org.android.agoo.net.mtop.MtopHttpChunked -> org.android.agoo.c.a.c:
    java.lang.String l -> g
    java.lang.String m -> h
    java.lang.String n -> i
    void setBaseUrl(java.lang.String) -> c
    void setDefaultAppkey(java.lang.String) -> d
    void setDefaultAppSecret(java.lang.String) -> e
    void connect(android.content.Context,org.android.agoo.net.mtop.MtopRequest,long,com.umeng.message.proguard.aA) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String a(java.lang.String,com.umeng.message.proguard.aq) -> a
org.android.agoo.net.mtop.MtopRequest -> org.android.agoo.c.a.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    long h -> h
    boolean i -> i
    java.lang.String j -> j
    java.util.Map k -> k
    java.util.Map l -> l
    boolean isHasSigin() -> a
    long getTime() -> b
    java.lang.String getDeviceId() -> c
    void setDeviceId(java.lang.String) -> a
    java.util.Map getSysParams() -> d
    java.lang.String getTtId() -> e
    void setTtId(java.lang.String) -> b
    java.lang.String getApi() -> f
    void setApi(java.lang.String) -> c
    java.lang.String getV() -> g
    void setV(java.lang.String) -> d
    java.lang.String getSId() -> h
    java.lang.String getEcode() -> i
    java.util.Map getParams() -> j
    void putParams(java.lang.String,java.lang.Object) -> a
    java.lang.String getAppKey() -> k
    void setAppKey(java.lang.String) -> e
    java.lang.String getAppSecret() -> l
    void setAppSecret(java.lang.String) -> f
org.android.agoo.net.mtop.MtopRequestHelper -> org.android.agoo.c.a.e:
    void checkAppKeyAndAppSecret(org.android.agoo.net.mtop.MtopRequest,java.lang.String,java.lang.String) -> a
    com.umeng.message.proguard.aq getUrlWithRequestParams(android.content.Context,org.android.agoo.net.mtop.MtopRequest) -> a
    long a() -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.util.Map) -> a
org.android.agoo.net.mtop.MtopResponseHandler -> org.android.agoo.c.a.f:
    void b(java.lang.String) -> b
    void onFailure(java.lang.String,java.lang.String) -> onFailure
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
org.android.agoo.net.mtop.MtopResponseHelper -> org.android.agoo.c.a.g:
    org.android.agoo.net.mtop.Result parse(java.lang.String) -> a
org.android.agoo.net.mtop.MtopSyncClientV3 -> org.android.agoo.c.a.h:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void setDefaultAppkey(java.lang.String) -> a
    void setDefaultAppSecret(java.lang.String) -> b
    void setBaseUrl(java.lang.String) -> c
    org.android.agoo.net.mtop.Result getV3(android.content.Context,org.android.agoo.net.mtop.MtopRequest) -> a
org.android.agoo.net.mtop.Result -> org.android.agoo.c.a.i:
    boolean a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    boolean isSuccess() -> a
    void setSuccess(boolean) -> a
    java.lang.String getData() -> b
    void setData(java.lang.String) -> a
    java.lang.String getRetDesc() -> c
    void setRetDesc(java.lang.String) -> b
    java.lang.String getRetCode() -> d
    void setRetCode(java.lang.String) -> c
    java.lang.String toString() -> toString
org.android.agoo.proc.ServiceProtect -> org.android.agoo.proc.ServiceProtect:
    boolean b -> a
    int start(java.lang.String,java.lang.String,java.lang.String,int) -> start
    void stop() -> stop
    int hasRted() -> hasRted
    boolean a() -> a
    void a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int) -> a
    int a(java.lang.String,java.lang.String,java.lang.String,int) -> a
    void b() -> b
    boolean c() -> c
org.android.agoo.proc.a -> org.android.agoo.proc.a:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
org.android.agoo.proc.b -> org.android.agoo.proc.b:
    android.content.Context a -> a
    android.os.HandlerThread m -> b
    android.os.Handler n -> c
    boolean o -> d
    boolean handleMessage(android.os.Message) -> handleMessage
    void f() -> f
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    boolean hasComeFromCock(android.content.Intent) -> hasComeFromCock
    void onDestroy() -> onDestroy
    void a() -> a
    int a(int,int) -> a
    void a(android.content.Context) -> a
    void g() -> g
    void b() -> b
    void c() -> c
    void a(android.content.Intent,int,int) -> a
    void d() -> d
    void e() -> e
org.android.agoo.proc.c -> org.android.agoo.proc.c:
    byte[] a(java.lang.String,java.lang.String) -> a
org.android.agoo.proc.d -> org.android.agoo.proc.d:
    java.lang.String h -> b
    java.lang.String a -> a
    java.lang.String[] j -> c
    java.lang.String[] k -> d
    java.lang.String[] l -> e
    java.util.HashMap m -> f
    android.content.Context n -> g
    java.io.File o -> h
    org.android.agoo.proc.d a(android.content.Context) -> a
    boolean a(java.lang.String,byte[]) -> a
    boolean a(java.lang.String,java.io.FileInputStream) -> a
    org.android.agoo.proc.d$a a() -> a
    org.android.agoo.proc.d$a b() -> b
    org.android.agoo.proc.d$a a(java.lang.String) -> a
    void c() -> c
    void b(java.lang.String) -> b
    java.lang.String a(android.os.Build,java.lang.String) -> a
    java.io.File c(java.lang.String) -> c
org.android.agoo.proc.d$a -> org.android.agoo.proc.d$a:
    boolean a -> a
    boolean b -> b
    boolean a() -> a
    void a(boolean) -> a
    void b(boolean) -> b
org.android.agoo.service.AgooService -> org.android.agoo.service.AgooService:
    com.umeng.message.proguard.W d -> b
    long e -> c
    org.android.agoo.service.AgooService$ReElection f -> d
    android.app.AlarmManager g -> e
    java.lang.String h -> f
    java.lang.String i -> g
    java.lang.String j -> h
    java.lang.String k -> i
    java.lang.String l -> j
    java.lang.String m -> k
    org.android.agoo.service.IMessageService$Stub n -> l
    void b() -> b
    boolean f() -> f
    void d() -> d
    void a(android.content.Intent,int,int) -> a
    void e() -> e
    boolean g() -> g
    void h() -> h
    void c() -> c
    void onHandleMessage(java.lang.String) -> onHandleMessage
    void onHandleError(java.lang.String) -> onHandleError
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,android.os.Bundle) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    com.umeng.message.proguard.W a(org.android.agoo.service.AgooService) -> a
    android.content.Context b(org.android.agoo.service.AgooService) -> b
    java.lang.String c(org.android.agoo.service.AgooService) -> c
    java.lang.String d(org.android.agoo.service.AgooService) -> d
    android.content.Context e(org.android.agoo.service.AgooService) -> e
    android.content.Context f(org.android.agoo.service.AgooService) -> f
    android.content.Context g(org.android.agoo.service.AgooService) -> g
    void a(org.android.agoo.service.AgooService,java.lang.String,java.lang.String) -> a
    android.content.Context h(org.android.agoo.service.AgooService) -> h
    android.content.Context i(org.android.agoo.service.AgooService) -> i
    android.app.AlarmManager j(org.android.agoo.service.AgooService) -> j
    android.content.Context k(org.android.agoo.service.AgooService) -> k
    android.content.Context l(org.android.agoo.service.AgooService) -> l
    android.app.AlarmManager a(org.android.agoo.service.AgooService,android.app.AlarmManager) -> a
org.android.agoo.service.AgooService$1 -> org.android.agoo.service.AgooService$1:
    org.android.agoo.service.AgooService a -> a
    boolean ping() -> ping
    void probe() -> probe
org.android.agoo.service.AgooService$1$1 -> org.android.agoo.service.AgooService$1$1:
    org.android.agoo.service.AgooService$1 a -> a
    void run() -> run
org.android.agoo.service.AgooService$ReElection -> org.android.agoo.service.AgooService$ReElection:
    android.content.IntentFilter d -> b
    android.app.PendingIntent e -> c
    android.content.Intent f -> d
    boolean g -> e
    org.android.agoo.service.AgooService a -> a
    void a() -> a
    void start() -> start
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void destory() -> destory
    boolean a(org.android.agoo.service.AgooService$ReElection,boolean) -> a
org.android.agoo.service.AgooService$ReElection$1 -> org.android.agoo.service.AgooService$ReElection$1:
    android.content.Context a -> a
    org.android.agoo.service.AgooService$ReElection b -> b
    void run() -> run
org.android.agoo.service.ElectionService -> org.android.agoo.service.ElectionService:
    java.util.Map b -> a
    java.util.Map c -> b
    java.util.Map d -> c
    java.lang.String i -> d
    android.os.Handler j -> e
    java.util.List k -> f
    long l -> g
    boolean m -> h
    android.os.HandlerThread n -> i
    java.util.concurrent.atomic.AtomicInteger o -> j
    long p -> k
    android.content.Context q -> l
    org.android.agoo.service.IElectionService$Stub r -> m
    java.util.Random s -> n
    org.android.agoo.service.ElectionService$ElectionResult t -> o
    boolean handleMessage(android.os.Message) -> handleMessage
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void a(java.lang.String,long) -> a
    java.lang.String a(java.util.List) -> a
    void a() -> a
    void b() -> b
    void a(java.lang.String) -> a
    void c() -> c
    void onDestroy() -> onDestroy
    void d() -> d
    void e() -> e
    boolean a(org.android.agoo.service.ElectionService) -> a
    void a(org.android.agoo.service.ElectionService,java.lang.String,long) -> a
    void b(org.android.agoo.service.ElectionService) -> b
    long a(org.android.agoo.service.ElectionService,long) -> a
    java.util.Map c(org.android.agoo.service.ElectionService) -> c
    java.util.Map d(org.android.agoo.service.ElectionService) -> d
    void a(org.android.agoo.service.ElectionService,java.lang.String) -> a
org.android.agoo.service.ElectionService$1 -> org.android.agoo.service.ElectionService$1:
    org.android.agoo.service.ElectionService a -> a
    void election(java.lang.String,long,java.lang.String) -> election
org.android.agoo.service.ElectionService$2 -> org.android.agoo.service.ElectionService$2:
    org.android.agoo.service.ElectionService a -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(java.lang.String,java.lang.String) -> onFailure
org.android.agoo.service.ElectionService$ElectionResult -> org.android.agoo.service.ElectionService$ElectionResult:
    long a -> a
    java.lang.String b -> b
    java.util.HashMap c -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getElectionSource() -> getElectionSource
    void setElectionSource(java.lang.String) -> setElectionSource
    long getTimeout() -> getTimeout
    void setTimeout(long) -> setTimeout
    java.util.HashMap getSudoMap() -> getSudoMap
    void putSudo(java.lang.String,java.lang.String) -> putSudo
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.android.agoo.service.ElectionService$ElectionResult$1 -> org.android.agoo.service.ElectionService$ElectionResult$1:
    org.android.agoo.service.ElectionService$ElectionResult createFromParcel(android.os.Parcel) -> createFromParcel
    org.android.agoo.service.ElectionService$ElectionResult[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.android.agoo.service.IElectionService -> org.android.agoo.service.IElectionService:
    void election(java.lang.String,long,java.lang.String) -> election
org.android.agoo.service.IElectionService$Stub -> org.android.agoo.service.IElectionService$Stub:
    org.android.agoo.service.IElectionService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
org.android.agoo.service.IElectionService$Stub$Proxy -> org.android.agoo.service.IElectionService$Stub$Proxy:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void election(java.lang.String,long,java.lang.String) -> election
org.android.agoo.service.IMessageService -> org.android.agoo.service.IMessageService:
    boolean ping() -> ping
    void probe() -> probe
org.android.agoo.service.IMessageService$Stub -> org.android.agoo.service.IMessageService$Stub:
    org.android.agoo.service.IMessageService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
org.android.agoo.service.IMessageService$Stub$Proxy -> org.android.agoo.service.IMessageService$Stub$Proxy:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    boolean ping() -> ping
    void probe() -> probe
org.xsocket.DataConverter -> org.xsocket.DataConverter:
    java.util.Map encoders -> encoders
    java.util.Map decoders -> decoders
    java.lang.String toFormatedBytesSize(long) -> toFormatedBytesSize
    java.lang.String toFormatedDate(long) -> toFormatedDate
    java.lang.String toFormatedRFC822Date(long) -> toFormatedRFC822Date
    java.util.Date toDate(java.lang.String) -> toDate
    java.text.SimpleDateFormat newRFC822DateFomat() -> newRFC822DateFomat
    java.lang.String toFormatedDuration(long) -> toFormatedDuration
    java.nio.ByteBuffer toByteBuffer(java.lang.String,java.lang.String) -> toByteBuffer
    java.lang.String toString(java.lang.StackTraceElement[]) -> toString
    java.lang.String toString(java.nio.ByteBuffer) -> toString
    java.lang.String toString(java.nio.ByteBuffer[]) -> toString
    java.lang.String toString(java.nio.ByteBuffer,java.lang.String) -> toString
    java.lang.String toHexString(java.nio.ByteBuffer) -> toHexString
    java.lang.String toString(java.util.List) -> toString
    java.lang.String toString(java.util.List,java.lang.String) -> toString
    java.lang.String toString(java.nio.ByteBuffer[],java.lang.String) -> toString
    java.lang.String toString(java.nio.ByteBuffer[],java.lang.String,int) -> toString
    java.nio.ByteBuffer toByteBuffer(java.nio.ByteBuffer[]) -> toByteBuffer
    java.nio.ByteBuffer toByteBuffer(byte) -> toByteBuffer
    java.nio.ByteBuffer toByteBuffer(byte[]) -> toByteBuffer
    java.nio.ByteBuffer toByteBuffer(byte[],int,int) -> toByteBuffer
    java.nio.ByteBuffer toByteBuffer(double) -> toByteBuffer
    java.nio.ByteBuffer toByteBuffer(long) -> toByteBuffer
    java.nio.ByteBuffer toByteBuffer(short) -> toByteBuffer
    java.nio.ByteBuffer toByteBuffer(int) -> toByteBuffer
    java.nio.ByteBuffer[] toByteBuffers(java.nio.ByteBuffer[],int,int) -> toByteBuffers
    byte[] toBytes(java.util.List) -> toBytes
    byte[] toBytes(java.nio.ByteBuffer[]) -> toBytes
    byte[] toBytes(java.nio.ByteBuffer) -> toBytes
    java.lang.String toHexString(byte[],int) -> toHexString
    java.lang.String toHexString(java.util.List,int) -> toHexString
    java.lang.String toHexString(java.nio.ByteBuffer[],int) -> toHexString
    java.lang.String toTextOrHexString(java.nio.ByteBuffer,java.lang.String,int) -> toTextOrHexString
    java.lang.String toTextOrHexString(java.nio.ByteBuffer[],java.lang.String,int) -> toTextOrHexString
    java.lang.String toTextAndHexString(java.nio.ByteBuffer[],java.lang.String,int) -> toTextAndHexString
    java.lang.String toString(java.lang.Throwable) -> toString
org.xsocket.Execution -> org.xsocket.Execution:
    int NONTHREADED -> NONTHREADED
    int MULTITHREADED -> MULTITHREADED
    int value() -> value
org.xsocket.IDataSink -> org.xsocket.IDataSink:
    int write(byte) -> write
    int write(byte[]) -> write
    int write(byte[],int,int) -> write
    int write(java.nio.ByteBuffer) -> write
    long write(java.nio.ByteBuffer[]) -> write
    long write(java.nio.ByteBuffer[],int,int) -> write
    long write(java.util.List) -> write
    int write(int) -> write
    int write(short) -> write
    int write(long) -> write
    int write(double) -> write
    int write(java.lang.String) -> write
    long transferFrom(java.nio.channels.FileChannel) -> transferFrom
    long transferFrom(java.nio.channels.ReadableByteChannel) -> transferFrom
    long transferFrom(java.nio.channels.ReadableByteChannel,int) -> transferFrom
org.xsocket.IDataSource -> org.xsocket.IDataSource:
    int read(java.nio.ByteBuffer) -> read
    byte readByte() -> readByte
    short readShort() -> readShort
    int readInt() -> readInt
    long readLong() -> readLong
    double readDouble() -> readDouble
    byte[] readBytesByLength(int) -> readBytesByLength
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,int) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByLength(int) -> readByteBufferByLength
    java.lang.String readStringByLength(int) -> readStringByLength
    java.lang.String readStringByDelimiter(java.lang.String) -> readStringByDelimiter
    byte[] readBytesByDelimiter(java.lang.String) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,int) -> readBytesByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,int) -> readStringByDelimiter
    long transferTo(java.nio.channels.WritableByteChannel,int) -> transferTo
org.xsocket.IDestroyable -> org.xsocket.IDestroyable:
    void destroy() -> destroy
org.xsocket.ILifeCycle -> org.xsocket.ILifeCycle:
    void onInit() -> onInit
    void onDestroy() -> onDestroy
org.xsocket.IntrospectionBasedDynamicMBean -> org.xsocket.IntrospectionBasedDynamicMBean:
    java.util.logging.Logger LOG -> LOG
    java.lang.Object obj -> obj
    java.util.Map properties -> properties
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    javax.management.AttributeList getAttributes(java.lang.String[]) -> getAttributes
    void setAttribute(javax.management.Attribute) -> setAttribute
    javax.management.AttributeList setAttributes(javax.management.AttributeList) -> setAttributes
    java.lang.Object invoke(java.lang.String,java.lang.Object[],java.lang.String[]) -> invoke
    javax.management.MBeanInfo getMBeanInfo() -> getMBeanInfo
    void analyze(java.lang.Object) -> analyze
    void analyzeType(java.lang.Class) -> analyzeType
    org.xsocket.IntrospectionBasedDynamicMBean$Info getInfo(java.lang.String) -> getInfo
    boolean isAcceptedPropertyType(java.lang.Class) -> isAcceptedPropertyType
org.xsocket.IntrospectionBasedDynamicMBean$1 -> org.xsocket.IntrospectionBasedDynamicMBean$1:
org.xsocket.IntrospectionBasedDynamicMBean$Info -> org.xsocket.IntrospectionBasedDynamicMBean$Info:
    java.lang.String propertyName -> propertyName
    java.lang.Class propertyType -> propertyType
    java.lang.String propertyDescription -> propertyDescription
    boolean isReadable -> isReadable
    boolean isWriteable -> isWriteable
    boolean isIs -> isIs
    javax.management.MBeanAttributeInfo asbMBeanAttributeInfo() -> asbMBeanAttributeInfo
org.xsocket.MaxReadSizeExceededException -> org.xsocket.MaxReadSizeExceededException:
    long serialVersionUID -> serialVersionUID
org.xsocket.MaxWriteSizeExceededException -> org.xsocket.MaxWriteSizeExceededException:
    long serialVersionUID -> serialVersionUID
org.xsocket.Resource -> org.xsocket.Resource:
    java.lang.Class type() -> type
org.xsocket.SerializedTaskQueue -> org.xsocket.SerializedTaskQueue:
    java.util.logging.Logger LOG -> LOG
    java.util.LinkedList multithreadedTaskQueue -> multithreadedTaskQueue
    java.util.concurrent.locks.ReentrantLock processLock -> processLock
    org.xsocket.SerializedTaskQueue$MultithreadedTaskProcessor multithreadedTaskProcessor -> multithreadedTaskProcessor
    void performNonThreaded(java.lang.Runnable,java.util.concurrent.Executor) -> performNonThreaded
    void performMultiThreaded(java.lang.Runnable,java.util.concurrent.Executor) -> performMultiThreaded
    void performPendingTasks() -> performPendingTasks
    void access$100(org.xsocket.SerializedTaskQueue) -> access$100
org.xsocket.SerializedTaskQueue$1 -> org.xsocket.SerializedTaskQueue$1:
org.xsocket.SerializedTaskQueue$MultithreadedTaskProcessor -> org.xsocket.SerializedTaskQueue$MultithreadedTaskProcessor:
    org.xsocket.SerializedTaskQueue this$0 -> this$0
    void run() -> run
org.xsocket.WorkerPool -> org.xsocket.WorkerPool:
    java.util.logging.Logger LOG -> LOG
    java.util.logging.Logger access$000() -> access$000
org.xsocket.WorkerPool$DefaultThreadFactory -> org.xsocket.WorkerPool$DefaultThreadFactory:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> poolNumber
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    java.lang.String namePrefix -> namePrefix
    boolean isDaemon -> isDaemon
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.xsocket.WorkerPool$WorkerPoolAwareQueue -> org.xsocket.WorkerPool$WorkerPoolAwareQueue:
    org.xsocket.WorkerPool workerPool -> workerPool
    void init(org.xsocket.WorkerPool) -> init
    boolean offer(java.lang.Runnable) -> offer
    boolean offer(java.lang.Object) -> offer
org.xsocket.connection.AbstractMemoryManager -> org.xsocket.connection.AbstractMemoryManager:
    java.util.logging.Logger LOG -> LOG
    boolean useDirectMemory -> useDirectMemory
    int preallocationSize -> preallocationSize
    int minPreallocatedBufferSize -> minPreallocatedBufferSize
    boolean preallocate -> preallocate
    java.nio.ByteBuffer acquireMemoryStandardSizeOrPreallocated(int) -> acquireMemoryStandardSizeOrPreallocated
    void recycleMemory(java.nio.ByteBuffer) -> recycleMemory
    void preallocate() -> preallocate
    int getCurrentSizePreallocatedBuffer() -> getCurrentSizePreallocatedBuffer
    boolean isPreallocationMode() -> isPreallocationMode
    void setPreallocationMode(boolean) -> setPreallocationMode
    void setPreallocatedMinBufferSize(java.lang.Integer) -> setPreallocatedMinBufferSize
    java.lang.Integer getPreallocatedMinBufferSize() -> getPreallocatedMinBufferSize
    java.lang.Integer getPreallocationBufferSize() -> getPreallocationBufferSize
    void setPreallocationBufferSize(java.lang.Integer) -> setPreallocationBufferSize
    boolean isDirect() -> isDirect
    void setDirect(boolean) -> setDirect
    java.nio.ByteBuffer extractAndRecycleMemory(java.nio.ByteBuffer,int) -> extractAndRecycleMemory
    java.nio.ByteBuffer acquireMemoryMinSize(int) -> acquireMemoryMinSize
    java.nio.ByteBuffer newBuffer(int) -> newBuffer
    java.nio.ByteBuffer newBuffer(int,boolean) -> newBuffer
    java.lang.String toString() -> toString
org.xsocket.connection.AbstractNonBlockingStream -> org.xsocket.connection.AbstractNonBlockingStream:
    java.util.logging.Logger LOG -> LOG
    org.xsocket.connection.ReadQueue readQueue -> readQueue
    org.xsocket.connection.WriteQueue writeQueue -> writeQueue
    int TRANSFER_BYTE_BUFFER_MAX_MAP_SIZE -> TRANSFER_BYTE_BUFFER_MAX_MAP_SIZE
    java.util.concurrent.atomic.AtomicReference defaultEncodingRef -> defaultEncodingRef
    java.util.concurrent.atomic.AtomicBoolean isOpen -> isOpen
    java.util.concurrent.atomic.AtomicBoolean autoflush -> autoflush
    java.util.concurrent.atomic.AtomicReference flushmodeRef -> flushmodeRef
    java.util.concurrent.atomic.AtomicReference attachmentRef -> attachmentRef
    boolean isSuppressReuseBufferWarning -> isSuppressReuseBufferWarning
    java.lang.ref.WeakReference previousWriteByteBuffer -> previousWriteByteBuffer
    java.lang.ref.WeakReference previousWriteByteBuffers -> previousWriteByteBuffers
    java.lang.ref.WeakReference previousWriteByteBuffers2 -> previousWriteByteBuffers2
    void close() -> close
    void closeSilence() -> closeSilence
    void setAttachment(java.lang.Object) -> setAttachment
    java.lang.Object getAttachment() -> getAttachment
    void setEncoding(java.lang.String) -> setEncoding
    java.lang.String getEncoding() -> getEncoding
    void setFlushmode(org.xsocket.connection.IConnection$FlushMode) -> setFlushmode
    org.xsocket.connection.IConnection$FlushMode getFlushmode() -> getFlushmode
    void setSuppressReuseBufferWarning(boolean) -> setSuppressReuseBufferWarning
    boolean isSuppressReuseBufferWarning() -> isSuppressReuseBufferWarning
    int getWriteTransferChunkeSize() -> getWriteTransferChunkeSize
    void setAutoflush(boolean) -> setAutoflush
    boolean isAutoflush() -> isAutoflush
    boolean isMoreInputDataExpected() -> isMoreInputDataExpected
    boolean isDataWriteable() -> isDataWriteable
    int indexOf(java.lang.String) -> indexOf
    int indexOf(java.lang.String,java.lang.String) -> indexOf
    int available() -> available
    int getReadQueueSize() -> getReadQueueSize
    int getReadBufferVersion() -> getReadBufferVersion
    java.nio.ByteBuffer[] onRead(java.nio.ByteBuffer[]) -> onRead
    void unread(java.nio.ByteBuffer[]) -> unread
    void unread(java.nio.ByteBuffer) -> unread
    void unread(byte[]) -> unread
    void unread(java.lang.String) -> unread
    byte readByte() -> readByte
    short readShort() -> readShort
    int readInt() -> readInt
    long readLong() -> readLong
    double readDouble() -> readDouble
    int read(java.nio.ByteBuffer) -> read
    void copyBuffers(java.nio.ByteBuffer[],java.nio.ByteBuffer) -> copyBuffers
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,int) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String,int) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByLength(int) -> readByteBufferByLength
    byte[] readBytesByDelimiter(java.lang.String) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,int) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String,int) -> readBytesByDelimiter
    byte[] readBytesByLength(int) -> readBytesByLength
    java.lang.String readStringByDelimiter(java.lang.String) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,int) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String,int) -> readStringByDelimiter
    java.lang.String readStringByLength(int) -> readStringByLength
    java.lang.String readStringByLength(int,java.lang.String) -> readStringByLength
    long transferTo(java.nio.channels.WritableByteChannel,int) -> transferTo
    java.nio.ByteBuffer readSingleByteBuffer(int) -> readSingleByteBuffer
    int write(byte) -> write
    int write(byte[]) -> write
    int write(byte[],int,int) -> write
    int write(short) -> write
    int write(int) -> write
    int write(long) -> write
    int write(double) -> write
    int write(java.lang.String) -> write
    int write(java.lang.String,java.lang.String) -> write
    long write(java.util.List) -> write
    long write(java.nio.ByteBuffer[],int,int) -> write
    long write(java.nio.ByteBuffer[]) -> write
    int write(java.nio.ByteBuffer) -> write
    void onPreWrite(int) -> onPreWrite
    long transferFrom(java.nio.channels.FileChannel) -> transferFrom
    long transferFrom(java.nio.channels.ReadableByteChannel) -> transferFrom
    long transferFrom(java.nio.channels.ReadableByteChannel,int) -> transferFrom
    long transfer(java.nio.channels.ReadableByteChannel,java.nio.channels.WritableByteChannel,int) -> transfer
    void markReadPosition() -> markReadPosition
    void markWritePosition() -> markWritePosition
    boolean resetToWriteMark() -> resetToWriteMark
    boolean resetToReadMark() -> resetToReadMark
    void removeReadMark() -> removeReadMark
    void removeWriteMark() -> removeWriteMark
    boolean reset() -> reset
    void onWriteDataInserted() -> onWriteDataInserted
    int getWriteBufferSize() -> getWriteBufferSize
    boolean isWriteBufferEmpty() -> isWriteBufferEmpty
    java.nio.ByteBuffer[] drainWriteQueue() -> drainWriteQueue
    java.nio.ByteBuffer[] drainReadQueue() -> drainReadQueue
    java.nio.ByteBuffer[] copyReadQueue() -> copyReadQueue
    boolean isReadBufferEmpty() -> isReadBufferEmpty
    void appendDataToReadBuffer(java.nio.ByteBuffer[],int) -> appendDataToReadBuffer
    void onPostAppend() -> onPostAppend
    java.lang.String printReadBuffer(java.lang.String) -> printReadBuffer
    java.lang.String printWriteBuffer(java.lang.String) -> printWriteBuffer
    void ensureStreamIsOpen() -> ensureStreamIsOpen
    void ensureStreamIsOpenAndWritable() -> ensureStreamIsOpenAndWritable
    java.lang.String getInfo() -> getInfo
org.xsocket.connection.AbstractNonBlockingStream$ISink -> org.xsocket.connection.AbstractNonBlockingStream$ISink:
    void reset() -> reset
    boolean isEmpty() -> isEmpty
    int getSize() -> getSize
    void append(java.nio.ByteBuffer) -> append
    void append(java.nio.ByteBuffer[]) -> append
    java.nio.ByteBuffer[] drain() -> drain
    java.nio.ByteBuffer[] copy() -> copy
    java.lang.String toString(java.lang.String) -> toString
org.xsocket.connection.AbstractNonBlockingStream$ISource -> org.xsocket.connection.AbstractNonBlockingStream$ISource:
    void reset() -> reset
    int getVersion(boolean) -> getVersion
    void setVersion(int) -> setVersion
    int getSize() -> getSize
    void append(java.nio.ByteBuffer[],int) -> append
    void addFirst(java.nio.ByteBuffer[]) -> addFirst
    java.nio.ByteBuffer[] drain() -> drain
    java.nio.ByteBuffer[] copy() -> copy
    java.nio.ByteBuffer readSingleByteBuffer(int) -> readSingleByteBuffer
    java.nio.ByteBuffer[] readByteBufferByLength(int) -> readByteBufferByLength
    java.nio.ByteBuffer[] readByteBufferByDelimiter(byte[],int) -> readByteBufferByDelimiter
    int retrieveIndexOf(byte[],int) -> retrieveIndexOf
    java.lang.String toString(java.lang.String) -> toString
org.xsocket.connection.AbstractSynchronizedConnection -> org.xsocket.connection.AbstractSynchronizedConnection:
    org.xsocket.connection.IConnection delegate -> delegate
    java.lang.Object getAttachment() -> getAttachment
    long getConnectionTimeoutMillis() -> getConnectionTimeoutMillis
    java.lang.String getId() -> getId
    long getIdleTimeoutMillis() -> getIdleTimeoutMillis
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.lang.Object getOption(java.lang.String) -> getOption
    java.util.Map getOptions() -> getOptions
    long getRemainingMillisToConnectionTimeout() -> getRemainingMillisToConnectionTimeout
    long getRemainingMillisToIdleTimeout() -> getRemainingMillisToIdleTimeout
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    boolean isOpen() -> isOpen
    boolean isServerSide() -> isServerSide
    void setAttachment(java.lang.Object) -> setAttachment
    void setConnectionTimeoutMillis(long) -> setConnectionTimeoutMillis
    void setIdleTimeoutMillis(long) -> setIdleTimeoutMillis
    void setOption(java.lang.String,java.lang.Object) -> setOption
    void close() -> close
org.xsocket.connection.BlockingConnection -> org.xsocket.connection.BlockingConnection:
    java.util.logging.Logger LOG -> LOG
    java.lang.String READ_TIMEOUT_KEY -> READ_TIMEOUT_KEY
    int DEFAULT_TIMEOUT -> DEFAULT_TIMEOUT
    org.xsocket.connection.BlockingConnection$ReadNotificationHandler handler -> handler
    java.lang.Object readGuard -> readGuard
    org.xsocket.connection.INonBlockingConnection delegate -> delegate
    int readTimeout -> readTimeout
    java.util.concurrent.atomic.AtomicBoolean disconnected -> disconnected
    java.util.concurrent.atomic.AtomicBoolean idleTimeout -> idleTimeout
    java.util.concurrent.atomic.AtomicBoolean connectionTimeout -> connectionTimeout
    java.util.concurrent.atomic.AtomicBoolean isClosed -> isClosed
    org.xsocket.connection.INonBlockingConnection getDelegate() -> getDelegate
    void setReadTimeoutMillis(int) -> setReadTimeoutMillis
    void setReceiveTimeoutMillis(int) -> setReceiveTimeoutMillis
    int getReceiveTimeoutMillis() -> getReceiveTimeoutMillis
    int getReadTimeoutMillis() -> getReadTimeoutMillis
    int getMaxReadBufferThreshold() -> getMaxReadBufferThreshold
    void setMaxReadBufferThreshold(int) -> setMaxReadBufferThreshold
    void setEncoding(java.lang.String) -> setEncoding
    java.lang.String getEncoding() -> getEncoding
    boolean isOpen() -> isOpen
    boolean isServerSide() -> isServerSide
    void close() -> close
    void flush() -> flush
    java.lang.String getId() -> getId
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    int getPendingWriteDataSize() -> getPendingWriteDataSize
    void suspendRead() -> suspendRead
    boolean isReadSuspended() -> isReadSuspended
    void resumeRead() -> resumeRead
    boolean isReceivingSuspended() -> isReceivingSuspended
    void resumeReceiving() -> resumeReceiving
    void suspendReceiving() -> suspendReceiving
    void setFlushmode(org.xsocket.connection.IConnection$FlushMode) -> setFlushmode
    org.xsocket.connection.IConnection$FlushMode getFlushmode() -> getFlushmode
    void setOption(java.lang.String,java.lang.Object) -> setOption
    java.lang.Object getOption(java.lang.String) -> getOption
    java.util.Map getOptions() -> getOptions
    void setIdleTimeoutMillis(long) -> setIdleTimeoutMillis
    long getIdleTimeoutMillis() -> getIdleTimeoutMillis
    void setConnectionTimeoutMillis(long) -> setConnectionTimeoutMillis
    long getConnectionTimeoutMillis() -> getConnectionTimeoutMillis
    long getRemainingMillisToConnectionTimeout() -> getRemainingMillisToConnectionTimeout
    long getRemainingMillisToIdleTimeout() -> getRemainingMillisToIdleTimeout
    void setAttachment(java.lang.Object) -> setAttachment
    java.lang.Object getAttachment() -> getAttachment
    void setAutoflush(boolean) -> setAutoflush
    boolean isAutoflush() -> isAutoflush
    void activateSecuredMode() -> activateSecuredMode
    void deactivateSecuredMode() -> deactivateSecuredMode
    boolean isSecure() -> isSecure
    void markReadPosition() -> markReadPosition
    void markWritePosition() -> markWritePosition
    void unread(java.nio.ByteBuffer[]) -> unread
    void unread(byte[]) -> unread
    void unread(java.nio.ByteBuffer) -> unread
    void unread(java.lang.String) -> unread
    int read(java.nio.ByteBuffer) -> read
    java.lang.Integer getSize() -> getSize
    byte readByte() -> readByte
    short readShort() -> readShort
    int readInt() -> readInt
    long readLong() -> readLong
    double readDouble() -> readDouble
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,int) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String,int) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByLength(int) -> readByteBufferByLength
    byte[] readBytesByDelimiter(java.lang.String) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,int) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String,int) -> readBytesByDelimiter
    byte[] readBytesByLength(int) -> readBytesByLength
    java.lang.String readStringByDelimiter(java.lang.String) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,int) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String,int) -> readStringByDelimiter
    java.lang.String readStringByLength(int) -> readStringByLength
    java.lang.String readStringByLength(int,java.lang.String) -> readStringByLength
    long transferTo(java.nio.channels.WritableByteChannel,int) -> transferTo
    boolean resetToWriteMark() -> resetToWriteMark
    boolean resetToReadMark() -> resetToReadMark
    void removeReadMark() -> removeReadMark
    void removeWriteMark() -> removeWriteMark
    int write(byte) -> write
    int write(byte[]) -> write
    void write(byte[],org.xsocket.connection.IWriteCompletionHandler) -> write
    int write(byte[],int,int) -> write
    void write(byte[],int,int,org.xsocket.connection.IWriteCompletionHandler) -> write
    int write(short) -> write
    int write(int) -> write
    int write(long) -> write
    int write(double) -> write
    int write(java.lang.String) -> write
    int write(java.lang.String,java.lang.String) -> write
    void write(java.lang.String,java.lang.String,org.xsocket.connection.IWriteCompletionHandler) -> write
    long write(java.util.ArrayList) -> write
    long write(java.util.List) -> write
    long write(java.nio.ByteBuffer[]) -> write
    long write(java.nio.ByteBuffer[],int,int) -> write
    int write(java.nio.ByteBuffer) -> write
    void write(java.nio.ByteBuffer,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.nio.ByteBuffer[],org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.nio.ByteBuffer[],int,int,org.xsocket.connection.IWriteCompletionHandler) -> write
    long transferFrom(java.nio.channels.ReadableByteChannel) -> transferFrom
    void write(java.util.List,org.xsocket.connection.IWriteCompletionHandler) -> write
    long transferFrom(java.nio.channels.ReadableByteChannel,int) -> transferFrom
    long transferFrom(java.nio.channels.FileChannel) -> transferFrom
    java.lang.String toString() -> toString
    void onReadDataInserted() -> onReadDataInserted
    org.xsocket.connection.INonBlockingConnection access$100(org.xsocket.connection.BlockingConnection) -> access$100
    java.util.concurrent.atomic.AtomicBoolean access$200(org.xsocket.connection.BlockingConnection) -> access$200
    void access$800(org.xsocket.connection.BlockingConnection) -> access$800
    java.util.concurrent.atomic.AtomicBoolean access$900(org.xsocket.connection.BlockingConnection) -> access$900
    java.util.concurrent.atomic.AtomicBoolean access$1000(org.xsocket.connection.BlockingConnection) -> access$1000
    java.util.concurrent.atomic.AtomicBoolean access$1100(org.xsocket.connection.BlockingConnection) -> access$1100
    int access$1200(org.xsocket.connection.BlockingConnection) -> access$1200
    java.lang.Object access$1300(org.xsocket.connection.BlockingConnection) -> access$1300
    java.lang.Integer access$1400(org.xsocket.connection.BlockingConnection) -> access$1400
    java.util.logging.Logger access$1500() -> access$1500
org.xsocket.connection.BlockingConnection$1 -> org.xsocket.connection.BlockingConnection$1:
org.xsocket.connection.BlockingConnection$ByteBufferReadTask -> org.xsocket.connection.BlockingConnection$ByteBufferReadTask:
    java.nio.ByteBuffer buffer -> buffer
    org.xsocket.connection.BlockingConnection this$0 -> this$0
    java.lang.Integer doRead() -> doRead
    java.lang.Object doRead() -> doRead
org.xsocket.connection.BlockingConnection$ByteBuffersByDelimiterReadTask -> org.xsocket.connection.BlockingConnection$ByteBuffersByDelimiterReadTask:
    java.lang.String delimiter -> delimiter
    java.lang.String encoding -> encoding
    int maxLength -> maxLength
    org.xsocket.connection.BlockingConnection this$0 -> this$0
    java.nio.ByteBuffer[] doRead() -> doRead
    java.lang.Object doRead() -> doRead
org.xsocket.connection.BlockingConnection$ByteBuffersByLengthReadTask -> org.xsocket.connection.BlockingConnection$ByteBuffersByLengthReadTask:
    int length -> length
    org.xsocket.connection.BlockingConnection this$0 -> this$0
    java.nio.ByteBuffer[] doRead() -> doRead
    java.lang.Object doRead() -> doRead
org.xsocket.connection.BlockingConnection$ByteReadTask -> org.xsocket.connection.BlockingConnection$ByteReadTask:
    org.xsocket.connection.BlockingConnection this$0 -> this$0
    java.lang.Byte doRead() -> doRead
    java.lang.Object doRead() -> doRead
org.xsocket.connection.BlockingConnection$DoubleReadTask -> org.xsocket.connection.BlockingConnection$DoubleReadTask:
    org.xsocket.connection.BlockingConnection this$0 -> this$0
    java.lang.Double doRead() -> doRead
    java.lang.Object doRead() -> doRead
org.xsocket.connection.BlockingConnection$IntegerReadTask -> org.xsocket.connection.BlockingConnection$IntegerReadTask:
    org.xsocket.connection.BlockingConnection this$0 -> this$0
    java.lang.Integer doRead() -> doRead
    java.lang.Object doRead() -> doRead
org.xsocket.connection.BlockingConnection$LongReadTask -> org.xsocket.connection.BlockingConnection$LongReadTask:
    org.xsocket.connection.BlockingConnection this$0 -> this$0
    java.lang.Long doRead() -> doRead
    java.lang.Object doRead() -> doRead
org.xsocket.connection.BlockingConnection$ReadNotificationHandler -> org.xsocket.connection.BlockingConnection$ReadNotificationHandler:
    org.xsocket.connection.BlockingConnection this$0 -> this$0
    boolean onData(org.xsocket.connection.INonBlockingConnection) -> onData
    boolean onDisconnect(org.xsocket.connection.INonBlockingConnection) -> onDisconnect
    boolean onConnectionTimeout(org.xsocket.connection.INonBlockingConnection) -> onConnectionTimeout
    boolean onIdleTimeout(org.xsocket.connection.INonBlockingConnection) -> onIdleTimeout
org.xsocket.connection.BlockingConnection$ReadTask -> org.xsocket.connection.BlockingConnection$ReadTask:
    org.xsocket.connection.BlockingConnection this$0 -> this$0
    java.lang.Object read() -> read
    int available(int) -> available
    java.lang.Object doRead() -> doRead
org.xsocket.connection.BlockingConnection$RevisionAwareBufferUnderflowException -> org.xsocket.connection.BlockingConnection$RevisionAwareBufferUnderflowException:
    long serialVersionUID -> serialVersionUID
    int revision -> revision
    int getRevision() -> getRevision
org.xsocket.connection.BlockingConnection$ShortReadTask -> org.xsocket.connection.BlockingConnection$ShortReadTask:
    org.xsocket.connection.BlockingConnection this$0 -> this$0
    java.lang.Short doRead() -> doRead
    java.lang.Object doRead() -> doRead
org.xsocket.connection.BlockingConnectionPool -> org.xsocket.connection.BlockingConnectionPool:
    org.xsocket.connection.NonBlockingConnectionPool pool -> pool
    boolean isOpen() -> isOpen
    org.xsocket.connection.IBlockingConnection getBlockingConnection(java.lang.String,int) -> getBlockingConnection
    org.xsocket.connection.IBlockingConnection getBlockingConnection(java.lang.String,int,boolean) -> getBlockingConnection
    org.xsocket.connection.IBlockingConnection getBlockingConnection(java.lang.String,int,int) -> getBlockingConnection
    org.xsocket.connection.IBlockingConnection getBlockingConnection(java.lang.String,int,int,boolean) -> getBlockingConnection
    org.xsocket.connection.IBlockingConnection getBlockingConnection(java.net.InetAddress,int) -> getBlockingConnection
    org.xsocket.connection.IBlockingConnection getBlockingConnection(java.net.InetAddress,int,boolean) -> getBlockingConnection
    org.xsocket.connection.IBlockingConnection getBlockingConnection(java.net.InetAddress,int,int) -> getBlockingConnection
    org.xsocket.connection.IBlockingConnection getBlockingConnection(java.net.InetAddress,int,int,boolean) -> getBlockingConnection
    void addListener(org.xsocket.ILifeCycle) -> addListener
    boolean removeListener(org.xsocket.ILifeCycle) -> removeListener
    int getPooledMaxIdleTimeMillis() -> getPooledMaxIdleTimeMillis
    void setPooledMaxIdleTimeMillis(int) -> setPooledMaxIdleTimeMillis
    int getPooledMaxLifeTimeMillis() -> getPooledMaxLifeTimeMillis
    void setPooledMaxLifeTimeMillis(int) -> setPooledMaxLifeTimeMillis
    int getMaxActive() -> getMaxActive
    void setMaxActive(int) -> setMaxActive
    void setMaxActivePerServer(int) -> setMaxActivePerServer
    int getMaxActivePerServer() -> getMaxActivePerServer
    int getMaxIdle() -> getMaxIdle
    void setMaxIdle(int) -> setMaxIdle
    int getNumActive() -> getNumActive
    int getNumIdle() -> getNumIdle
    java.util.List getActiveConnectionInfos() -> getActiveConnectionInfos
    java.util.List getIdleConnectionInfos() -> getIdleConnectionInfos
    int getNumCreated() -> getNumCreated
    int getNumCreationError() -> getNumCreationError
    int getNumDestroyed() -> getNumDestroyed
    int getNumTimeoutPooledMaxIdleTime() -> getNumTimeoutPooledMaxIdleTime
    int getNumTimeoutPooledMaxLifeTime() -> getNumTimeoutPooledMaxLifeTime
    int getNumPendingGet() -> getNumPendingGet
    void close() -> close
    void destroy(org.xsocket.connection.IBlockingConnection) -> destroy
org.xsocket.connection.ConnectionManager -> org.xsocket.connection.ConnectionManager:
    java.util.logging.Logger LOG -> LOG
    java.util.ArrayList handles -> handles
    long DEFAULT_WATCHDOG_PERIOD_CONNECTION_CHECK_MILLISTION_CHECK_MILLIS -> DEFAULT_WATCHDOG_PERIOD_CONNECTION_CHECK_MILLISTION_CHECK_MILLIS
    long watchDogPeriodConCheckMillis -> watchDogPeriodConCheckMillis
    org.xsocket.connection.ConnectionManager$WachdogTask conCheckWatchDogTask -> conCheckWatchDogTask
    int watchDogRuns -> watchDogRuns
    int countIdleTimeouts -> countIdleTimeouts
    int countConnectionTimeouts -> countConnectionTimeouts
    java.util.concurrent.atomic.AtomicInteger currentSize -> currentSize
    org.xsocket.connection.ConnectionManager$TimeoutMgmHandle register(org.xsocket.connection.NonBlockingConnection) -> register
    long getWatchDogPeriodMillis() -> getWatchDogPeriodMillis
    int getWatchDogRuns() -> getWatchDogRuns
    void remove(java.lang.ref.WeakReference) -> remove
    int getSize() -> getSize
    int computeSize() -> computeSize
    java.util.Set getConnections() -> getConnections
    void close() -> close
    int getNumberOfIdleTimeouts() -> getNumberOfIdleTimeouts
    int getNumberOfConnectionTimeouts() -> getNumberOfConnectionTimeouts
    void updateTimeoutCheckPeriod(long) -> updateTimeoutCheckPeriod
    void check() -> check
    void checkTimeout(org.xsocket.connection.NonBlockingConnection,long) -> checkTimeout
    java.util.logging.Logger access$100() -> access$100
    void access$200(org.xsocket.connection.ConnectionManager,java.lang.ref.WeakReference) -> access$200
org.xsocket.connection.ConnectionManager$1 -> org.xsocket.connection.ConnectionManager$1:
org.xsocket.connection.ConnectionManager$TimeoutMgmHandle -> org.xsocket.connection.ConnectionManager$TimeoutMgmHandle:
    org.xsocket.connection.NonBlockingConnection con -> con
    java.lang.ref.WeakReference handleRef -> handleRef
    org.xsocket.connection.ConnectionManager this$0 -> this$0
    java.lang.ref.WeakReference getWeakRef() -> getWeakRef
    void updateCheckPeriod(long) -> updateCheckPeriod
    void destroy() -> destroy
    org.xsocket.connection.NonBlockingConnection getConnection() -> getConnection
org.xsocket.connection.ConnectionManager$WachdogTask -> org.xsocket.connection.ConnectionManager$WachdogTask:
    org.xsocket.connection.ConnectionManager this$0 -> this$0
    void run() -> run
org.xsocket.connection.ConnectionPoolMBeanProxyFactory -> org.xsocket.connection.ConnectionPoolMBeanProxyFactory:
    javax.management.ObjectName createAndRegister(org.xsocket.connection.IConnectionPool,java.lang.String,javax.management.MBeanServer) -> createAndRegister
    void registerGlobalDispatcherPool(java.lang.String,javax.management.MBeanServer) -> registerGlobalDispatcherPool
    void unregister(org.xsocket.connection.IConnectionPool,java.lang.String,javax.management.MBeanServer) -> unregister
    void access$000(org.xsocket.connection.IConnectionPool,java.lang.String,javax.management.MBeanServer) -> access$000
org.xsocket.connection.ConnectionPoolMBeanProxyFactory$ResourcePoolListener -> org.xsocket.connection.ConnectionPoolMBeanProxyFactory$ResourcePoolListener:
    java.util.logging.Logger LOG -> LOG
    org.xsocket.connection.IConnectionPool pool -> pool
    java.lang.String domain -> domain
    javax.management.MBeanServer mbeanServer -> mbeanServer
    void onInit() -> onInit
    void onDestroy() -> onDestroy
org.xsocket.connection.ConnectionUtils -> org.xsocket.connection.ConnectionUtils:
    java.util.logging.Logger LOG -> LOG
    java.lang.String DEFAULT_DOMAIN -> DEFAULT_DOMAIN
    java.lang.String SERVER_TRHREAD_PREFIX -> SERVER_TRHREAD_PREFIX
    org.xsocket.connection.IoProvider IO_PROVIDER -> IO_PROVIDER
    java.util.Map handlerInfoCache -> handlerInfoCache
    java.util.Map completionHandlerInfoCache -> completionHandlerInfoCache
    java.lang.String implementationVersion -> implementationVersion
    java.lang.String implementationDate -> implementationDate
    org.xsocket.connection.IoProvider getIoProvider() -> getIoProvider
    int validateSufficientDatasizeByIntLengthField(org.xsocket.connection.INonBlockingConnection) -> validateSufficientDatasizeByIntLengthField
    int validateSufficientDatasizeByIntLengthField(org.xsocket.connection.INonBlockingConnection,boolean) -> validateSufficientDatasizeByIntLengthField
    void start(org.xsocket.connection.IServer) -> start
    void start(org.xsocket.connection.IServer,int) -> start
    java.nio.ByteBuffer[] copy(java.nio.ByteBuffer[]) -> copy
    org.xsocket.connection.INonBlockingConnection synchronizedConnection(org.xsocket.connection.INonBlockingConnection) -> synchronizedConnection
    org.xsocket.connection.IBlockingConnection synchronizedConnection(org.xsocket.connection.IBlockingConnection) -> synchronizedConnection
    java.nio.ByteBuffer[] duplicate(java.nio.ByteBuffer[]) -> duplicate
    java.nio.ByteBuffer duplicate(java.nio.ByteBuffer) -> duplicate
    java.nio.ByteBuffer copy(java.nio.ByteBuffer) -> copy
    javax.management.ObjectName registerMBean(org.xsocket.connection.IServer) -> registerMBean
    javax.management.ObjectName registerMBean(org.xsocket.connection.IServer,java.lang.String) -> registerMBean
    javax.management.ObjectName registerMBean(org.xsocket.connection.IServer,java.lang.String,javax.management.MBeanServer) -> registerMBean
    javax.management.ObjectName registerMBean(org.xsocket.connection.IConnectionPool) -> registerMBean
    javax.management.ObjectName registerMBean(org.xsocket.connection.IConnectionPool,java.lang.String) -> registerMBean
    javax.management.ObjectName registerMBean(org.xsocket.connection.IConnectionPool,java.lang.String,javax.management.MBeanServer) -> registerMBean
    boolean matchVersion(java.lang.String,java.lang.String) -> matchVersion
    boolean isGreater(java.lang.String,java.lang.String) -> isGreater
    boolean isSmaller(java.lang.String,java.lang.String) -> isSmaller
    java.io.IOException toIOException(java.lang.Throwable) -> toIOException
    java.io.IOException toIOException(java.lang.String,java.lang.Throwable) -> toIOException
    java.lang.String getImplementationVersion() -> getImplementationVersion
    java.lang.String getImplementationDate() -> getImplementationDate
    void readVersionFile() -> readVersionFile
    long computeSize(java.nio.ByteBuffer[]) -> computeSize
    java.util.Map newMapCache(int) -> newMapCache
    void injectServerField(org.xsocket.connection.Server,java.lang.Object) -> injectServerField
    boolean isDispatcherThread() -> isDispatcherThread
    boolean isConnectorThread() -> isConnectorThread
    java.lang.String printSelectionKey(java.nio.channels.SelectionKey) -> printSelectionKey
    java.lang.String printSelectionKeyValue(int) -> printSelectionKeyValue
    org.xsocket.connection.IHandlerInfo getHandlerInfo(org.xsocket.connection.IHandler) -> getHandlerInfo
    org.xsocket.connection.ConnectionUtils$CompletionHandlerInfo getCompletionHandlerInfo(org.xsocket.connection.IWriteCompletionHandler) -> getCompletionHandlerInfo
    boolean isMethodThreaded(java.lang.Class,java.lang.String,boolean,java.lang.Class[]) -> isMethodThreaded
    boolean isHandlerMultithreaded(java.lang.Object) -> isHandlerMultithreaded
    boolean access$000(java.lang.Object) -> access$000
    boolean access$100(java.lang.Class,java.lang.String,boolean,java.lang.Class[]) -> access$100
org.xsocket.connection.ConnectionUtils$1 -> org.xsocket.connection.ConnectionUtils$1:
    java.util.concurrent.CountDownLatch val$startedSignal -> val$startedSignal
    void onInit() -> onInit
    void onDestroy() -> onDestroy
org.xsocket.connection.ConnectionUtils$CompletionHandlerInfo -> org.xsocket.connection.ConnectionUtils$CompletionHandlerInfo:
    boolean isOnWrittenMultithreaded -> isOnWrittenMultithreaded
    boolean isOnExceptionMultithreaded -> isOnExceptionMultithreaded
    boolean isUnsynchronized -> isUnsynchronized
    boolean isUnsynchronized() -> isUnsynchronized
    boolean isOnWrittenMultithreaded() -> isOnWrittenMultithreaded
    boolean isOnExceptionMutlithreaded() -> isOnExceptionMutlithreaded
org.xsocket.connection.ConnectionUtils$HandlerInfo -> org.xsocket.connection.ConnectionUtils$HandlerInfo:
    boolean isConnectHandler -> isConnectHandler
    boolean isDataHandler -> isDataHandler
    boolean isDisconnectHandler -> isDisconnectHandler
    boolean isIdleTimeoutHandler -> isIdleTimeoutHandler
    boolean isConnectionTimeoutHandler -> isConnectionTimeoutHandler
    boolean isConnectExceptionHandler -> isConnectExceptionHandler
    boolean isLifeCycle -> isLifeCycle
    boolean isConnectionScoped -> isConnectionScoped
    boolean isHandlerMultithreaded -> isHandlerMultithreaded
    boolean isConnectHandlerMultithreaded -> isConnectHandlerMultithreaded
    boolean isDataHandlerMultithreaded -> isDataHandlerMultithreaded
    boolean isDisconnectHandlerMultithreaded -> isDisconnectHandlerMultithreaded
    boolean isIdleTimeoutHandlerMultithreaded -> isIdleTimeoutHandlerMultithreaded
    boolean isConnectionTimeoutHandlerMultithreaded -> isConnectionTimeoutHandlerMultithreaded
    boolean isConnectExceptionHandlerMultithreaded -> isConnectExceptionHandlerMultithreaded
    boolean isUnsynchronized -> isUnsynchronized
    boolean isConnectHandler() -> isConnectHandler
    boolean isDataHandler() -> isDataHandler
    boolean isDisconnectHandler() -> isDisconnectHandler
    boolean isIdleTimeoutHandler() -> isIdleTimeoutHandler
    boolean isConnectionTimeoutHandler() -> isConnectionTimeoutHandler
    boolean isLifeCycle() -> isLifeCycle
    boolean isConnectionScoped() -> isConnectionScoped
    boolean isConnectExceptionHandler() -> isConnectExceptionHandler
    boolean isConnectExceptionHandlerMultithreaded() -> isConnectExceptionHandlerMultithreaded
    boolean isUnsynchronized() -> isUnsynchronized
    boolean isConnectHandlerMultithreaded() -> isConnectHandlerMultithreaded
    boolean isDataHandlerMultithreaded() -> isDataHandlerMultithreaded
    boolean isDisconnectHandlerMultithreaded() -> isDisconnectHandlerMultithreaded
    boolean isIdleTimeoutHandlerMultithreaded() -> isIdleTimeoutHandlerMultithreaded
    boolean isConnectionTimeoutHandlerMultithreaded() -> isConnectionTimeoutHandlerMultithreaded
org.xsocket.connection.ConnectionUtils$MapCache -> org.xsocket.connection.ConnectionUtils$MapCache:
    long serialVersionUID -> serialVersionUID
    int maxSize -> maxSize
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
org.xsocket.connection.DispatcherPoolMBeanProxyFactory -> org.xsocket.connection.DispatcherPoolMBeanProxyFactory:
    java.util.logging.Logger LOG -> LOG
    javax.management.ObjectName createAndRegister(org.xsocket.connection.IoSocketDispatcherPool,java.lang.String,javax.management.MBeanServer) -> createAndRegister
    java.util.logging.Logger access$000() -> access$000
org.xsocket.connection.DispatcherPoolMBeanProxyFactory$DispatcherPoolListener -> org.xsocket.connection.DispatcherPoolMBeanProxyFactory$DispatcherPoolListener:
    java.lang.String domain -> domain
    javax.management.MBeanServer mbeanServer -> mbeanServer
    void onDispatcherAdded(org.xsocket.connection.IoSocketDispatcher) -> onDispatcherAdded
    void onDispatcherRemoved(org.xsocket.connection.IoSocketDispatcher) -> onDispatcherRemoved
org.xsocket.connection.ExtendedClosedChannelException -> org.xsocket.connection.ExtendedClosedChannelException:
    long serialVersionUID -> serialVersionUID
    java.lang.String msg -> msg
    java.lang.String getMessage() -> getMessage
org.xsocket.connection.HandlerAdapter -> org.xsocket.connection.HandlerAdapter:
    java.util.logging.Logger LOG -> LOG
    org.xsocket.connection.IHandler NULL_HANDLER -> NULL_HANDLER
    org.xsocket.connection.HandlerAdapter NULL_HANDLER_ADAPTER -> NULL_HANDLER_ADAPTER
    org.xsocket.connection.IHandler handler -> handler
    org.xsocket.connection.IHandlerInfo handlerInfo -> handlerInfo
    org.xsocket.connection.HandlerAdapter newInstance(org.xsocket.connection.IHandler) -> newInstance
    org.xsocket.connection.IHandler getHandler() -> getHandler
    org.xsocket.connection.IHandlerInfo getHandlerInfo() -> getHandlerInfo
    java.lang.String printHandler(java.lang.Object) -> printHandler
    boolean onConnect(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,java.util.concurrent.Executor,boolean) -> onConnect
    boolean performOnConnect(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,org.xsocket.connection.IConnectHandler) -> performOnConnect
    boolean onData(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,java.util.concurrent.Executor,boolean,boolean) -> onData
    void performOnData(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,boolean,org.xsocket.connection.IDataHandler) -> performOnData
    boolean onDisconnect(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,java.util.concurrent.Executor,boolean) -> onDisconnect
    void performOnDisconnect(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,org.xsocket.connection.IDisconnectHandler) -> performOnDisconnect
    boolean onConnectException(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,java.util.concurrent.Executor,java.io.IOException) -> onConnectException
    boolean performOnConnectException(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,java.io.IOException,org.xsocket.connection.IConnectExceptionHandler) -> performOnConnectException
    boolean onIdleTimeout(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,java.util.concurrent.Executor) -> onIdleTimeout
    void performOnIdleTimeout(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,org.xsocket.connection.IIdleTimeoutHandler) -> performOnIdleTimeout
    boolean onConnectionTimeout(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,java.util.concurrent.Executor) -> onConnectionTimeout
    void performOnConnectionTimeout(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,org.xsocket.connection.IConnectionTimeoutHandler) -> performOnConnectionTimeout
    void onInit() -> onInit
    void onDestroy() -> onDestroy
    org.xsocket.connection.HandlerAdapter getConnectionInstance() -> getConnectionInstance
    void closeSilence(org.xsocket.connection.INonBlockingConnection) -> closeSilence
    boolean access$100(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,org.xsocket.connection.IConnectHandler) -> access$100
    void access$200(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,boolean,org.xsocket.connection.IDataHandler) -> access$200
    void access$300(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,org.xsocket.connection.IDisconnectHandler) -> access$300
    boolean access$400(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,java.io.IOException,org.xsocket.connection.IConnectExceptionHandler) -> access$400
    java.lang.String access$500(java.lang.Object) -> access$500
    java.util.logging.Logger access$600() -> access$600
    void access$700(org.xsocket.connection.INonBlockingConnection) -> access$700
    void access$800(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,org.xsocket.connection.IIdleTimeoutHandler) -> access$800
    void access$900(org.xsocket.connection.INonBlockingConnection,org.xsocket.SerializedTaskQueue,org.xsocket.connection.IConnectionTimeoutHandler) -> access$900
org.xsocket.connection.HandlerAdapter$1 -> org.xsocket.connection.HandlerAdapter$1:
org.xsocket.connection.HandlerAdapter$NullHandler -> org.xsocket.connection.HandlerAdapter$NullHandler:
org.xsocket.connection.HandlerAdapter$PerformOnConnectExceptionTask -> org.xsocket.connection.HandlerAdapter$PerformOnConnectExceptionTask:
    org.xsocket.connection.IConnectExceptionHandler handler -> handler
    org.xsocket.connection.INonBlockingConnection connection -> connection
    org.xsocket.SerializedTaskQueue taskQueue -> taskQueue
    java.io.IOException ioe -> ioe
    void run() -> run
org.xsocket.connection.HandlerAdapter$PerformOnConnectTask -> org.xsocket.connection.HandlerAdapter$PerformOnConnectTask:
    org.xsocket.connection.IConnectHandler handler -> handler
    org.xsocket.connection.INonBlockingConnection connection -> connection
    org.xsocket.SerializedTaskQueue taskQueue -> taskQueue
    void run() -> run
org.xsocket.connection.HandlerAdapter$PerformOnConnectionTimeoutTask -> org.xsocket.connection.HandlerAdapter$PerformOnConnectionTimeoutTask:
    org.xsocket.connection.IConnectionTimeoutHandler handler -> handler
    org.xsocket.connection.INonBlockingConnection connection -> connection
    org.xsocket.SerializedTaskQueue taskQueue -> taskQueue
    void run() -> run
org.xsocket.connection.HandlerAdapter$PerformOnDataTask -> org.xsocket.connection.HandlerAdapter$PerformOnDataTask:
    org.xsocket.connection.IDataHandler handler -> handler
    org.xsocket.connection.INonBlockingConnection connection -> connection
    org.xsocket.SerializedTaskQueue taskQueue -> taskQueue
    boolean ignoreException -> ignoreException
    void run() -> run
    java.lang.String toString() -> toString
org.xsocket.connection.HandlerAdapter$PerformOnDisconnectTask -> org.xsocket.connection.HandlerAdapter$PerformOnDisconnectTask:
    org.xsocket.connection.IDisconnectHandler handler -> handler
    org.xsocket.connection.INonBlockingConnection connection -> connection
    org.xsocket.SerializedTaskQueue taskQueue -> taskQueue
    void run() -> run
    java.lang.String toString() -> toString
org.xsocket.connection.HandlerAdapter$PerformOnIdleTimeoutTask -> org.xsocket.connection.HandlerAdapter$PerformOnIdleTimeoutTask:
    org.xsocket.connection.IIdleTimeoutHandler handler -> handler
    org.xsocket.connection.INonBlockingConnection connection -> connection
    org.xsocket.SerializedTaskQueue taskQueue -> taskQueue
    void run() -> run
org.xsocket.connection.HandlerChain -> org.xsocket.connection.HandlerChain:
    java.util.logging.Logger LOG -> LOG
    org.xsocket.connection.Server server -> server
    java.util.List enclosingChains -> enclosingChains
    org.xsocket.connection.HandlerChain$HandlerInfo handlerInfo -> handlerInfo
    java.util.List handlers -> handlers
    boolean isUnsynchronized -> isUnsynchronized
    java.util.List lifeCycleChain -> lifeCycleChain
    boolean isOnConnectPathMultithreaded -> isOnConnectPathMultithreaded
    java.util.List connectHandlerChain -> connectHandlerChain
    boolean isOnDataPathMultithreaded -> isOnDataPathMultithreaded
    java.util.List dataHandlerChain -> dataHandlerChain
    boolean isOnDisconnectPathMultithreaded -> isOnDisconnectPathMultithreaded
    java.util.List disconnectHandlerChain -> disconnectHandlerChain
    boolean isOnIdleTimeoutPathMultithreaded -> isOnIdleTimeoutPathMultithreaded
    java.util.List idleTimeoutHandlerChain -> idleTimeoutHandlerChain
    boolean isOnConnectionTimeoutPathMultithreaded -> isOnConnectionTimeoutPathMultithreaded
    java.util.List connectionTimeoutHandlerChain -> connectionTimeoutHandlerChain
    org.xsocket.connection.IHandlerInfo getHandlerInfo() -> getHandlerInfo
    void onInit() -> onInit
    void onDestroy() -> onDestroy
    void addLast(org.xsocket.connection.IHandler) -> addLast
    void registerChildChain(org.xsocket.connection.HandlerChain) -> registerChildChain
    void computePath() -> computePath
    boolean onConnect(org.xsocket.connection.INonBlockingConnection) -> onConnect
    boolean onData(org.xsocket.connection.INonBlockingConnection) -> onData
    boolean onDisconnect(org.xsocket.connection.INonBlockingConnection) -> onDisconnect
    boolean onIdleTimeout(org.xsocket.connection.INonBlockingConnection) -> onIdleTimeout
    boolean onConnectionTimeout(org.xsocket.connection.INonBlockingConnection) -> onConnectionTimeout
    boolean access$100(org.xsocket.connection.HandlerChain) -> access$100
    boolean access$200(org.xsocket.connection.HandlerChain) -> access$200
    boolean access$300(org.xsocket.connection.HandlerChain) -> access$300
    boolean access$400(org.xsocket.connection.HandlerChain) -> access$400
    boolean access$500(org.xsocket.connection.HandlerChain) -> access$500
org.xsocket.connection.HandlerChain$1 -> org.xsocket.connection.HandlerChain$1:
org.xsocket.connection.HandlerChain$HandlerInfo -> org.xsocket.connection.HandlerChain$HandlerInfo:
    org.xsocket.connection.HandlerChain this$0 -> this$0
    boolean isConnectionScoped() -> isConnectionScoped
    boolean isConnectExceptionHandler() -> isConnectExceptionHandler
    boolean isConnectExceptionHandlerMultithreaded() -> isConnectExceptionHandlerMultithreaded
    boolean isConnectHandler() -> isConnectHandler
    boolean isConnectHandlerMultithreaded() -> isConnectHandlerMultithreaded
    boolean isConnectionTimeoutHandler() -> isConnectionTimeoutHandler
    boolean isConnectionTimeoutHandlerMultithreaded() -> isConnectionTimeoutHandlerMultithreaded
    boolean isDataHandler() -> isDataHandler
    boolean isDataHandlerMultithreaded() -> isDataHandlerMultithreaded
    boolean isDisconnectHandler() -> isDisconnectHandler
    boolean isDisconnectHandlerMultithreaded() -> isDisconnectHandlerMultithreaded
    boolean isIdleTimeoutHandler() -> isIdleTimeoutHandler
    boolean isIdleTimeoutHandlerMultithreaded() -> isIdleTimeoutHandlerMultithreaded
    boolean isLifeCycle() -> isLifeCycle
    boolean isUnsynchronized() -> isUnsynchronized
org.xsocket.connection.IBlockingConnection -> org.xsocket.connection.IBlockingConnection:
    int DEFAULT_READ_TIMEOUT -> DEFAULT_READ_TIMEOUT
    void setAutoflush(boolean) -> setAutoflush
    boolean isAutoflush() -> isAutoflush
    void flush() -> flush
    void activateSecuredMode() -> activateSecuredMode
    void deactivateSecuredMode() -> deactivateSecuredMode
    boolean isSecure() -> isSecure
    int getPendingWriteDataSize() -> getPendingWriteDataSize
    void setReadTimeoutMillis(int) -> setReadTimeoutMillis
    int getReadTimeoutMillis() -> getReadTimeoutMillis
    void suspendReceiving() -> suspendReceiving
    void resumeReceiving() -> resumeReceiving
    boolean isReceivingSuspended() -> isReceivingSuspended
    void unread(java.nio.ByteBuffer[]) -> unread
    void unread(java.nio.ByteBuffer) -> unread
    void unread(byte[]) -> unread
    void unread(java.lang.String) -> unread
    boolean resetToWriteMark() -> resetToWriteMark
    boolean resetToReadMark() -> resetToReadMark
    void markWritePosition() -> markWritePosition
    void markReadPosition() -> markReadPosition
    void removeReadMark() -> removeReadMark
    void removeWriteMark() -> removeWriteMark
    java.lang.String getEncoding() -> getEncoding
    void setEncoding(java.lang.String) -> setEncoding
    int write(java.lang.String,java.lang.String) -> write
    void write(java.nio.ByteBuffer[],org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.nio.ByteBuffer,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.util.List,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.nio.ByteBuffer[],int,int,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(byte[],org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(byte[],int,int,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.lang.String,java.lang.String,org.xsocket.connection.IWriteCompletionHandler) -> write
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String,int) -> readByteBufferByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String,int) -> readBytesByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String,int) -> readStringByDelimiter
    java.lang.String readStringByLength(int,java.lang.String) -> readStringByLength
    long transferFrom(java.nio.channels.FileChannel) -> transferFrom
    int getMaxReadBufferThreshold() -> getMaxReadBufferThreshold
    void setMaxReadBufferThreshold(int) -> setMaxReadBufferThreshold
    void setFlushmode(org.xsocket.connection.IConnection$FlushMode) -> setFlushmode
    org.xsocket.connection.IConnection$FlushMode getFlushmode() -> getFlushmode
org.xsocket.connection.IConnectExceptionHandler -> org.xsocket.connection.IConnectExceptionHandler:
    boolean onConnectException(org.xsocket.connection.INonBlockingConnection,java.io.IOException) -> onConnectException
org.xsocket.connection.IConnectHandler -> org.xsocket.connection.IConnectHandler:
    boolean onConnect(org.xsocket.connection.INonBlockingConnection) -> onConnect
org.xsocket.connection.IConnection -> org.xsocket.connection.IConnection:
    java.lang.String INITIAL_DEFAULT_ENCODING -> INITIAL_DEFAULT_ENCODING
    java.lang.String SO_SNDBUF -> SO_SNDBUF
    java.lang.String SO_RCVBUF -> SO_RCVBUF
    java.lang.String SO_REUSEADDR -> SO_REUSEADDR
    java.lang.String SO_KEEPALIVE -> SO_KEEPALIVE
    java.lang.String SO_LINGER -> SO_LINGER
    java.lang.String TCP_NODELAY -> TCP_NODELAY
    java.lang.String SO_TIMEOUT -> SO_TIMEOUT
    long MAX_TIMEOUT_MILLIS -> MAX_TIMEOUT_MILLIS
    long DEFAULT_CONNECTION_TIMEOUT_MILLIS -> DEFAULT_CONNECTION_TIMEOUT_MILLIS
    long DEFAULT_IDLE_TIMEOUT_MILLIS -> DEFAULT_IDLE_TIMEOUT_MILLIS
    org.xsocket.connection.IConnection$FlushMode DEFAULT_FLUSH_MODE -> DEFAULT_FLUSH_MODE
    boolean DEFAULT_AUTOFLUSH -> DEFAULT_AUTOFLUSH
    java.lang.String getId() -> getId
    boolean isServerSide() -> isServerSide
    boolean isOpen() -> isOpen
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    long getIdleTimeoutMillis() -> getIdleTimeoutMillis
    void setIdleTimeoutMillis(long) -> setIdleTimeoutMillis
    long getConnectionTimeoutMillis() -> getConnectionTimeoutMillis
    void setConnectionTimeoutMillis(long) -> setConnectionTimeoutMillis
    long getRemainingMillisToIdleTimeout() -> getRemainingMillisToIdleTimeout
    long getRemainingMillisToConnectionTimeout() -> getRemainingMillisToConnectionTimeout
    void setOption(java.lang.String,java.lang.Object) -> setOption
    java.lang.Object getOption(java.lang.String) -> getOption
    java.util.Map getOptions() -> getOptions
    void setAttachment(java.lang.Object) -> setAttachment
    java.lang.Object getAttachment() -> getAttachment
org.xsocket.connection.IConnection$FlushMode -> org.xsocket.connection.IConnection$FlushMode:
    org.xsocket.connection.IConnection$FlushMode SYNC -> SYNC
    org.xsocket.connection.IConnection$FlushMode ASYNC -> ASYNC
    org.xsocket.connection.IConnection$FlushMode[] $VALUES -> $VALUES
    org.xsocket.connection.IConnection$FlushMode[] values() -> values
    org.xsocket.connection.IConnection$FlushMode valueOf(java.lang.String) -> valueOf
org.xsocket.connection.IConnectionPool -> org.xsocket.connection.IConnectionPool:
    int DEFAULT_MAX_ACTIVE -> DEFAULT_MAX_ACTIVE
    int DEFAULT_MAX_ACTIVE_PER_SERVER -> DEFAULT_MAX_ACTIVE_PER_SERVER
    int DEFAULT_MAX_IDLE -> DEFAULT_MAX_IDLE
    long DEFAULT_MAX_WAIT_MILLIS -> DEFAULT_MAX_WAIT_MILLIS
    int DEFAULT_MAX_WAITING -> DEFAULT_MAX_WAITING
    int DEFAULT_IDLE_TIMEOUT_MILLIS -> DEFAULT_IDLE_TIMEOUT_MILLIS
    int DEFAULT_LIFE_TIMEOUT_MILLIS -> DEFAULT_LIFE_TIMEOUT_MILLIS
    int DEFAULT_CREATION_TIMEOUT_MILLIS -> DEFAULT_CREATION_TIMEOUT_MILLIS
    boolean isOpen() -> isOpen
    void addListener(org.xsocket.ILifeCycle) -> addListener
    boolean removeListener(org.xsocket.ILifeCycle) -> removeListener
    int getMaxActive() -> getMaxActive
    int getMaxActivePerServer() -> getMaxActivePerServer
    void setMaxActivePerServer(int) -> setMaxActivePerServer
    void setMaxActive(int) -> setMaxActive
    int getMaxIdle() -> getMaxIdle
    void setMaxIdle(int) -> setMaxIdle
    int getNumActive() -> getNumActive
    int getNumDestroyed() -> getNumDestroyed
    int getNumTimeoutPooledMaxLifeTime() -> getNumTimeoutPooledMaxLifeTime
    int getNumTimeoutPooledMaxIdleTime() -> getNumTimeoutPooledMaxIdleTime
    int getNumCreated() -> getNumCreated
    java.util.List getActiveConnectionInfos() -> getActiveConnectionInfos
    java.util.List getIdleConnectionInfos() -> getIdleConnectionInfos
    int getNumIdle() -> getNumIdle
    int getPooledMaxIdleTimeMillis() -> getPooledMaxIdleTimeMillis
    void setPooledMaxIdleTimeMillis(int) -> setPooledMaxIdleTimeMillis
    int getPooledMaxLifeTimeMillis() -> getPooledMaxLifeTimeMillis
    void setPooledMaxLifeTimeMillis(int) -> setPooledMaxLifeTimeMillis
org.xsocket.connection.IConnectionScoped -> org.xsocket.connection.IConnectionScoped:
    java.lang.Object clone() -> clone
org.xsocket.connection.IConnectionTimeoutHandler -> org.xsocket.connection.IConnectionTimeoutHandler:
    boolean onConnectionTimeout(org.xsocket.connection.INonBlockingConnection) -> onConnectionTimeout
org.xsocket.connection.IDataHandler -> org.xsocket.connection.IDataHandler:
    boolean onData(org.xsocket.connection.INonBlockingConnection) -> onData
org.xsocket.connection.IDisconnectHandler -> org.xsocket.connection.IDisconnectHandler:
    boolean onDisconnect(org.xsocket.connection.INonBlockingConnection) -> onDisconnect
org.xsocket.connection.IExecutor -> org.xsocket.connection.IExecutor:
    void performNonThreaded(java.lang.Runnable) -> performNonThreaded
    void performMultiThreaded(java.lang.Runnable) -> performMultiThreaded
org.xsocket.connection.IHandler -> org.xsocket.connection.IHandler:
    int DEFAULT_EXECUTION_MODE -> DEFAULT_EXECUTION_MODE
org.xsocket.connection.IHandlerChangeListener -> org.xsocket.connection.IHandlerChangeListener:
    void onHanderReplaced(org.xsocket.connection.IHandler,org.xsocket.connection.IHandler) -> onHanderReplaced
org.xsocket.connection.IHandlerInfo -> org.xsocket.connection.IHandlerInfo:
    boolean isConnectHandler() -> isConnectHandler
    boolean isDataHandler() -> isDataHandler
    boolean isDisconnectHandler() -> isDisconnectHandler
    boolean isIdleTimeoutHandler() -> isIdleTimeoutHandler
    boolean isConnectionTimeoutHandler() -> isConnectionTimeoutHandler
    boolean isLifeCycle() -> isLifeCycle
    boolean isConnectionScoped() -> isConnectionScoped
    boolean isConnectExceptionHandler() -> isConnectExceptionHandler
    boolean isUnsynchronized() -> isUnsynchronized
    boolean isConnectExceptionHandlerMultithreaded() -> isConnectExceptionHandlerMultithreaded
    boolean isConnectHandlerMultithreaded() -> isConnectHandlerMultithreaded
    boolean isDataHandlerMultithreaded() -> isDataHandlerMultithreaded
    boolean isDisconnectHandlerMultithreaded() -> isDisconnectHandlerMultithreaded
    boolean isIdleTimeoutHandlerMultithreaded() -> isIdleTimeoutHandlerMultithreaded
    boolean isConnectionTimeoutHandlerMultithreaded() -> isConnectionTimeoutHandlerMultithreaded
org.xsocket.connection.IIdleTimeoutHandler -> org.xsocket.connection.IIdleTimeoutHandler:
    boolean onIdleTimeout(org.xsocket.connection.INonBlockingConnection) -> onIdleTimeout
org.xsocket.connection.IIoAcceptorCallback -> org.xsocket.connection.IIoAcceptorCallback:
    void onConnected() -> onConnected
    void onDisconnected() -> onDisconnected
    void onConnectionAccepted(org.xsocket.connection.IoChainableHandler) -> onConnectionAccepted
org.xsocket.connection.IIoConnectorCallback -> org.xsocket.connection.IIoConnectorCallback:
    void onConnectionEstablished() -> onConnectionEstablished
    void onConnectError(java.io.IOException) -> onConnectError
    void onConnectTimeout() -> onConnectTimeout
org.xsocket.connection.IIoDispatcherPoolListener -> org.xsocket.connection.IIoDispatcherPoolListener:
    void onDispatcherAdded(org.xsocket.connection.IoSocketDispatcher) -> onDispatcherAdded
    void onDispatcherRemoved(org.xsocket.connection.IoSocketDispatcher) -> onDispatcherRemoved
org.xsocket.connection.IIoHandlerCallback -> org.xsocket.connection.IIoHandlerCallback:
    void onData(java.nio.ByteBuffer[],int) -> onData
    void onPostData() -> onPostData
    void onConnect() -> onConnect
    void onConnectException(java.io.IOException) -> onConnectException
    void onDisconnect() -> onDisconnect
    void onConnectionAbnormalTerminated() -> onConnectionAbnormalTerminated
    void onWritten(java.nio.ByteBuffer) -> onWritten
    void onWriteException(java.io.IOException,java.nio.ByteBuffer) -> onWriteException
org.xsocket.connection.INonBlockingConnection -> org.xsocket.connection.INonBlockingConnection:
    int UNLIMITED -> UNLIMITED
    void setHandler(org.xsocket.connection.IHandler) -> setHandler
    org.xsocket.connection.IHandler getHandler() -> getHandler
    java.lang.String getEncoding() -> getEncoding
    void setEncoding(java.lang.String) -> setEncoding
    void setAutoflush(boolean) -> setAutoflush
    boolean isAutoflush() -> isAutoflush
    void flush() -> flush
    boolean isSecuredModeActivateable() -> isSecuredModeActivateable
    void activateSecuredMode() -> activateSecuredMode
    void deactivateSecuredMode() -> deactivateSecuredMode
    boolean isSecure() -> isSecure
    int getPendingWriteDataSize() -> getPendingWriteDataSize
    void suspendReceiving() -> suspendReceiving
    void resumeReceiving() -> resumeReceiving
    boolean isReceivingSuspended() -> isReceivingSuspended
    int write(java.lang.String,java.lang.String) -> write
    void write(java.nio.ByteBuffer[],org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.nio.ByteBuffer,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.nio.ByteBuffer[],int,int,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.util.List,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(byte[],org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(byte[],int,int,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.lang.String,java.lang.String,org.xsocket.connection.IWriteCompletionHandler) -> write
    void unread(java.nio.ByteBuffer[]) -> unread
    void unread(java.nio.ByteBuffer) -> unread
    void unread(byte[]) -> unread
    void unread(java.lang.String) -> unread
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String,int) -> readByteBufferByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String,int) -> readBytesByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String,int) -> readStringByDelimiter
    java.lang.String readStringByLength(int,java.lang.String) -> readStringByLength
    long transferFrom(java.nio.channels.FileChannel) -> transferFrom
    int indexOf(java.lang.String) -> indexOf
    int indexOf(java.lang.String,java.lang.String) -> indexOf
    void setWriteTransferRate(int) -> setWriteTransferRate
    int getWriteTransferRate() -> getWriteTransferRate
    int available() -> available
    int getReadBufferVersion() -> getReadBufferVersion
    boolean isOpen() -> isOpen
    java.util.concurrent.Executor getWorkerpool() -> getWorkerpool
    void setWorkerpool(java.util.concurrent.Executor) -> setWorkerpool
    boolean resetToWriteMark() -> resetToWriteMark
    boolean resetToReadMark() -> resetToReadMark
    void markWritePosition() -> markWritePosition
    void markReadPosition() -> markReadPosition
    void removeReadMark() -> removeReadMark
    void removeWriteMark() -> removeWriteMark
    int getMaxReadBufferThreshold() -> getMaxReadBufferThreshold
    void setMaxReadBufferThreshold(int) -> setMaxReadBufferThreshold
    void setFlushmode(org.xsocket.connection.IConnection$FlushMode) -> setFlushmode
    org.xsocket.connection.IConnection$FlushMode getFlushmode() -> getFlushmode
org.xsocket.connection.IServer -> org.xsocket.connection.IServer:
    int DEFAULT_IDLE_TIMEOUT_SEC -> DEFAULT_IDLE_TIMEOUT_SEC
    int DEFAULT_CONNECTION_TIMEOUT_SEC -> DEFAULT_CONNECTION_TIMEOUT_SEC
    java.lang.String SO_RCVBUF -> SO_RCVBUF
    java.lang.String SO_REUSEADDR -> SO_REUSEADDR
    int DEFAULT_READ_TRANSFER_PREALLOCATION_SIZE -> DEFAULT_READ_TRANSFER_PREALLOCATION_SIZE
    int DEFAULT_READ_TRANSFER_PREALLOCATION_MIN_SIZE -> DEFAULT_READ_TRANSFER_PREALLOCATION_MIN_SIZE
    boolean DEFAULT_READ_TRANSFER_USE_DIRECT -> DEFAULT_READ_TRANSFER_USE_DIRECT
    boolean isOpen() -> isOpen
    void start() -> start
    long getIdleTimeoutMillis() -> getIdleTimeoutMillis
    void setIdleTimeoutMillis(long) -> setIdleTimeoutMillis
    long getConnectionTimeoutMillis() -> getConnectionTimeoutMillis
    void setConnectionTimeoutMillis(long) -> setConnectionTimeoutMillis
    void setWriteTransferRate(int) -> setWriteTransferRate
    int getLocalPort() -> getLocalPort
    java.util.concurrent.Executor getWorkerpool() -> getWorkerpool
    void setWorkerpool(java.util.concurrent.Executor) -> setWorkerpool
    org.xsocket.connection.IHandler getHandler() -> getHandler
    void setFlushmode(org.xsocket.connection.IConnection$FlushMode) -> setFlushmode
    org.xsocket.connection.IConnection$FlushMode getFlushmode() -> getFlushmode
    void setAutoflush(boolean) -> setAutoflush
    boolean getAutoflush() -> getAutoflush
    void addListener(org.xsocket.connection.IServerListener) -> addListener
    boolean removeListener(org.xsocket.connection.IServerListener) -> removeListener
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    java.lang.Object getOption(java.lang.String) -> getOption
    void setStartUpLogMessage(java.lang.String) -> setStartUpLogMessage
    java.lang.String getStartUpLogMessage() -> getStartUpLogMessage
    java.util.Map getOptions() -> getOptions
org.xsocket.connection.IServerListener -> org.xsocket.connection.IServerListener:
org.xsocket.connection.ISystemHandler -> org.xsocket.connection.ISystemHandler:
org.xsocket.connection.IUnsynchronized -> org.xsocket.connection.IUnsynchronized:
org.xsocket.connection.IWriteCompletionHandler -> org.xsocket.connection.IWriteCompletionHandler:
    void onWritten(int) -> onWritten
    void onException(java.io.IOException) -> onException
org.xsocket.connection.IoAcceptor -> org.xsocket.connection.IoAcceptor:
    java.util.logging.Logger LOG -> LOG
    java.lang.String SO_RCVBUF -> SO_RCVBUF
    java.lang.String SO_REUSEADDR -> SO_REUSEADDR
    java.util.Map SUPPORTED_OPTIONS -> SUPPORTED_OPTIONS
    org.xsocket.connection.IIoAcceptorCallback callback -> callback
    java.util.concurrent.atomic.AtomicBoolean isOpen -> isOpen
    java.nio.channels.ServerSocketChannel serverChannel -> serverChannel
    boolean sslOn -> sslOn
    javax.net.ssl.SSLContext sslContext -> sslContext
    org.xsocket.connection.IoSocketDispatcherPool dispatcherPool -> dispatcherPool
    long acceptedConnections -> acceptedConnections
    long lastRequestAccpetedRate -> lastRequestAccpetedRate
    boolean $assertionsDisabled -> $assertionsDisabled
    void setOption(java.lang.String,java.lang.Object) -> setOption
    boolean isSSLSupported() -> isSSLSupported
    boolean isSSLOn() -> isSSLOn
    java.lang.Object getOption(java.lang.String) -> getOption
    java.util.Map getOptions() -> getOptions
    org.xsocket.connection.IoSocketDispatcherPool getDispatcherPool() -> getDispatcherPool
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    void listen() -> listen
    void accept() -> accept
    void close() -> close
    void setDispatcherSize(int) -> setDispatcherSize
    int getDispatcherSize() -> getDispatcherSize
    boolean getReceiveBufferIsDirect() -> getReceiveBufferIsDirect
    void setReceiveBufferIsDirect(boolean) -> setReceiveBufferIsDirect
    boolean isReceiveBufferPreallocationMode() -> isReceiveBufferPreallocationMode
    void setReceiveBufferPreallocationMode(boolean) -> setReceiveBufferPreallocationMode
    void setReceiveBufferPreallocatedMinSize(java.lang.Integer) -> setReceiveBufferPreallocatedMinSize
    java.lang.Integer getReceiveBufferPreallocatedMinSize() -> getReceiveBufferPreallocatedMinSize
    java.lang.Integer getReceiveBufferPreallocationSize() -> getReceiveBufferPreallocationSize
    void setReceiveBufferPreallocationSize(int) -> setReceiveBufferPreallocationSize
    double getAcceptedRateCountPerSec() -> getAcceptedRateCountPerSec
    long getSendRateBytesPerSec() -> getSendRateBytesPerSec
    long getReceiveRateBytesPerSec() -> getReceiveRateBytesPerSec
org.xsocket.connection.IoActivateableSSLHandler -> org.xsocket.connection.IoActivateableSSLHandler:
    java.util.logging.Logger LOG -> LOG
    java.util.concurrent.atomic.AtomicReference outboundModeRef -> outboundModeRef
    java.util.concurrent.atomic.AtomicReference inboundModeRef -> inboundModeRef
    org.xsocket.connection.IoQueue inNetDataQueue -> inNetDataQueue
    org.xsocket.connection.IoQueue outNetDataQueue -> outNetDataQueue
    org.xsocket.connection.IoQueue outAppDataQueue -> outAppDataQueue
    org.xsocket.connection.IoActivateableSSLHandler$PendingWriteMap pendingWriteMap -> pendingWriteMap
    org.xsocket.connection.IoActivateableSSLHandler$IOEventHandler ioEventHandler -> ioEventHandler
    javax.net.ssl.SSLContext sslContext -> sslContext
    boolean isClientMode -> isClientMode
    org.xsocket.connection.AbstractMemoryManager memoryManager -> memoryManager
    java.util.concurrent.atomic.AtomicReference sslProcessorRef -> sslProcessorRef
    boolean $assertionsDisabled -> $assertionsDisabled
    void init(org.xsocket.connection.IIoHandlerCallback) -> init
    boolean isSecure() -> isSecure
    boolean reset() -> reset
    void setPreviousCallback(org.xsocket.connection.IIoHandlerCallback) -> setPreviousCallback
    void close(boolean) -> close
    int getPendingWriteDataSize() -> getPendingWriteDataSize
    boolean hasDataToSend() -> hasDataToSend
    void write(java.nio.ByteBuffer[]) -> write
    void hardFlush() -> hardFlush
    void flush() -> flush
    boolean preActivateSecuredMode() -> preActivateSecuredMode
    java.lang.String printSSLState() -> printSSLState
    void activateSecuredMode(java.nio.ByteBuffer[]) -> activateSecuredMode
    void deactivateSecuredMode() -> deactivateSecuredMode
    void onInboundClosed() -> onInboundClosed
    void onHandshakeFinished() -> onHandshakeFinished
    void readIncomingEncryptedData(java.nio.ByteBuffer[]) -> readIncomingEncryptedData
    void onDestroy() -> onDestroy
    void onDataDecrypted(java.nio.ByteBuffer) -> onDataDecrypted
    void onPostDataDecrypted() -> onPostDataDecrypted
    void onDataEncrypted(java.nio.ByteBuffer,java.nio.ByteBuffer) -> onDataEncrypted
    void onPostDataEncrypted() -> onPostDataEncrypted
    java.util.concurrent.atomic.AtomicReference access$200(org.xsocket.connection.IoActivateableSSLHandler) -> access$200
    void access$300(org.xsocket.connection.IoActivateableSSLHandler,java.nio.ByteBuffer[]) -> access$300
    org.xsocket.connection.IoQueue access$400(org.xsocket.connection.IoActivateableSSLHandler) -> access$400
    java.util.logging.Logger access$500() -> access$500
    org.xsocket.connection.IoActivateableSSLHandler$PendingWriteMap access$600(org.xsocket.connection.IoActivateableSSLHandler) -> access$600
org.xsocket.connection.IoActivateableSSLHandler$1 -> org.xsocket.connection.IoActivateableSSLHandler$1:
org.xsocket.connection.IoActivateableSSLHandler$IOEventHandler -> org.xsocket.connection.IoActivateableSSLHandler$IOEventHandler:
    boolean $assertionsDisabled -> $assertionsDisabled
    org.xsocket.connection.IoActivateableSSLHandler this$0 -> this$0
    void onData(java.nio.ByteBuffer[],int) -> onData
    void onPostData() -> onPostData
    void onConnect() -> onConnect
    void onConnectException(java.io.IOException) -> onConnectException
    void onWriteException(java.io.IOException,java.nio.ByteBuffer) -> onWriteException
    void onWritten(java.nio.ByteBuffer) -> onWritten
    void onDisconnect() -> onDisconnect
    void onConnectionAbnormalTerminated() -> onConnectionAbnormalTerminated
org.xsocket.connection.IoActivateableSSLHandler$Mode -> org.xsocket.connection.IoActivateableSSLHandler$Mode:
    org.xsocket.connection.IoActivateableSSLHandler$Mode PLAIN -> PLAIN
    org.xsocket.connection.IoActivateableSSLHandler$Mode SSL -> SSL
    org.xsocket.connection.IoActivateableSSLHandler$Mode BUFFERING -> BUFFERING
    org.xsocket.connection.IoActivateableSSLHandler$Mode[] $VALUES -> $VALUES
    org.xsocket.connection.IoActivateableSSLHandler$Mode[] values() -> values
    org.xsocket.connection.IoActivateableSSLHandler$Mode valueOf(java.lang.String) -> valueOf
org.xsocket.connection.IoActivateableSSLHandler$PendingWriteMap -> org.xsocket.connection.IoActivateableSSLHandler$PendingWriteMap:
    java.util.Map plainEncryptedMapping -> plainEncryptedMapping
    java.util.Map encryptedPlainMapping -> encryptedPlainMapping
    void add(java.nio.ByteBuffer,java.nio.ByteBuffer) -> add
    java.nio.ByteBuffer getPlainIfWritten(java.nio.ByteBuffer) -> getPlainIfWritten
    void clear() -> clear
org.xsocket.connection.IoChainableHandler -> org.xsocket.connection.IoChainableHandler:
    org.xsocket.connection.IoChainableHandler successor -> successor
    org.xsocket.connection.IoChainableHandler previous -> previous
    org.xsocket.connection.IIoHandlerCallback callback -> callback
    java.util.ArrayList outQueue -> outQueue
    void init(org.xsocket.connection.IIoHandlerCallback) -> init
    void close(boolean) -> close
    void addToWriteQueue(java.nio.ByteBuffer[]) -> addToWriteQueue
    void write() -> write
    void write(java.nio.ByteBuffer[]) -> write
    void flush() -> flush
    org.xsocket.connection.IoChainableHandler getSuccessor() -> getSuccessor
    void setSuccessor(org.xsocket.connection.IoChainableHandler) -> setSuccessor
    void setPrevious(org.xsocket.connection.IoChainableHandler) -> setPrevious
    org.xsocket.connection.IoChainableHandler getPrevious() -> getPrevious
    boolean reset() -> reset
    boolean isSecure() -> isSecure
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    long getLastTimeReceivedMillis() -> getLastTimeReceivedMillis
    long getLastTimeSendMillis() -> getLastTimeSendMillis
    long getNumberOfReceivedBytes() -> getNumberOfReceivedBytes
    long getNumberOfSendBytes() -> getNumberOfSendBytes
    java.lang.String getInfo() -> getInfo
    java.lang.String getRegisteredOpsInfo() -> getRegisteredOpsInfo
    int getPendingWriteDataSize() -> getPendingWriteDataSize
    boolean hasDataToSend() -> hasDataToSend
    void suspendRead() -> suspendRead
    void resumeRead() -> resumeRead
    boolean isReadSuspended() -> isReadSuspended
    java.lang.String getId() -> getId
    void setPreviousCallback(org.xsocket.connection.IIoHandlerCallback) -> setPreviousCallback
    org.xsocket.connection.IIoHandlerCallback getPreviousCallback() -> getPreviousCallback
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    boolean isOpen() -> isOpen
    void setIdleTimeoutMillis(long) -> setIdleTimeoutMillis
    void setConnectionTimeoutMillis(long) -> setConnectionTimeoutMillis
    long getConnectionTimeoutMillis() -> getConnectionTimeoutMillis
    long getIdleTimeoutMillis() -> getIdleTimeoutMillis
    long getRemainingMillisToConnectionTimeout() -> getRemainingMillisToConnectionTimeout
    long getRemainingMillisToIdleTimeout() -> getRemainingMillisToIdleTimeout
    java.lang.Object getOption(java.lang.String) -> getOption
    java.util.Map getOptions() -> getOptions
    void setOption(java.lang.String,java.lang.Object) -> setOption
    void hardFlush() -> hardFlush
    java.lang.String toString() -> toString
org.xsocket.connection.IoConnector -> org.xsocket.connection.IoConnector:
    java.util.logging.Logger LOG -> LOG
    java.lang.String CONNECTOR_PREFIX -> CONNECTOR_PREFIX
    java.util.concurrent.atomic.AtomicBoolean isOpen -> isOpen
    long DEFAULT_WATCHDOG_PERIOD_MILLIS -> DEFAULT_WATCHDOG_PERIOD_MILLIS
    long watchDogPeriodMillis -> watchDogPeriodMillis
    org.xsocket.connection.IoConnector$TimeoutCheckTask timeoutCheckTask -> timeoutCheckTask
    java.util.TimerTask watchDogTask -> watchDogTask
    java.nio.channels.Selector selector -> selector
    java.lang.String name -> name
    java.util.concurrent.ConcurrentLinkedQueue taskQueue -> taskQueue
    boolean $assertionsDisabled -> $assertionsDisabled
    void reinit() -> reinit
    void run() -> run
    java.lang.String printRegistered() -> printRegistered
    int getNumRegisteredHandles() -> getNumRegisteredHandles
    void close() -> close
    int performTaskQueue() -> performTaskQueue
    void handleConnect() -> handleConnect
    void connectAsync(java.nio.channels.SocketChannel,java.net.InetSocketAddress,long,org.xsocket.connection.IIoConnectorCallback) -> connectAsync
    void addToTaskQueue(java.lang.Runnable) -> addToTaskQueue
    void updateTimeoutCheckPeriod(long) -> updateTimeoutCheckPeriod
    java.nio.channels.Selector access$200(org.xsocket.connection.IoConnector) -> access$200
    java.util.logging.Logger access$300() -> access$300
    org.xsocket.connection.IoConnector$TimeoutCheckTask access$400(org.xsocket.connection.IoConnector) -> access$400
    void access$500(org.xsocket.connection.IoConnector,java.lang.Runnable) -> access$500
org.xsocket.connection.IoConnector$1 -> org.xsocket.connection.IoConnector$1:
    org.xsocket.connection.IoConnector this$0 -> this$0
    void run() -> run
org.xsocket.connection.IoConnector$RegisterTask -> org.xsocket.connection.IoConnector$RegisterTask:
    java.nio.channels.SocketChannel channel -> channel
    org.xsocket.connection.IIoConnectorCallback callback -> callback
    java.net.InetSocketAddress remoteAddress -> remoteAddress
    long expireTime -> expireTime
    java.nio.channels.SelectionKey selectionKey -> selectionKey
    org.xsocket.connection.IoConnector this$0 -> this$0
    boolean isExpired(long) -> isExpired
    void run() -> run
    void connect(java.nio.channels.SocketChannel,java.net.InetSocketAddress) -> connect
    org.xsocket.connection.IIoConnectorCallback access$100(org.xsocket.connection.IoConnector$RegisterTask) -> access$100
org.xsocket.connection.IoConnector$TimeoutCheckTask -> org.xsocket.connection.IoConnector$TimeoutCheckTask:
    org.xsocket.connection.IoConnector this$0 -> this$0
    void run() -> run
org.xsocket.connection.IoProvider -> org.xsocket.connection.IoProvider:
    java.util.logging.Logger LOG -> LOG
    java.lang.String SO_SNDBUF -> SO_SNDBUF
    java.lang.String SO_RCVBUF -> SO_RCVBUF
    java.lang.String SO_REUSEADDR -> SO_REUSEADDR
    java.lang.String SO_TIMEOUT -> SO_TIMEOUT
    java.lang.String SO_KEEPALIVE -> SO_KEEPALIVE
    java.lang.String SO_LINGER -> SO_LINGER
    java.lang.String TCP_NODELAY -> TCP_NODELAY
    int UNLIMITED -> UNLIMITED
    long DEFAULT_CONNECTION_TIMEOUT_MILLIS -> DEFAULT_CONNECTION_TIMEOUT_MILLIS
    long DEFAULT_IDLE_TIMEOUT_MILLIS -> DEFAULT_IDLE_TIMEOUT_MILLIS
    java.util.Timer TIMER -> TIMER
    org.xsocket.connection.IoSocketDispatcherPool globalClientDispatcherPool -> globalClientDispatcherPool
    java.lang.String TRANSFER_MAPPED_BYTE_BUFFER_MAX_MAP_SIZE_KEY -> TRANSFER_MAPPED_BYTE_BUFFER_MAX_MAP_SIZE_KEY
    int DEFAULT_TRANSFER_BYTE_BUFFER_MAX_MAP_SIZE -> DEFAULT_TRANSFER_BYTE_BUFFER_MAX_MAP_SIZE
    java.lang.Integer transferByteBufferMaxSize -> transferByteBufferMaxSize
    java.lang.String SUPPRESS_SYNC_FLUSH_WARNING_KEY -> SUPPRESS_SYNC_FLUSH_WARNING_KEY
    java.lang.String DEFAULT_SUPPRESS_SYNC_FLUSH_WARNING -> DEFAULT_SUPPRESS_SYNC_FLUSH_WARNING
    java.lang.String SUPPRESS_REUSE_BUFFER_WARNING_KEY -> SUPPRESS_REUSE_BUFFER_WARNING_KEY
    java.lang.String DEFAULT_SUPPRESS_REUSE_BUFFER_WARNING -> DEFAULT_SUPPRESS_REUSE_BUFFER_WARNING
    java.lang.String SUPPRESS_SYNC_FLUSH_COMPLETION_HANDLER_WARNING_KEY -> SUPPRESS_SYNC_FLUSH_COMPLETION_HANDLER_WARNING_KEY
    java.lang.String DEFAULT_SUPPRESS_SYNC_FLUSH_COMPLETION_HANDLER_WARNING -> DEFAULT_SUPPRESS_SYNC_FLUSH_COMPLETION_HANDLER_WARNING
    boolean IS_REUSE_ADDRESS -> IS_REUSE_ADDRESS
    java.lang.String COUNT_DISPATCHER_KEY -> COUNT_DISPATCHER_KEY
    java.lang.String COUNT_SERVER_DISPATCHER_KEY -> COUNT_SERVER_DISPATCHER_KEY
    java.lang.String COUNT_CLIENT_DISPATCHER_KEY -> COUNT_CLIENT_DISPATCHER_KEY
    java.lang.String MAX_HANDLES -> MAX_HANDLES
    java.lang.String DETACH_HANDLE_ON_NO_OPS -> DETACH_HANDLE_ON_NO_OPS
    java.lang.String DEFAULT_DETACH_HANDLE_ON_NO_OPS -> DEFAULT_DETACH_HANDLE_ON_NO_OPS
    java.lang.String IS_BYPASSING_WRITE_ALLOWED -> IS_BYPASSING_WRITE_ALLOWED
    java.lang.String DEFAULT_IS_BYPASSING_WRITE_ALLOWED -> DEFAULT_IS_BYPASSING_WRITE_ALLOWED
    java.lang.String DEFAULT_USE_DIRECT_BUFFER -> DEFAULT_USE_DIRECT_BUFFER
    java.lang.String CLIENT_READBUFFER_USE_DIRECT_KEY -> CLIENT_READBUFFER_USE_DIRECT_KEY
    java.lang.String SERVER_READBUFFER_USE_DIRECT_KEY -> SERVER_READBUFFER_USE_DIRECT_KEY
    java.lang.String WRITE_BUFFER_USE_DIRECT_KEY -> WRITE_BUFFER_USE_DIRECT_KEY
    java.lang.String DEFAULT_READ_BUFFER_PREALLOCATION_ON -> DEFAULT_READ_BUFFER_PREALLOCATION_ON
    int DEFAULT_READ_BUFFER_PREALLOCATION_SIZE -> DEFAULT_READ_BUFFER_PREALLOCATION_SIZE
    int DEFAULT_READ_BUFFER_MIN_SIZE -> DEFAULT_READ_BUFFER_MIN_SIZE
    java.lang.String CLIENT_READBUFFER_PREALLOCATION_ON_KEY -> CLIENT_READBUFFER_PREALLOCATION_ON_KEY
    java.lang.String CLIENT_READBUFFER_PREALLOCATION_SIZE_KEY -> CLIENT_READBUFFER_PREALLOCATION_SIZE_KEY
    java.lang.String CLIENT_READBUFFER_PREALLOCATION_MIN_SIZE_KEY -> CLIENT_READBUFFER_PREALLOCATION_MIN_SIZE_KEY
    java.lang.String SERVER_READBUFFER_PREALLOCATION_ON_KEY -> SERVER_READBUFFER_PREALLOCATION_ON_KEY
    java.lang.String SERVER_READBUFFER_PREALLOCATION_SIZE_KEY -> SERVER_READBUFFER_PREALLOCATION_SIZE_KEY
    java.lang.String SERVER_READBUFFER_PREALLOCATION_MIN_SIZE_KEY -> SERVER_READBUFFER_PREALLOCATION_MIN_SIZE_KEY
    java.lang.String DEFAULT_CLIENT_MAX_READBUFFER_SIZE_KEY -> DEFAULT_CLIENT_MAX_READBUFFER_SIZE_KEY
    java.lang.String DEFAULT_SERVER_MAX_READBUFFER_SIZE_KEY -> DEFAULT_SERVER_MAX_READBUFFER_SIZE_KEY
    java.lang.String DEFAULT_CLIENT_MAX_WRITEBUFFER_SIZE_KEY -> DEFAULT_CLIENT_MAX_WRITEBUFFER_SIZE_KEY
    java.lang.String DEFAULT_SERVER_MAX_WRITEBUFFER_SIZE_KEY -> DEFAULT_SERVER_MAX_WRITEBUFFER_SIZE_KEY
    java.lang.Integer defaultClientMaxReadbufferSize -> defaultClientMaxReadbufferSize
    java.lang.Integer defaultServerMaxReadbufferSize -> defaultServerMaxReadbufferSize
    java.lang.Integer defaultClientMaxWritebufferSize -> defaultClientMaxWritebufferSize
    java.lang.Integer defaultServerMaxWritebufferSize -> defaultServerMaxWritebufferSize
    java.lang.String SSLENGINE_CLIENT_ENABLED_CIPHER_SUITES_KEY -> SSLENGINE_CLIENT_ENABLED_CIPHER_SUITES_KEY
    java.lang.String SSLENGINE_SERVER_ENABLED_CIPHER_SUITES_KEY -> SSLENGINE_SERVER_ENABLED_CIPHER_SUITES_KEY
    java.lang.String SSLENGINE_CLIENT_ENABLED_PROTOCOLS_KEY -> SSLENGINE_CLIENT_ENABLED_PROTOCOLS_KEY
    java.lang.String SSLENGINE_SERVER_ENABLED_PROTOCOLS_KEY -> SSLENGINE_SERVER_ENABLED_PROTOCOLS_KEY
    java.lang.String SSLENGINE_SERVER_WANT_CLIENT_AUTH_KEY -> SSLENGINE_SERVER_WANT_CLIENT_AUTH_KEY
    java.lang.String SSLENGINE_SERVER_NEED_CLIENT_AUTH_KEY -> SSLENGINE_SERVER_NEED_CLIENT_AUTH_KEY
    java.lang.String[] sSLEngineClientEnabledCipherSuites -> sSLEngineClientEnabledCipherSuites
    java.lang.String[] sSLEngineServerEnabledCipherSuites -> sSLEngineServerEnabledCipherSuites
    java.lang.String[] sSLEngineClientEnabledProtocols -> sSLEngineClientEnabledProtocols
    java.lang.String[] sSLEngineServerEnabledProtocols -> sSLEngineServerEnabledProtocols
    java.lang.Boolean sSLEngineWantClientAuth -> sSLEngineWantClientAuth
    java.lang.Boolean sSLEngineNeedClientAuth -> sSLEngineNeedClientAuth
    java.lang.Integer countDispatcher -> countDispatcher
    java.lang.Integer countClientDispatcher -> countClientDispatcher
    java.lang.Integer countServerDispatcher -> countServerDispatcher
    java.lang.Integer maxHandles -> maxHandles
    boolean detachHandleOnNoOps -> detachHandleOnNoOps
    boolean bypassingWriteAllowed -> bypassingWriteAllowed
    java.lang.Boolean suppressSyncFlushWarning -> suppressSyncFlushWarning
    boolean suppressSyncFlushCompletionHandlerWarning -> suppressSyncFlushCompletionHandlerWarning
    java.lang.Boolean suppressReuseBufferWarning -> suppressReuseBufferWarning
    java.lang.Boolean clientReadBufferUseDirect -> clientReadBufferUseDirect
    java.lang.Boolean serverReadBufferUseDirect -> serverReadBufferUseDirect
    java.lang.Boolean writeBufferUseDirect -> writeBufferUseDirect
    java.lang.Boolean clientReadBufferPreallocationOn -> clientReadBufferPreallocationOn
    int clientReadBufferPreallocationsize -> clientReadBufferPreallocationsize
    int clientReadBufferMinsize -> clientReadBufferMinsize
    java.lang.Boolean serverReadBufferPreallocationOn -> serverReadBufferPreallocationOn
    int serverReadBufferPreallocationsize -> serverReadBufferPreallocationsize
    int serverReadBufferMinsize -> serverReadBufferMinsize
    java.lang.String idPrefix -> idPrefix
    org.xsocket.connection.AbstractMemoryManager sslMemoryManagerServer -> sslMemoryManagerServer
    org.xsocket.connection.AbstractMemoryManager sslMemoryManagerClient -> sslMemoryManagerClient
    java.util.concurrent.atomic.AtomicInteger nextId -> nextId
    int getTransferByteBufferMaxSize() -> getTransferByteBufferMaxSize
    java.lang.String[] getSSLEngineServerEnabledCipherSuites() -> getSSLEngineServerEnabledCipherSuites
    java.lang.String[] getSSLEngineClientEnabledCipherSuites() -> getSSLEngineClientEnabledCipherSuites
    java.lang.String[] getSSLEngineClientEnabledProtocols() -> getSSLEngineClientEnabledProtocols
    java.lang.String[] getSSLEngineServerEnabledProtocols() -> getSSLEngineServerEnabledProtocols
    java.lang.Boolean getSSLEngineServerWantClientAuth() -> getSSLEngineServerWantClientAuth
    java.lang.Boolean getSSLEngineServerNeedClientAuth() -> getSSLEngineServerNeedClientAuth
    java.lang.Integer getDefaultClientMaxReadbufferSize() -> getDefaultClientMaxReadbufferSize
    java.lang.Integer getDefaultServerMaxReadbufferSize() -> getDefaultServerMaxReadbufferSize
    java.lang.Integer getDefaultClientMaxWritebufferSize() -> getDefaultClientMaxWritebufferSize
    java.lang.Integer getDefaultServerMaxWritebufferSize() -> getDefaultServerMaxWritebufferSize
    boolean getSuppressSyncFlushWarning() -> getSuppressSyncFlushWarning
    boolean getSuppressSyncFlushCompletionHandlerWarning() -> getSuppressSyncFlushCompletionHandlerWarning
    boolean getSuppressReuseBufferWarning() -> getSuppressReuseBufferWarning
    int getServerDispatcherInitialSize() -> getServerDispatcherInitialSize
    int getClientDispatcherInitialSize() -> getClientDispatcherInitialSize
    int getDispatcherInitialSize() -> getDispatcherInitialSize
    java.lang.Integer getMaxHandles() -> getMaxHandles
    boolean getDetachHandleOnNoOps() -> getDetachHandleOnNoOps
    boolean isBypassingWriteAllowed() -> isBypassingWriteAllowed
    java.lang.String getImplementationVersion() -> getImplementationVersion
    org.xsocket.connection.IoAcceptor createAcceptor(org.xsocket.connection.IIoAcceptorCallback,java.net.InetSocketAddress,int,java.util.Map) -> createAcceptor
    org.xsocket.connection.IoAcceptor createAcceptor(org.xsocket.connection.IIoAcceptorCallback,java.net.InetSocketAddress,int,java.util.Map,javax.net.ssl.SSLContext,boolean) -> createAcceptor
    org.xsocket.connection.IoChainableHandler createClientIoHandler(java.nio.channels.SocketChannel) -> createClientIoHandler
    org.xsocket.connection.IoChainableHandler createSSLClientIoHandler(java.nio.channels.SocketChannel,javax.net.ssl.SSLContext,boolean) -> createSSLClientIoHandler
    org.xsocket.connection.IoChainableHandler createIoHandler(boolean,org.xsocket.connection.IoSocketDispatcher,java.nio.channels.SocketChannel,javax.net.ssl.SSLContext,boolean) -> createIoHandler
    org.xsocket.connection.IoChainableHandler setWriteTransferRate(org.xsocket.connection.IoChainableHandler,int) -> setWriteTransferRate
    boolean isSecuredModeActivateable(org.xsocket.connection.IoChainableHandler) -> isSecuredModeActivateable
    boolean preActivateSecuredMode(org.xsocket.connection.IoChainableHandler) -> preActivateSecuredMode
    void activateSecuredMode(org.xsocket.connection.IoChainableHandler,java.nio.ByteBuffer[]) -> activateSecuredMode
    void deactivateSecuredMode(org.xsocket.connection.IoChainableHandler) -> deactivateSecuredMode
    java.util.Timer getTimer() -> getTimer
    boolean isUseDirectWriteBuffer() -> isUseDirectWriteBuffer
    int getReadBufferPreallocationsizeServer() -> getReadBufferPreallocationsizeServer
    int getReadBufferMinSizeServer() -> getReadBufferMinSizeServer
    boolean isReadBufferPreallocationActivated() -> isReadBufferPreallocationActivated
    void setOption(java.net.Socket,java.lang.String,java.lang.Object) -> setOption
    java.lang.Object getOption(java.net.Socket,java.lang.String) -> getOption
    int asInt(java.lang.Object) -> asInt
    boolean asBoolean(java.lang.Object) -> asBoolean
    org.xsocket.connection.IoChainableHandler getHandler(org.xsocket.connection.IoChainableHandler,java.lang.Class) -> getHandler
    org.xsocket.connection.IoSocketDispatcherPool getGlobalClientDisptacherPool() -> getGlobalClientDisptacherPool
    java.lang.Integer readIntProperty(java.lang.String) -> readIntProperty
    java.lang.Integer readIntProperty(java.lang.String,java.lang.Integer) -> readIntProperty
    java.lang.Boolean readBooleanProperty(java.lang.String,java.lang.String) -> readBooleanProperty
    java.lang.String[] readStringArrayProperty(java.lang.String,java.lang.String[]) -> readStringArrayProperty
    java.lang.String readProperty(java.lang.String) -> readProperty
org.xsocket.connection.IoQueue -> org.xsocket.connection.IoQueue:
    java.nio.ByteBuffer[] buffers -> buffers
    java.nio.ByteBuffer[] leased -> leased
    boolean isEmpty() -> isEmpty
    int getSize() -> getSize
    void append(java.nio.ByteBuffer) -> append
    void append(java.nio.ByteBuffer[]) -> append
    void addFirst(java.nio.ByteBuffer[]) -> addFirst
    void addFirst(java.nio.ByteBuffer) -> addFirst
    java.nio.ByteBuffer[] drain() -> drain
    java.nio.ByteBuffer[] lease(int) -> lease
    void removeLeased() -> removeLeased
    void removeBuffersFromHead(int) -> removeBuffersFromHead
org.xsocket.connection.IoSSLHandler -> org.xsocket.connection.IoSSLHandler:
    java.util.logging.Logger LOG -> LOG
    org.xsocket.connection.IoQueue outAppDataQueue -> outAppDataQueue
    org.xsocket.connection.IoQueue outNetDataQueue -> outNetDataQueue
    org.xsocket.connection.IoSSLHandler$PendingWriteMap pendingWriteMap -> pendingWriteMap
    org.xsocket.connection.IoSSLHandler$IOEventHandler ioEventHandler -> ioEventHandler
    org.xsocket.connection.IoSSLProcessor sslProcessor -> sslProcessor
    java.util.concurrent.atomic.AtomicBoolean isSSLConnected -> isSSLConnected
    java.lang.Object initGuard -> initGuard
    boolean isClientMode -> isClientMode
    java.io.IOException readException -> readException
    void init(org.xsocket.connection.IIoHandlerCallback) -> init
    boolean reset() -> reset
    boolean isSecure() -> isSecure
    void setPreviousCallback(org.xsocket.connection.IIoHandlerCallback) -> setPreviousCallback
    int getPendingWriteDataSize() -> getPendingWriteDataSize
    boolean hasDataToSend() -> hasDataToSend
    void startSSL() -> startSSL
    void onHandshakeFinished() -> onHandshakeFinished
    void close(boolean) -> close
    void write(java.nio.ByteBuffer[]) -> write
    void flush() -> flush
    void hardFlush() -> hardFlush
    void readIncomingEncryptedData(java.nio.ByteBuffer[]) -> readIncomingEncryptedData
    void onDestroy() -> onDestroy
    void onInboundClosed() -> onInboundClosed
    void onDataDecrypted(java.nio.ByteBuffer) -> onDataDecrypted
    void onPostDataDecrypted() -> onPostDataDecrypted
    void onDataEncrypted(java.nio.ByteBuffer,java.nio.ByteBuffer) -> onDataEncrypted
    void onPostDataEncrypted() -> onPostDataEncrypted
    void access$100(org.xsocket.connection.IoSSLHandler,java.nio.ByteBuffer[]) -> access$100
    java.util.logging.Logger access$200() -> access$200
    java.lang.Object access$300(org.xsocket.connection.IoSSLHandler) -> access$300
    java.io.IOException access$402(org.xsocket.connection.IoSSLHandler,java.io.IOException) -> access$402
    org.xsocket.connection.IoSSLHandler$PendingWriteMap access$500(org.xsocket.connection.IoSSLHandler) -> access$500
    org.xsocket.connection.IoSSLProcessor access$600(org.xsocket.connection.IoSSLHandler) -> access$600
org.xsocket.connection.IoSSLHandler$1 -> org.xsocket.connection.IoSSLHandler$1:
org.xsocket.connection.IoSSLHandler$IOEventHandler -> org.xsocket.connection.IoSSLHandler$IOEventHandler:
    org.xsocket.connection.IoSSLHandler this$0 -> this$0
    void onData(java.nio.ByteBuffer[],int) -> onData
    void onPostData() -> onPostData
    void onConnect() -> onConnect
    void onConnectException(java.io.IOException) -> onConnectException
    void onWriteException(java.io.IOException,java.nio.ByteBuffer) -> onWriteException
    void onWritten(java.nio.ByteBuffer) -> onWritten
    void onDisconnect() -> onDisconnect
    void onConnectionAbnormalTerminated() -> onConnectionAbnormalTerminated
org.xsocket.connection.IoSSLHandler$PendingWriteMap -> org.xsocket.connection.IoSSLHandler$PendingWriteMap:
    java.util.Map plainEncryptedMapping -> plainEncryptedMapping
    java.util.Map encryptedPlainMapping -> encryptedPlainMapping
    void add(java.nio.ByteBuffer,java.nio.ByteBuffer) -> add
    java.nio.ByteBuffer getPlainIfWritten(java.nio.ByteBuffer) -> getPlainIfWritten
    void clear() -> clear
org.xsocket.connection.IoSSLProcessor -> org.xsocket.connection.IoSSLProcessor:
    java.util.logging.Logger LOG -> LOG
    java.nio.ByteBuffer NULL_BYTE_BUFFER -> NULL_BYTE_BUFFER
    java.util.concurrent.ExecutorService WORKERPOOL -> WORKERPOOL
    javax.net.ssl.SSLEngine sslEngine -> sslEngine
    boolean isClientMode -> isClientMode
    org.xsocket.connection.AbstractMemoryManager memoryManager -> memoryManager
    org.xsocket.connection.IoSSLProcessor$EventHandler eventHandler -> eventHandler
    int minNetBufferSize -> minNetBufferSize
    int minEncryptedBufferSize -> minEncryptedBufferSize
    java.nio.ByteBuffer unprocessedInNetData -> unprocessedInNetData
    java.lang.Object unprocessedInNetDataGuard -> unprocessedInNetDataGuard
    java.util.LinkedList outAppDataList -> outAppDataList
    java.util.concurrent.atomic.AtomicBoolean isOutboundClosed -> isOutboundClosed
    java.util.concurrent.atomic.AtomicBoolean isInboundClosed -> isInboundClosed
    void start() -> start
    void stop() -> stop
    void destroy() -> destroy
    void decrypt(java.nio.ByteBuffer[]) -> decrypt
    boolean isHandshaking() -> isHandshaking
    void addOutAppData(java.nio.ByteBuffer[]) -> addOutAppData
    void encrypt() -> encrypt
    void unwrap() -> unwrap
    void wrap() -> wrap
    void notifyHandshakeFinished() -> notifyHandshakeFinished
    java.nio.ByteBuffer mergeBuffer(java.nio.ByteBuffer,java.nio.ByteBuffer) -> mergeBuffer
    void access$000(org.xsocket.connection.IoSSLProcessor) -> access$000
org.xsocket.connection.IoSSLProcessor$1 -> org.xsocket.connection.IoSSLProcessor$1:
    org.xsocket.connection.IoSSLProcessor this$0 -> this$0
    void run() -> run
org.xsocket.connection.IoSSLProcessor$2 -> org.xsocket.connection.IoSSLProcessor$2:
    int[] $SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus -> $SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus
    int[] $SwitchMap$javax$net$ssl$SSLEngineResult$Status -> $SwitchMap$javax$net$ssl$SSLEngineResult$Status
org.xsocket.connection.IoSSLProcessor$DefaultThreadFactory -> org.xsocket.connection.IoSSLProcessor$DefaultThreadFactory:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> poolNumber
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    java.lang.String namePrefix -> namePrefix
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.xsocket.connection.IoSSLProcessor$EventHandler -> org.xsocket.connection.IoSSLProcessor$EventHandler:
    void onHandshakeFinished() -> onHandshakeFinished
    void onDataDecrypted(java.nio.ByteBuffer) -> onDataDecrypted
    void onPostDataDecrypted() -> onPostDataDecrypted
    void onDataEncrypted(java.nio.ByteBuffer,java.nio.ByteBuffer) -> onDataEncrypted
    void onPostDataEncrypted() -> onPostDataEncrypted
    void onDestroy() -> onDestroy
    void onInboundClosed() -> onInboundClosed
org.xsocket.connection.IoSocketDispatcher -> org.xsocket.connection.IoSocketDispatcher:
    java.util.logging.Logger LOG -> LOG
    java.lang.String DISPATCHER_PREFIX -> DISPATCHER_PREFIX
    java.util.concurrent.ConcurrentLinkedQueue registerQueue -> registerQueue
    java.util.concurrent.ConcurrentLinkedQueue deregisterQueue -> deregisterQueue
    java.util.concurrent.ConcurrentLinkedQueue keyUpdateQueue -> keyUpdateQueue
    int nextId -> nextId
    java.lang.String name -> name
    int id -> id
    java.lang.ThreadLocal THREADBOUND_ID -> THREADBOUND_ID
    java.lang.ThreadLocal DIRECT_CALL_COUNTER -> DIRECT_CALL_COUNTER
    java.util.concurrent.atomic.AtomicBoolean isOpen -> isOpen
    java.lang.Integer MAX_HANDLES -> MAX_HANDLES
    int roughNumOfRegisteredHandles -> roughNumOfRegisteredHandles
    java.nio.channels.Selector selector -> selector
    org.xsocket.connection.AbstractMemoryManager memoryManager -> memoryManager
    long lastTimeWokeUp -> lastTimeWokeUp
    long statisticsStartTime -> statisticsStartTime
    long countIdleTimeouts -> countIdleTimeouts
    long countConnectionTimeouts -> countConnectionTimeouts
    long handledRegistractions -> handledRegistractions
    long handledReads -> handledReads
    long handledWrites -> handledWrites
    long lastRequestReceiveRate -> lastRequestReceiveRate
    long lastRequestSendRate -> lastRequestSendRate
    long receivedBytes -> receivedBytes
    long sentBytes -> sentBytes
    long countUnregisteredWrite -> countUnregisteredWrite
    boolean $assertionsDisabled -> $assertionsDisabled
    java.lang.String getName() -> getName
    int getId() -> getId
    java.lang.Integer getThreadBoundId() -> getThreadBoundId
    long getCountUnregisteredWrite() -> getCountUnregisteredWrite
    java.lang.Integer getMaxRegisterdHandles() -> getMaxRegisterdHandles
    int getNumRegisteredHandles() -> getNumRegisteredHandles
    int getRoughNumRegisteredHandles() -> getRoughNumRegisteredHandles
    void reinit() -> reinit
    void run() -> run
    void handleReadWriteKeys() -> handleReadWriteKeys
    void onReadableEvent(org.xsocket.connection.IoSocketHandler) -> onReadableEvent
    void onWriteableEvent(org.xsocket.connection.IoSocketHandler) -> onWriteableEvent
    void wakeUp() -> wakeUp
    boolean preRegister() -> preRegister
    boolean register(org.xsocket.connection.IoSocketHandler,int) -> register
    void deregisterAndClose(org.xsocket.connection.IoSocketHandler) -> deregisterAndClose
    int performDeregisterHandlerTasks() -> performDeregisterHandlerTasks
    void deregisterAndCloseNow(org.xsocket.connection.IoSocketHandler) -> deregisterAndCloseNow
    void addKeyUpdateTask(java.lang.Runnable) -> addKeyUpdateTask
    void flushKeyUpdate() -> flushKeyUpdate
    void suspendRead(org.xsocket.connection.IoSocketHandler) -> suspendRead
    void resumeRead(org.xsocket.connection.IoSocketHandler) -> resumeRead
    int performKeyUpdateTasks() -> performKeyUpdateTasks
    boolean isDispatcherInstanceThread() -> isDispatcherInstanceThread
    java.nio.channels.SelectionKey getSelectionKey(org.xsocket.connection.IoSocketHandler) -> getSelectionKey
    boolean setWriteSelectionKeyNow(org.xsocket.connection.IoSocketHandler) -> setWriteSelectionKeyNow
    boolean unsetWriteSelectionKeyNow(org.xsocket.connection.IoSocketHandler) -> unsetWriteSelectionKeyNow
    boolean setReadSelectionKeyNow(org.xsocket.connection.IoSocketHandler) -> setReadSelectionKeyNow
    void unsetReadSelectionKeyNow(org.xsocket.connection.IoSocketHandler) -> unsetReadSelectionKeyNow
    java.lang.String getRegisteredOpsInfo(org.xsocket.connection.IoSocketHandler) -> getRegisteredOpsInfo
    int performRegisterHandlerTasks() -> performRegisterHandlerTasks
    void registerHandlerNow(org.xsocket.connection.IoSocketHandler,int) -> registerHandlerNow
    java.util.Set getRegistered() -> getRegistered
    boolean isOpen() -> isOpen
    boolean isReadable(org.xsocket.connection.IoSocketHandler) -> isReadable
    boolean isReadable(java.nio.channels.SelectionKey) -> isReadable
    boolean isWriteable(java.nio.channels.SelectionKey) -> isWriteable
    long getNumberOfHandledRegistrations() -> getNumberOfHandledRegistrations
    long getNumberOfHandledReads() -> getNumberOfHandledReads
    long getNumberOfHandledWrites() -> getNumberOfHandledWrites
    long getReceiveRateBytesPerSec() -> getReceiveRateBytesPerSec
    long getSendRateBytesPerSec() -> getSendRateBytesPerSec
    long getCountIdleTimeout() -> getCountIdleTimeout
    long getCountConnectionTimeout() -> getCountConnectionTimeout
    int getPreallocatedReadMemorySize() -> getPreallocatedReadMemorySize
    boolean getReceiveBufferPreallocationMode() -> getReceiveBufferPreallocationMode
    void setReceiveBufferPreallocationMode(boolean) -> setReceiveBufferPreallocationMode
    void setReceiveBufferPreallocatedMinSize(java.lang.Integer) -> setReceiveBufferPreallocatedMinSize
    java.lang.Integer getReceiveBufferPreallocatedMinSize() -> getReceiveBufferPreallocatedMinSize
    java.lang.Integer getReceiveBufferPreallocatedSize() -> getReceiveBufferPreallocatedSize
    void setReceiveBufferPreallocatedSize(java.lang.Integer) -> setReceiveBufferPreallocatedSize
    boolean getReceiveBufferIsDirect() -> getReceiveBufferIsDirect
    void setReceiveBufferIsDirect(boolean) -> setReceiveBufferIsDirect
    void resetStatistics() -> resetStatistics
    java.lang.String toString() -> toString
    long getStatisticsStartTime() -> getStatisticsStartTime
    java.lang.String printRegistered() -> printRegistered
    java.lang.String printSelectionKey(org.xsocket.connection.IoSocketHandler) -> printSelectionKey
    void close() -> close
    void access$000(org.xsocket.connection.IoSocketDispatcher,org.xsocket.connection.IoSocketHandler,int) -> access$000
    void access$100(org.xsocket.connection.IoSocketDispatcher,org.xsocket.connection.IoSocketHandler) -> access$100
org.xsocket.connection.IoSocketDispatcher$RegisterTask -> org.xsocket.connection.IoSocketDispatcher$RegisterTask:
    org.xsocket.connection.IoSocketHandler socketHandler -> socketHandler
    int ops -> ops
    org.xsocket.connection.IoSocketDispatcher this$0 -> this$0
    void run() -> run
org.xsocket.connection.IoSocketDispatcher$UpdateReadSelectionKeyTask -> org.xsocket.connection.IoSocketDispatcher$UpdateReadSelectionKeyTask:
    org.xsocket.connection.IoSocketHandler socketHandler -> socketHandler
    boolean isSet -> isSet
    boolean $assertionsDisabled -> $assertionsDisabled
    org.xsocket.connection.IoSocketDispatcher this$0 -> this$0
    void run() -> run
    java.lang.String toString() -> toString
org.xsocket.connection.IoSocketDispatcherPool -> org.xsocket.connection.IoSocketDispatcherPool:
    java.util.logging.Logger LOG -> LOG
    boolean isOpen -> isOpen
    java.lang.String name -> name
    java.util.ArrayList listeners -> listeners
    int preallocationSize -> preallocationSize
    int bufferMinsize -> bufferMinsize
    boolean preallocation -> preallocation
    boolean useDirect -> useDirect
    java.util.LinkedList dispatchers -> dispatchers
    int size -> size
    int pointer -> pointer
    long acceptedConnections -> acceptedConnections
    long lastRequestAccpetedRate -> lastRequestAccpetedRate
    void addListener(org.xsocket.connection.IIoDispatcherPoolListener) -> addListener
    boolean removeListener(org.xsocket.connection.IIoDispatcherPoolListener) -> removeListener
    org.xsocket.connection.IoSocketDispatcher nextDispatcher() -> nextDispatcher
    org.xsocket.connection.IoSocketDispatcher nextDispatcher(int) -> nextDispatcher
    void updateDispatcher() -> updateDispatcher
    void close() -> close
    void shutdownDispatcher() -> shutdownDispatcher
    int getNumRegisteredHandles() -> getNumRegisteredHandles
    int getRoughNumRegisteredHandles() -> getRoughNumRegisteredHandles
    java.util.List getOpenConntionInfos() -> getOpenConntionInfos
    java.util.List getDispatchers() -> getDispatchers
    void setDispatcherSize(int) -> setDispatcherSize
    int getDispatcherSize() -> getDispatcherSize
    void incDispatcherSize() -> incDispatcherSize
    boolean getReceiveBufferIsDirect() -> getReceiveBufferIsDirect
    void setReceiveBufferIsDirect(boolean) -> setReceiveBufferIsDirect
    boolean isReceiveBufferPreallocationMode() -> isReceiveBufferPreallocationMode
    void setReceiveBufferPreallocationMode(boolean) -> setReceiveBufferPreallocationMode
    void setReceiveBufferPreallocatedMinSize(java.lang.Integer) -> setReceiveBufferPreallocatedMinSize
    java.lang.Integer getReceiveBufferPreallocatedMinSize() -> getReceiveBufferPreallocatedMinSize
    java.lang.Integer getReceiveBufferPreallocationSize() -> getReceiveBufferPreallocationSize
    void setReceiveBufferPreallocationSize(int) -> setReceiveBufferPreallocationSize
    double getAcceptedRateCountPerSec() -> getAcceptedRateCountPerSec
    long getSendRateBytesPerSec() -> getSendRateBytesPerSec
    long getReceiveRateBytesPerSec() -> getReceiveRateBytesPerSec
    long getNumberOfConnectionTimeouts() -> getNumberOfConnectionTimeouts
    long getNumberOfIdleTimeouts() -> getNumberOfIdleTimeouts
org.xsocket.connection.IoSocketHandler -> org.xsocket.connection.IoSocketHandler:
    java.util.logging.Logger LOG -> LOG
    int MAXSIZE_LOG_READ -> MAXSIZE_LOG_READ
    java.util.Map SUPPORTED_OPTIONS -> SUPPORTED_OPTIONS
    java.util.concurrent.atomic.AtomicBoolean isConnected -> isConnected
    java.util.concurrent.atomic.AtomicBoolean isLogicalClosed -> isLogicalClosed
    java.util.concurrent.atomic.AtomicBoolean isDisconnect -> isDisconnect
    java.nio.channels.SocketChannel channel -> channel
    org.xsocket.connection.IoSocketHandler$SetWriteSelectionKeyTask setWriteSelectionKeyTask -> setWriteSelectionKeyTask
    org.xsocket.connection.IoSocketDispatcher dispatcher -> dispatcher
    org.xsocket.connection.AbstractMemoryManager memoryManager -> memoryManager
    org.xsocket.connection.IoQueue sendQueue -> sendQueue
    int soSendBufferSize -> soSendBufferSize
    org.xsocket.connection.IoSocketHandler$IWriteTask pendingWriteTask -> pendingWriteTask
    java.lang.String id -> id
    long openTime -> openTime
    long lastTimeReceivedMillis -> lastTimeReceivedMillis
    long lastTimeSentMillis -> lastTimeSentMillis
    java.util.concurrent.atomic.AtomicLong receivedBytes -> receivedBytes
    java.util.concurrent.atomic.AtomicLong sendBytes -> sendBytes
    java.lang.Exception lastException -> lastException
    boolean $assertionsDisabled -> $assertionsDisabled
    void init(org.xsocket.connection.IIoHandlerCallback) -> init
    boolean reset() -> reset
    void setMemoryManager(org.xsocket.connection.AbstractMemoryManager) -> setMemoryManager
    java.lang.String getId() -> getId
    int getPendingWriteDataSize() -> getPendingWriteDataSize
    boolean hasDataToSend() -> hasDataToSend
    boolean isSecure() -> isSecure
    void setOption(java.lang.String,java.lang.Object) -> setOption
    java.lang.Object getOption(java.lang.String) -> getOption
    java.util.Map getOptions() -> getOptions
    void checkConnection() -> checkConnection
    void onRegisteredEvent() -> onRegisteredEvent
    void onRegisteredFailedEvent(java.io.IOException) -> onRegisteredFailedEvent
    long onReadableEvent() -> onReadableEvent
    void onWriteableEvent() -> onWriteableEvent
    void onDeregisteredEvent() -> onDeregisteredEvent
    void write(java.nio.ByteBuffer[]) -> write
    void incSentBytes(int) -> incSentBytes
    void flush() -> flush
    void addToWriteQueue(java.nio.ByteBuffer[]) -> addToWriteQueue
    void initializeWrite(boolean) -> initializeWrite
    void close(java.lang.Exception) -> close
    void close(boolean) -> close
    void closeSilence(boolean) -> closeSilence
    void realClose() -> realClose
    boolean isOpen() -> isOpen
    java.nio.channels.SocketChannel getChannel() -> getChannel
    void suspendRead() -> suspendRead
    void resumeRead() -> resumeRead
    boolean isReadSuspended() -> isReadSuspended
    java.nio.ByteBuffer[] readSocket() -> readSocket
    void checkPreallocatedReadMemory() -> checkPreallocatedReadMemory
    void writeSocket() -> writeSocket
    boolean hasMoreDataToWrite() -> hasMoreDataToWrite
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    long getLastTimeReceivedMillis() -> getLastTimeReceivedMillis
    long getLastTimeSendMillis() -> getLastTimeSendMillis
    long getNumberOfReceivedBytes() -> getNumberOfReceivedBytes
    long getNumberOfSendBytes() -> getNumberOfSendBytes
    java.lang.String getInfo() -> getInfo
    java.lang.String getRegisteredOpsInfo() -> getRegisteredOpsInfo
    void hardFlush() -> hardFlush
    java.lang.String toString() -> toString
    org.xsocket.connection.IoSocketDispatcher access$100(org.xsocket.connection.IoSocketHandler) -> access$100
    java.util.logging.Logger access$600() -> access$600
    java.nio.channels.SocketChannel access$700(org.xsocket.connection.IoSocketHandler) -> access$700
org.xsocket.connection.IoSocketHandler$1 -> org.xsocket.connection.IoSocketHandler$1:
org.xsocket.connection.IoSocketHandler$DirectWriteTask -> org.xsocket.connection.IoSocketHandler$DirectWriteTask:
    boolean isReusable -> isReusable
    java.nio.ByteBuffer bufferToWrite -> bufferToWrite
    boolean addData(java.nio.ByteBuffer) -> addData
    org.xsocket.connection.IoSocketHandler$IWriteResult write(org.xsocket.connection.IoSocketHandler) -> write
    void release() -> release
org.xsocket.connection.IoSocketHandler$EmptyWriteResult -> org.xsocket.connection.IoSocketHandler$EmptyWriteResult:
    boolean isAllWritten() -> isAllWritten
    void notifyWriteCallback() -> notifyWriteCallback
org.xsocket.connection.IoSocketHandler$EmptyWriteTask -> org.xsocket.connection.IoSocketHandler$EmptyWriteTask:
    org.xsocket.connection.IoSocketHandler$IWriteResult write(org.xsocket.connection.IoSocketHandler) -> write
    void release() -> release
org.xsocket.connection.IoSocketHandler$ErrorWriteResult -> org.xsocket.connection.IoSocketHandler$ErrorWriteResult:
    java.io.IOException ioe -> ioe
    java.nio.ByteBuffer[] buffers -> buffers
    org.xsocket.connection.IoSocketHandler handler -> handler
    boolean isAllWritten() -> isAllWritten
    void notifyWriteCallback() -> notifyWriteCallback
org.xsocket.connection.IoSocketHandler$IWriteResult -> org.xsocket.connection.IoSocketHandler$IWriteResult:
    boolean isAllWritten() -> isAllWritten
    void notifyWriteCallback() -> notifyWriteCallback
org.xsocket.connection.IoSocketHandler$IWriteTask -> org.xsocket.connection.IoSocketHandler$IWriteTask:
    org.xsocket.connection.IoSocketHandler$IncompleteWriteResult INCOMPLETE_WRITE_RESULT -> INCOMPLETE_WRITE_RESULT
    org.xsocket.connection.IoSocketHandler$IWriteResult EMPTY_WRITE_RESULT -> EMPTY_WRITE_RESULT
    org.xsocket.connection.IoSocketHandler$IWriteResult write(org.xsocket.connection.IoSocketHandler) -> write
    void release() -> release
org.xsocket.connection.IoSocketHandler$IncompleteWriteResult -> org.xsocket.connection.IoSocketHandler$IncompleteWriteResult:
    boolean isAllWritten() -> isAllWritten
    void notifyWriteCallback() -> notifyWriteCallback
org.xsocket.connection.IoSocketHandler$MergingWriteTask -> org.xsocket.connection.IoSocketHandler$MergingWriteTask:
    boolean isReusable -> isReusable
    java.nio.ByteBuffer writeBuffer -> writeBuffer
    int writeBufferSize -> writeBufferSize
    java.nio.ByteBuffer[] buffersToWrite -> buffersToWrite
    void allocateWriteBuffer(int) -> allocateWriteBuffer
    boolean addData(java.nio.ByteBuffer[],int) -> addData
    org.xsocket.connection.IoSocketHandler$IWriteResult write(org.xsocket.connection.IoSocketHandler) -> write
    void release() -> release
org.xsocket.connection.IoSocketHandler$MultiBufferWriteResult -> org.xsocket.connection.IoSocketHandler$MultiBufferWriteResult:
    java.nio.ByteBuffer[] buffers -> buffers
    org.xsocket.connection.IoSocketHandler handler -> handler
    boolean isAllWritten() -> isAllWritten
    void notifyWriteCallback() -> notifyWriteCallback
org.xsocket.connection.IoSocketHandler$SetWriteSelectionKeyTask -> org.xsocket.connection.IoSocketHandler$SetWriteSelectionKeyTask:
    org.xsocket.connection.IoSocketHandler this$0 -> this$0
    void run() -> run
    java.lang.String toString() -> toString
org.xsocket.connection.IoSocketHandler$SingleBufferWriteResult -> org.xsocket.connection.IoSocketHandler$SingleBufferWriteResult:
    java.nio.ByteBuffer buffer -> buffer
    org.xsocket.connection.IoSocketHandler handler -> handler
    boolean isAllWritten() -> isAllWritten
    void notifyWriteCallback() -> notifyWriteCallback
org.xsocket.connection.IoSocketHandler$TaskFactory -> org.xsocket.connection.IoSocketHandler$TaskFactory:
    org.xsocket.connection.IoSocketHandler$EmptyWriteTask EMPTY_WRITE_TASK -> EMPTY_WRITE_TASK
    java.lang.ThreadLocal freeMergingWriteTaskThreadLocal -> freeMergingWriteTaskThreadLocal
    java.lang.ThreadLocal freeDirectWriteTaskThreadLocal -> freeDirectWriteTaskThreadLocal
    boolean $assertionsDisabled -> $assertionsDisabled
    org.xsocket.connection.IoSocketHandler$IWriteTask newTask(org.xsocket.connection.IoQueue,int) -> newTask
    org.xsocket.connection.IoSocketHandler$EmptyWriteTask createEmptyWriteTask() -> createEmptyWriteTask
    org.xsocket.connection.IoSocketHandler$MergingWriteTask createMergingWriteTask() -> createMergingWriteTask
    org.xsocket.connection.IoSocketHandler$DirectWriteTask createDirectWriteTask() -> createDirectWriteTask
    void reuseWriteProcessor(org.xsocket.connection.IoSocketHandler$MergingWriteTask) -> reuseWriteProcessor
    void reuseWriteProcessor(org.xsocket.connection.IoSocketHandler$DirectWriteTask) -> reuseWriteProcessor
org.xsocket.connection.IoSynchronizedMemoryManager -> org.xsocket.connection.IoSynchronizedMemoryManager:
    java.util.logging.Logger LOG -> LOG
    java.util.List memoryBuffer -> memoryBuffer
    org.xsocket.connection.IoSynchronizedMemoryManager createPreallocatedMemoryManager(int,int,boolean) -> createPreallocatedMemoryManager
    org.xsocket.connection.IoSynchronizedMemoryManager createNonPreallocatedMemoryManager(boolean) -> createNonPreallocatedMemoryManager
    int getCurrentSizePreallocatedBuffer() -> getCurrentSizePreallocatedBuffer
    void recycleMemory(java.nio.ByteBuffer) -> recycleMemory
    void preallocate() -> preallocate
    java.nio.ByteBuffer acquireMemoryStandardSizeOrPreallocated(int) -> acquireMemoryStandardSizeOrPreallocated
org.xsocket.connection.IoThrottledWriteHandler -> org.xsocket.connection.IoThrottledWriteHandler:
    java.util.logging.Logger LOG -> LOG
    int PERIOD_MILLIS -> PERIOD_MILLIS
    org.xsocket.connection.IoQueue writeQueue -> writeQueue
    java.util.ArrayList throttledSendQueue -> throttledSendQueue
    int writeSize -> writeSize
    java.util.TimerTask delayedDelivererTask -> delayedDelivererTask
    void init(org.xsocket.connection.IIoHandlerCallback) -> init
    boolean reset() -> reset
    void setWriteRateSec(int) -> setWriteRateSec
    int getPendingWriteDataSize() -> getPendingWriteDataSize
    boolean hasDataToSend() -> hasDataToSend
    int getSendQueueSize() -> getSendQueueSize
    void close(boolean) -> close
    void write(java.nio.ByteBuffer[]) -> write
    void flush() -> flush
    void writeOutgoing(java.nio.ByteBuffer) -> writeOutgoing
    void hardFlush() -> hardFlush
    void writeChunk() -> writeChunk
    java.lang.String toString() -> toString
org.xsocket.connection.IoThrottledWriteHandler$DeliveryTask -> org.xsocket.connection.IoThrottledWriteHandler$DeliveryTask:
    java.lang.ref.WeakReference ioThrottledWriteHandlerRef -> ioThrottledWriteHandlerRef
    void run() -> run
org.xsocket.connection.IoUnsynchronizedMemoryManager -> org.xsocket.connection.IoUnsynchronizedMemoryManager:
    java.util.logging.Logger LOG -> LOG
    java.nio.ByteBuffer freeBuffer -> freeBuffer
    org.xsocket.connection.IoUnsynchronizedMemoryManager createPreallocatedMemoryManager(int,int,boolean) -> createPreallocatedMemoryManager
    org.xsocket.connection.IoUnsynchronizedMemoryManager createNonPreallocatedMemoryManager(boolean) -> createNonPreallocatedMemoryManager
    int getCurrentSizePreallocatedBuffer() -> getCurrentSizePreallocatedBuffer
    void recycleMemory(java.nio.ByteBuffer) -> recycleMemory
    java.nio.ByteBuffer acquireMemoryStandardSizeOrPreallocated(int) -> acquireMemoryStandardSizeOrPreallocated
    void preallocate() -> preallocate
org.xsocket.connection.MaxConnectionsExceededException -> org.xsocket.connection.MaxConnectionsExceededException:
    long serialVersionUID -> serialVersionUID
org.xsocket.connection.MonitoredSelector -> org.xsocket.connection.MonitoredSelector:
    java.util.logging.Logger LOG -> LOG
    boolean IS_LOOPING_CHECK_ACTIVATED -> IS_LOOPING_CHECK_ACTIVATED
    boolean IS_REINIT_ACTIVATED -> IS_REINIT_ACTIVATED
    long LOG_PERIOD_MILLIS -> LOG_PERIOD_MILLIS
    int LOOPING_DETECTED_WAIT_TIME_MILLIS -> LOOPING_DETECTED_WAIT_TIME_MILLIS
    int ZERO_COUNTER_THRESHOLD -> ZERO_COUNTER_THRESHOLD
    int ZERO_COUNTER_TIME_THRESHOLD_MILLIS -> ZERO_COUNTER_TIME_THRESHOLD_MILLIS
    int zeroCounter -> zeroCounter
    long lastTimeEventCountIsZero -> lastTimeEventCountIsZero
    long lastTimeSpinningLog -> lastTimeSpinningLog
    void checkForLooping(int) -> checkForLooping
    void checkForLooping(int,long) -> checkForLooping
    int getNumRegisteredHandles() -> getNumRegisteredHandles
    java.lang.String printRegistered() -> printRegistered
    void reinit() -> reinit
org.xsocket.connection.NonBlockingConnection -> org.xsocket.connection.NonBlockingConnection:
    java.util.logging.Logger LOG -> LOG
    java.lang.String SEND_TIMEOUT_KEY -> SEND_TIMEOUT_KEY
    long DEFAULT_SEND_TIMEOUT_MILLIS -> DEFAULT_SEND_TIMEOUT_MILLIS
    boolean IS_SUPPRESS_SYNC_FLUSH_WARNING -> IS_SUPPRESS_SYNC_FLUSH_WARNING
    boolean IS_SUPPRESS_SYNC_FLUSH_COMPLITIONHANDLER_WARNING -> IS_SUPPRESS_SYNC_FLUSH_COMPLITIONHANDLER_WARNING
    java.util.concurrent.Executor defaultWorkerPool -> defaultWorkerPool
    org.xsocket.connection.IoConnector defaultConnector -> defaultConnector
    long sendTimeoutMillis -> sendTimeoutMillis
    boolean isServerSide -> isServerSide
    java.util.concurrent.atomic.AtomicBoolean isOpen -> isOpen
    java.util.concurrent.atomic.AtomicBoolean isConnected -> isConnected
    java.util.concurrent.atomic.AtomicBoolean isSuspended -> isSuspended
    java.lang.Object disconnectedGuard -> disconnectedGuard
    java.util.concurrent.atomic.AtomicBoolean isDisconnected -> isDisconnected
    org.xsocket.connection.ConnectionManager DEFAULT_CONNECTION_MANAGER -> DEFAULT_CONNECTION_MANAGER
    org.xsocket.connection.ConnectionManager$TimeoutMgmHandle timeoutMgmHandle -> timeoutMgmHandle
    org.xsocket.connection.NonBlockingConnection$IoHandlerCallback ioHandlerCallback -> ioHandlerCallback
    org.xsocket.connection.IoChainableHandler ioHandler -> ioHandler
    java.util.concurrent.atomic.AtomicReference handlerAdapterRef -> handlerAdapterRef
    java.util.concurrent.atomic.AtomicReference handlerReplaceListenerRef -> handlerReplaceListenerRef
    java.util.concurrent.Executor workerpool -> workerpool
    org.xsocket.SerializedTaskQueue taskQueue -> taskQueue
    int bytesPerSecond -> bytesPerSecond
    org.xsocket.connection.NonBlockingConnection$SynchronWriter synchronWriter -> synchronWriter
    org.xsocket.connection.NonBlockingConnection$WriteCompletionManager writeCompletionManager -> writeCompletionManager
    java.lang.Object asyncWriteGuard -> asyncWriteGuard
    long idleTimeoutMillis -> idleTimeoutMillis
    long idleTimeoutDateMillis -> idleTimeoutDateMillis
    long connectionTimeoutMillis -> connectionTimeoutMillis
    long connectionTimeoutDateMillis -> connectionTimeoutDateMillis
    java.util.concurrent.atomic.AtomicBoolean idleTimeoutOccured -> idleTimeoutOccured
    java.util.concurrent.atomic.AtomicBoolean connectionTimeoutOccured -> connectionTimeoutOccured
    java.util.concurrent.atomic.AtomicBoolean connectExceptionOccured -> connectExceptionOccured
    java.lang.Integer cachedSoSndBuf -> cachedSoSndBuf
    java.lang.Object suspendGuard -> suspendGuard
    java.lang.Integer maxReadBufferSize -> maxReadBufferSize
    void register(java.nio.channels.SocketChannel,javax.net.ssl.SSLContext,boolean,org.xsocket.connection.IIoHandlerCallback) -> register
    org.xsocket.SerializedTaskQueue getTaskQueue() -> getTaskQueue
    long getLastTimeReceivedMillis() -> getLastTimeReceivedMillis
    long getLastTimeSendMillis() -> getLastTimeSendMillis
    int getMaxReadBufferThreshold() -> getMaxReadBufferThreshold
    void setMaxReadBufferThreshold(int) -> setMaxReadBufferThreshold
    java.util.concurrent.Executor getDefaultWorkerpool() -> getDefaultWorkerpool
    org.xsocket.connection.IoConnector getDefaultConnector() -> getDefaultConnector
    boolean isMoreInputDataExpected() -> isMoreInputDataExpected
    boolean isDataWriteable() -> isDataWriteable
    void init(org.xsocket.connection.IoChainableHandler) -> init
    void init(org.xsocket.connection.IoChainableHandler,org.xsocket.connection.IIoHandlerCallback) -> init
    void setHandler(org.xsocket.connection.IHandler) -> setHandler
    org.xsocket.connection.IHandler getHandler() -> getHandler
    void setWorkerpool(java.util.concurrent.Executor) -> setWorkerpool
    java.util.concurrent.Executor getWorkerpool() -> getWorkerpool
    java.util.concurrent.Executor getExecutor() -> getExecutor
    boolean reset() -> reset
    boolean isOpen() -> isOpen
    boolean isServerSide() -> isServerSide
    boolean isConnected() -> isConnected
    void onData(java.nio.ByteBuffer[],int) -> onData
    void onPostAppend() -> onPostAppend
    java.nio.ByteBuffer[] onRead(java.nio.ByteBuffer[]) -> onRead
    void onPostData() -> onPostData
    void onWritten(java.nio.ByteBuffer) -> onWritten
    void onWriteException(java.io.IOException,java.nio.ByteBuffer) -> onWriteException
    void onConnect() -> onConnect
    void onConnectionAbnormalTerminated() -> onConnectionAbnormalTerminated
    void onDisconnect() -> onDisconnect
    void onConnectException(java.io.IOException) -> onConnectException
    boolean checkIdleTimeout(java.lang.Long) -> checkIdleTimeout
    void onIdleTimeout() -> onIdleTimeout
    boolean checkConnectionTimeout(java.lang.Long) -> checkConnectionTimeout
    void onConnectionTimeout() -> onConnectionTimeout
    long getRemainingMillisToConnectionTimeout() -> getRemainingMillisToConnectionTimeout
    long getRemainingMillisToIdleTimeout() -> getRemainingMillisToIdleTimeout
    long getRemainingMillisToConnectionTimeout(long) -> getRemainingMillisToConnectionTimeout
    long getNumberOfReceivedBytes() -> getNumberOfReceivedBytes
    long getNumberOfSendBytes() -> getNumberOfSendBytes
    long getRemainingMillisToIdleTimeout(long) -> getRemainingMillisToIdleTimeout
    java.lang.String getRegisteredOpsInfo() -> getRegisteredOpsInfo
    void setWriteTransferRate(int) -> setWriteTransferRate
    int getWriteTransferRate() -> getWriteTransferRate
    boolean isSecuredModeActivateable() -> isSecuredModeActivateable
    void activateSecuredMode() -> activateSecuredMode
    void deactivateSecuredMode() -> deactivateSecuredMode
    boolean isSecure() -> isSecure
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String,int) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByLength(int) -> readByteBufferByLength
    java.nio.ByteBuffer readSingleByteBuffer(int) -> readSingleByteBuffer
    void setIdleTimeoutMillis(long) -> setIdleTimeoutMillis
    void setConnectionTimeoutMillis(long) -> setConnectionTimeoutMillis
    long getConnectionTimeoutMillis() -> getConnectionTimeoutMillis
    long getIdleTimeoutMillis() -> getIdleTimeoutMillis
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    java.lang.String getId() -> getId
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    int getPendingWriteDataSize() -> getPendingWriteDataSize
    void suspendReceiving() -> suspendReceiving
    boolean isReceivingSuspended() -> isReceivingSuspended
    void resumeReceiving() -> resumeReceiving
    void write(java.lang.String,java.lang.String,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(byte[],org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(byte[],int,int,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.nio.ByteBuffer[],int,int,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.nio.ByteBuffer,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.nio.ByteBuffer[],org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.util.List,org.xsocket.connection.IWriteCompletionHandler) -> write
    long transferFrom(java.nio.channels.ReadableByteChannel,int) -> transferFrom
    long transferFromSync(java.nio.channels.ReadableByteChannel) -> transferFromSync
    int getSoSndBufSize() -> getSoSndBufSize
    void onWriteDataInserted() -> onWriteDataInserted
    java.lang.Object getOption(java.lang.String) -> getOption
    java.util.Map getOptions() -> getOptions
    void setOption(java.lang.String,java.lang.Object) -> setOption
    int getWriteTransferChunkeSize() -> getWriteTransferChunkeSize
    void forceClose() -> forceClose
    void close() -> close
    void closeQuietly() -> closeQuietly
    void closeQuietly(org.xsocket.connection.INonBlockingConnection) -> closeQuietly
    void performMultithreaded(java.lang.Runnable) -> performMultithreaded
    void performNonTHreeaded(java.lang.Runnable) -> performNonTHreeaded
    void flush() -> flush
    void flush(java.util.List) -> flush
    void internalFlush(java.util.List) -> internalFlush
    java.lang.String getInfo() -> getInfo
    java.lang.String toString() -> toString
    java.lang.String toDetailedString() -> toDetailedString
    org.xsocket.connection.IoChainableHandler createClientIoHandler(java.nio.channels.SocketChannel,javax.net.ssl.SSLContext,boolean) -> createClientIoHandler
    java.nio.channels.SocketChannel openSocket(java.net.InetSocketAddress,java.util.Map) -> openSocket
    void access$200(org.xsocket.connection.NonBlockingConnection,java.nio.channels.SocketChannel,javax.net.ssl.SSLContext,boolean,org.xsocket.connection.IIoHandlerCallback) -> access$200
    void access$300(org.xsocket.connection.NonBlockingConnection,java.io.IOException) -> access$300
    org.xsocket.connection.NonBlockingConnection$IoHandlerCallback access$400(org.xsocket.connection.NonBlockingConnection) -> access$400
    org.xsocket.connection.IoChainableHandler access$500(org.xsocket.connection.NonBlockingConnection) -> access$500
    java.util.logging.Logger access$800() -> access$800
    boolean access$900() -> access$900
    long access$1000() -> access$1000
    void access$1100(org.xsocket.connection.NonBlockingConnection,java.nio.ByteBuffer) -> access$1100
    void access$1200(org.xsocket.connection.NonBlockingConnection,java.io.IOException,java.nio.ByteBuffer) -> access$1200
    void access$1300(org.xsocket.connection.NonBlockingConnection,java.nio.ByteBuffer[],int) -> access$1300
    void access$1400(org.xsocket.connection.NonBlockingConnection) -> access$1400
    void access$1500(org.xsocket.connection.NonBlockingConnection) -> access$1500
    void access$1600(org.xsocket.connection.NonBlockingConnection) -> access$1600
    void access$1700(org.xsocket.connection.NonBlockingConnection) -> access$1700
    org.xsocket.SerializedTaskQueue access$1900(org.xsocket.connection.NonBlockingConnection) -> access$1900
    java.util.concurrent.Executor access$2000(org.xsocket.connection.NonBlockingConnection) -> access$2000
org.xsocket.connection.NonBlockingConnection$1 -> org.xsocket.connection.NonBlockingConnection$1:
org.xsocket.connection.NonBlockingConnection$AsyncIoConnectorCallback -> org.xsocket.connection.NonBlockingConnection$AsyncIoConnectorCallback:
    java.net.InetSocketAddress remoteAddress -> remoteAddress
    java.nio.channels.SocketChannel channel -> channel
    javax.net.ssl.SSLContext sslContext -> sslContext
    boolean isSecured -> isSecured
    long connectTimeoutMillis -> connectTimeoutMillis
    org.xsocket.connection.NonBlockingConnection this$0 -> this$0
    void onConnectionEstablished() -> onConnectionEstablished
    void onConnectError(java.io.IOException) -> onConnectError
    void onConnectTimeout() -> onConnectTimeout
org.xsocket.connection.NonBlockingConnection$DefaultThreadFactory -> org.xsocket.connection.NonBlockingConnection$DefaultThreadFactory:
    java.util.concurrent.atomic.AtomicInteger POOL_NUMBER -> POOL_NUMBER
    java.util.concurrent.atomic.AtomicInteger threadNumber -> threadNumber
    java.lang.String namePrefix -> namePrefix
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.xsocket.connection.NonBlockingConnection$IoHandlerCallback -> org.xsocket.connection.NonBlockingConnection$IoHandlerCallback:
    org.xsocket.connection.NonBlockingConnection this$0 -> this$0
    void onWritten(java.nio.ByteBuffer) -> onWritten
    void onWriteException(java.io.IOException,java.nio.ByteBuffer) -> onWriteException
    void onData(java.nio.ByteBuffer[],int) -> onData
    void onPostData() -> onPostData
    void onConnectionAbnormalTerminated() -> onConnectionAbnormalTerminated
    void onConnect() -> onConnect
    void onConnectException(java.io.IOException) -> onConnectException
    void onDisconnect() -> onDisconnect
org.xsocket.connection.NonBlockingConnection$SendTask -> org.xsocket.connection.NonBlockingConnection$SendTask:
    java.lang.Object guard -> guard
    java.nio.channels.ReadableByteChannel sourceChannel -> sourceChannel
    java.nio.ByteBuffer copyBuffer -> copyBuffer
    boolean isComplete -> isComplete
    long written -> written
    java.io.IOException ioe -> ioe
    org.xsocket.connection.NonBlockingConnection this$0 -> this$0
    void onWritten(int) -> onWritten
    void onException(java.io.IOException) -> onException
    java.io.IOException getException() -> getException
    boolean isComplete() -> isComplete
    long getWritten() -> getWritten
org.xsocket.connection.NonBlockingConnection$SyncIoConnectorCallback -> org.xsocket.connection.NonBlockingConnection$SyncIoConnectorCallback:
    java.util.concurrent.atomic.AtomicBoolean isConnected -> isConnected
    java.net.InetSocketAddress remoteAddress -> remoteAddress
    java.nio.channels.SocketChannel channel -> channel
    javax.net.ssl.SSLContext sslContext -> sslContext
    boolean isSecured -> isSecured
    long connectTimeoutMillis -> connectTimeoutMillis
    boolean isOperationClosed -> isOperationClosed
    java.io.IOException ioe -> ioe
    boolean $assertionsDisabled -> $assertionsDisabled
    org.xsocket.connection.NonBlockingConnection this$0 -> this$0
    void connect() -> connect
    void notifyWaiting() -> notifyWaiting
    void onConnectionEstablished() -> onConnectionEstablished
    void onConnectError(java.io.IOException) -> onConnectError
    void onConnectTimeout() -> onConnectTimeout
    void onConnect() -> onConnect
    void onConnectException(java.io.IOException) -> onConnectException
    void onConnectionAbnormalTerminated() -> onConnectionAbnormalTerminated
    void onData(java.nio.ByteBuffer[],int) -> onData
    void onPostData() -> onPostData
    void onWritten(java.nio.ByteBuffer) -> onWritten
    void onWriteException(java.io.IOException,java.nio.ByteBuffer) -> onWriteException
    void onDisconnect() -> onDisconnect
org.xsocket.connection.NonBlockingConnection$SynchronWriter -> org.xsocket.connection.NonBlockingConnection$SynchronWriter:
    java.util.concurrent.atomic.AtomicBoolean isCallPendingRef -> isCallPendingRef
    java.util.ArrayList pendingBuffers -> pendingBuffers
    java.io.IOException ioe -> ioe
    int countOnWritten -> countOnWritten
    int countOnException -> countOnException
    int countUnknownOnWritten -> countUnknownOnWritten
    boolean $assertionsDisabled -> $assertionsDisabled
    org.xsocket.connection.NonBlockingConnection this$0 -> this$0
    boolean isReusable() -> isReusable
    void close() -> close
    void onWritten(java.nio.ByteBuffer) -> onWritten
    void onException(java.io.IOException) -> onException
    void syncWrite(java.util.List) -> syncWrite
org.xsocket.connection.NonBlockingConnection$WriteCompletionHolder -> org.xsocket.connection.NonBlockingConnection$WriteCompletionHolder:
    org.xsocket.connection.IWriteCompletionHandler handler -> handler
    org.xsocket.connection.ConnectionUtils$CompletionHandlerInfo handlerInfo -> handlerInfo
    int size -> size
    org.xsocket.connection.NonBlockingConnection this$0 -> this$0
    void performOnWritten() -> performOnWritten
    void run() -> run
    void callOnWritten() -> callOnWritten
    void performOnException(java.io.IOException) -> performOnException
    void callOnException(java.io.IOException) -> callOnException
    void access$1800(org.xsocket.connection.NonBlockingConnection$WriteCompletionHolder,java.io.IOException) -> access$1800
org.xsocket.connection.NonBlockingConnection$WriteCompletionHolder$1 -> org.xsocket.connection.NonBlockingConnection$WriteCompletionHolder$1:
    java.io.IOException val$ioe -> val$ioe
    org.xsocket.connection.NonBlockingConnection$WriteCompletionHolder this$1 -> this$1
    void run() -> run
org.xsocket.connection.NonBlockingConnection$WriteCompletionHolder$2 -> org.xsocket.connection.NonBlockingConnection$WriteCompletionHolder$2:
    java.io.IOException val$ioe -> val$ioe
    org.xsocket.connection.NonBlockingConnection$WriteCompletionHolder this$1 -> this$1
    void run() -> run
org.xsocket.connection.NonBlockingConnection$WriteCompletionManager -> org.xsocket.connection.NonBlockingConnection$WriteCompletionManager:
    java.util.Map pendingCompletionConfirmations -> pendingCompletionConfirmations
    java.util.concurrent.atomic.AtomicBoolean isWriteCompletionSupportActivated -> isWriteCompletionSupportActivated
    org.xsocket.connection.NonBlockingConnection this$0 -> this$0
    void registerCompletionHandler(org.xsocket.connection.IWriteCompletionHandler,java.nio.ByteBuffer[]) -> registerCompletionHandler
    void onWritten(java.nio.ByteBuffer[]) -> onWritten
    void onWritten(java.nio.ByteBuffer) -> onWritten
    void onWriteException(java.io.IOException,java.nio.ByteBuffer[]) -> onWriteException
    void onWriteException(java.io.IOException,java.nio.ByteBuffer) -> onWriteException
    boolean reset() -> reset
    void close() -> close
    void access$600(org.xsocket.connection.NonBlockingConnection$WriteCompletionManager,java.nio.ByteBuffer) -> access$600
    void access$700(org.xsocket.connection.NonBlockingConnection$WriteCompletionManager,java.io.IOException,java.nio.ByteBuffer) -> access$700
org.xsocket.connection.NonBlockingConnectionPool -> org.xsocket.connection.NonBlockingConnectionPool:
    java.util.logging.Logger LOG -> LOG
    long MIN_REMAINING_MILLIS_TO_IDLE_TIMEOUT -> MIN_REMAINING_MILLIS_TO_IDLE_TIMEOUT
    long MIN_REMAINING_MILLIS_TO_CONNECTION_TIMEOUT -> MIN_REMAINING_MILLIS_TO_CONNECTION_TIMEOUT
    int CONNECT_MAX_TRIALS -> CONNECT_MAX_TRIALS
    int CONNECT_RETRY_WAIT_TIME_MILLIS -> CONNECT_RETRY_WAIT_TIME_MILLIS
    java.util.concurrent.atomic.AtomicBoolean isOpen -> isOpen
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.util.concurrent.atomic.AtomicInteger maxActive -> maxActive
    java.util.concurrent.atomic.AtomicInteger maxActivePerServer -> maxActivePerServer
    java.util.concurrent.atomic.AtomicInteger maxIdle -> maxIdle
    java.util.concurrent.atomic.AtomicInteger poolIdleTimeoutMillis -> poolIdleTimeoutMillis
    java.util.concurrent.atomic.AtomicInteger lifeTimeoutMillis -> lifeTimeoutMillis
    java.lang.Object limitGuard -> limitGuard
    int numInitializingConnections -> numInitializingConnections
    java.util.Map initializingConnectionMap -> initializingConnectionMap
    org.xsocket.connection.NonBlockingConnectionPool$Pool pool -> pool
    java.lang.Object retrieveGuard -> retrieveGuard
    java.lang.Integer acquireTimeoutMillis -> acquireTimeoutMillis
    java.util.concurrent.Executor workerpool -> workerpool
    int DEFAULT_WATCHDOG_CHECK_PERIOD -> DEFAULT_WATCHDOG_CHECK_PERIOD
    org.xsocket.connection.NonBlockingConnectionPool$Watchog watchdog -> watchdog
    java.util.List listeners -> listeners
    java.util.concurrent.atomic.AtomicInteger countRejectedConnections -> countRejectedConnections
    java.util.concurrent.atomic.AtomicInteger countUndetectedDisconnect -> countUndetectedDisconnect
    java.util.concurrent.atomic.AtomicInteger countPendingGet -> countPendingGet
    java.util.concurrent.atomic.AtomicInteger countCreated -> countCreated
    java.util.concurrent.atomic.AtomicInteger countDestroyed -> countDestroyed
    java.util.concurrent.atomic.AtomicInteger countRemainingMillisToIdleTimeoutToSmall -> countRemainingMillisToIdleTimeoutToSmall
    java.util.concurrent.atomic.AtomicInteger countRemainingConnectionToIdleTimeoutToSmall -> countRemainingConnectionToIdleTimeoutToSmall
    java.util.concurrent.atomic.AtomicInteger countCreationError -> countCreationError
    java.util.concurrent.atomic.AtomicInteger countIdleTimeout -> countIdleTimeout
    java.util.concurrent.atomic.AtomicInteger countConnectionTimeout -> countConnectionTimeout
    java.util.concurrent.atomic.AtomicInteger countTimeoutPooledIdle -> countTimeoutPooledIdle
    java.util.concurrent.atomic.AtomicInteger countTimeoutPooledLifetime -> countTimeoutPooledLifetime
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.lang.String,int) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.lang.String,int,boolean) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.lang.String,int,int) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.lang.String,int,int,boolean) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.net.InetSocketAddress) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.net.InetAddress,int) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.net.InetAddress,int,boolean) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.net.InetAddress,int,int) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.net.InetAddress,int,int,boolean) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.net.InetAddress,int,boolean,int,boolean) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.net.InetAddress,int,org.xsocket.connection.IHandler) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.net.InetAddress,int,org.xsocket.connection.IHandler,boolean) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.lang.String,int,org.xsocket.connection.IHandler) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.lang.String,int,org.xsocket.connection.IHandler,boolean) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.net.InetAddress,int,org.xsocket.connection.IHandler,int) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.net.InetAddress,int,org.xsocket.connection.IHandler,boolean,int) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.net.InetAddress,int,org.xsocket.connection.IHandler,int,boolean) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.net.InetAddress,int,org.xsocket.connection.IHandler,boolean,int,boolean) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.net.InetAddress,int,org.xsocket.connection.IHandler,java.util.concurrent.Executor,int) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.net.InetAddress,int,org.xsocket.connection.IHandler,java.util.concurrent.Executor,int,boolean) -> getNonBlockingConnection
    org.xsocket.connection.INonBlockingConnection getNonBlockingConnection(java.net.InetAddress,int,org.xsocket.connection.IHandler,java.util.concurrent.Executor,boolean,int,boolean) -> getNonBlockingConnection
    int toInt(long) -> toInt
    org.xsocket.connection.INonBlockingConnection getConnection(java.net.InetSocketAddress,org.xsocket.connection.IHandler,java.util.concurrent.Executor,boolean,int,boolean) -> getConnection
    void checkLimit(java.net.InetAddress) -> checkLimit
    void incCountInitializingConnections(java.net.InetAddress) -> incCountInitializingConnections
    void decCountInitializingConnections(java.net.InetAddress) -> decCountInitializingConnections
    void newConnection(org.xsocket.connection.NonBlockingConnectionPool$Connector) -> newConnection
    void returnToIdlePool(org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder) -> returnToIdlePool
    void wakeupPendingRetrieve() -> wakeupPendingRetrieve
    org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder newNativeConnection(org.xsocket.connection.NonBlockingConnectionPool$Connector,int,int,int,boolean) -> newNativeConnection
    boolean isOpen() -> isOpen
    void close() -> close
    void destroy() -> destroy
    void addListener(org.xsocket.ILifeCycle) -> addListener
    boolean removeListener(org.xsocket.ILifeCycle) -> removeListener
    void setWorkerpool(java.util.concurrent.Executor) -> setWorkerpool
    java.util.concurrent.Executor getWorkerpool() -> getWorkerpool
    int getMaxActive() -> getMaxActive
    int getNumRejectedConnections() -> getNumRejectedConnections
    void setMaxActive(int) -> setMaxActive
    void setMaxActivePerServer(int) -> setMaxActivePerServer
    int getMaxActivePerServer() -> getMaxActivePerServer
    int getMaxIdle() -> getMaxIdle
    void setMaxIdle(int) -> setMaxIdle
    int getNumActive() -> getNumActive
    java.lang.Integer getAcquireTimeoutMillis() -> getAcquireTimeoutMillis
    void setAcquireTimeoutMillis(java.lang.Integer) -> setAcquireTimeoutMillis
    java.util.List getActiveConnectionInfos() -> getActiveConnectionInfos
    java.util.List getIdleConnectionInfos() -> getIdleConnectionInfos
    int getNumIdle() -> getNumIdle
    int getNumCreated() -> getNumCreated
    int getNumCreationError() -> getNumCreationError
    int getNumDestroyed() -> getNumDestroyed
    int getNumIdleTimeout() -> getNumIdleTimeout
    int getNumConnectionTimeout() -> getNumConnectionTimeout
    int getNumPoolIdleTimeout() -> getNumPoolIdleTimeout
    int getNumPoolLifetimeTimeout() -> getNumPoolLifetimeTimeout
    int getNumTimeoutPooledMaxIdleTime() -> getNumTimeoutPooledMaxIdleTime
    int getNumTimeoutPooledMaxLifeTime() -> getNumTimeoutPooledMaxLifeTime
    int getNumUndetectedDisconnect() -> getNumUndetectedDisconnect
    int getPooledMaxIdleTimeMillis() -> getPooledMaxIdleTimeMillis
    void setPooledMaxIdleTimeMillis(int) -> setPooledMaxIdleTimeMillis
    int getPooledMaxLifeTimeMillis() -> getPooledMaxLifeTimeMillis
    void setPooledMaxLifeTimeMillis(int) -> setPooledMaxLifeTimeMillis
    int getNumPendingGet() -> getNumPendingGet
    void destroy(org.xsocket.connection.INonBlockingConnection) -> destroy
    boolean isDestroyed(org.xsocket.connection.INonBlockingConnection) -> isDestroyed
    void checkIdleConnections() -> checkIdleConnections
    java.lang.String toString() -> toString
    java.util.concurrent.atomic.AtomicInteger access$300(org.xsocket.connection.NonBlockingConnectionPool) -> access$300
    java.util.concurrent.atomic.AtomicInteger access$400(org.xsocket.connection.NonBlockingConnectionPool) -> access$400
    java.util.concurrent.Executor access$500(org.xsocket.connection.NonBlockingConnectionPool) -> access$500
    void access$600(org.xsocket.connection.NonBlockingConnectionPool,java.net.InetAddress) -> access$600
    void access$700(org.xsocket.connection.NonBlockingConnectionPool,java.net.InetAddress) -> access$700
    void access$800(org.xsocket.connection.NonBlockingConnectionPool,org.xsocket.connection.NonBlockingConnectionPool$Connector) -> access$800
    java.util.concurrent.atomic.AtomicInteger access$900(org.xsocket.connection.NonBlockingConnectionPool) -> access$900
    java.util.logging.Logger access$1000() -> access$1000
    java.lang.Integer access$1100(org.xsocket.connection.NonBlockingConnectionPool) -> access$1100
    java.lang.Object access$1200(org.xsocket.connection.NonBlockingConnectionPool) -> access$1200
    void access$1300(org.xsocket.connection.NonBlockingConnectionPool,java.net.InetAddress) -> access$1300
    void access$1500(org.xsocket.connection.NonBlockingConnectionPool) -> access$1500
    org.xsocket.connection.NonBlockingConnectionPool$Pool access$1700(org.xsocket.connection.NonBlockingConnectionPool) -> access$1700
    java.util.concurrent.atomic.AtomicInteger access$1800(org.xsocket.connection.NonBlockingConnectionPool) -> access$1800
    java.util.concurrent.atomic.AtomicInteger access$1900(org.xsocket.connection.NonBlockingConnectionPool) -> access$1900
    java.util.concurrent.atomic.AtomicInteger access$2000(org.xsocket.connection.NonBlockingConnectionPool) -> access$2000
    java.util.concurrent.atomic.AtomicInteger access$2300(org.xsocket.connection.NonBlockingConnectionPool) -> access$2300
    java.util.concurrent.atomic.AtomicInteger access$2400(org.xsocket.connection.NonBlockingConnectionPool) -> access$2400
    java.util.concurrent.atomic.AtomicInteger access$2600(org.xsocket.connection.NonBlockingConnectionPool) -> access$2600
    java.util.concurrent.atomic.AtomicInteger access$2800(org.xsocket.connection.NonBlockingConnectionPool) -> access$2800
    void access$2900(org.xsocket.connection.NonBlockingConnectionPool,org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder) -> access$2900
    java.util.concurrent.atomic.AtomicInteger access$3000(org.xsocket.connection.NonBlockingConnectionPool) -> access$3000
    java.util.concurrent.atomic.AtomicInteger access$3100(org.xsocket.connection.NonBlockingConnectionPool) -> access$3100
    java.util.concurrent.atomic.AtomicInteger access$3200(org.xsocket.connection.NonBlockingConnectionPool) -> access$3200
    java.util.concurrent.atomic.AtomicInteger access$3300(org.xsocket.connection.NonBlockingConnectionPool) -> access$3300
    void access$3400(org.xsocket.connection.NonBlockingConnectionPool) -> access$3400
org.xsocket.connection.NonBlockingConnectionPool$1 -> org.xsocket.connection.NonBlockingConnectionPool$1:
org.xsocket.connection.NonBlockingConnectionPool$Connector -> org.xsocket.connection.NonBlockingConnectionPool$Connector:
    org.xsocket.connection.NonBlockingConnectionPool$NonBlockingConnectionProxy proxy -> proxy
    org.xsocket.connection.IHandler appHandler -> appHandler
    boolean isSSL -> isSSL
    boolean isConnectionLimited -> isConnectionLimited
    long startMillis -> startMillis
    int connectTimeoutMillis -> connectTimeoutMillis
    long retryWaittimeMillis -> retryWaittimeMillis
    int maxTrials -> maxTrials
    int trials -> trials
    org.xsocket.connection.NonBlockingConnectionPool this$0 -> this$0
    boolean isSSL() -> isSSL
    java.util.concurrent.Executor getWorkerpool() -> getWorkerpool
    int getConnectTimeoutMillis() -> getConnectTimeoutMillis
    java.net.InetSocketAddress getAddress() -> getAddress
    void connect() -> connect
    void performConnect() -> performConnect
    void onConnected(org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder) -> onConnected
    void onConnectError(java.io.IOException) -> onConnectError
    void onConnectionEstablished() -> onConnectionEstablished
    void onConnectFailed(java.io.IOException) -> onConnectFailed
org.xsocket.connection.NonBlockingConnectionPool$Connector$1 -> org.xsocket.connection.NonBlockingConnectionPool$Connector$1:
    org.xsocket.connection.NonBlockingConnectionPool$Connector this$1 -> this$1
    void run() -> run
org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder -> org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder:
    java.util.concurrent.atomic.AtomicBoolean isClosed -> isClosed
    java.util.concurrent.atomic.AtomicBoolean isReusable -> isReusable
    java.util.concurrent.atomic.AtomicReference proxyRef -> proxyRef
    org.xsocket.connection.NonBlockingConnectionPool$Connector connector -> connector
    org.xsocket.connection.NonBlockingConnection connection -> connection
    java.net.InetSocketAddress address -> address
    boolean isSSL -> isSSL
    int usage -> usage
    long creationTimeMillis -> creationTimeMillis
    long lastUsageTimeMillis -> lastUsageTimeMillis
    boolean $assertionsDisabled -> $assertionsDisabled
    org.xsocket.connection.NonBlockingConnectionPool this$0 -> this$0
    boolean onConnect(org.xsocket.connection.INonBlockingConnection) -> onConnect
    boolean onConnectException(org.xsocket.connection.INonBlockingConnection,java.io.IOException) -> onConnectException
    java.lang.String getId() -> getId
    int getPooledMaxLifeTimeMillis() -> getPooledMaxLifeTimeMillis
    int getPooledMaxIdleTimeMillis() -> getPooledMaxIdleTimeMillis
    boolean onData(org.xsocket.connection.INonBlockingConnection) -> onData
    boolean onDisconnect(org.xsocket.connection.INonBlockingConnection) -> onDisconnect
    boolean onConnectionTimeout(org.xsocket.connection.INonBlockingConnection) -> onConnectionTimeout
    boolean onIdleTimeout(org.xsocket.connection.INonBlockingConnection) -> onIdleTimeout
    int getUsage() -> getUsage
    long getCreationTimeMillis() -> getCreationTimeMillis
    org.xsocket.connection.NonBlockingConnection getConnection() -> getConnection
    java.net.InetSocketAddress getAddress() -> getAddress
    void registerProxy(org.xsocket.connection.NonBlockingConnectionPool$NonBlockingConnectionProxy) -> registerProxy
    void unregister() -> unregister
    boolean isVaild(long,boolean) -> isVaild
    void close() -> close
    java.lang.String toString() -> toString
    boolean access$200(org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder,long,boolean) -> access$200
    boolean access$1600(org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder) -> access$1600
    long access$3500(org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder) -> access$3500
    int access$3600(org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder) -> access$3600
    org.xsocket.connection.NonBlockingConnection access$3700(org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder) -> access$3700
    long access$3800(org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder) -> access$3800
org.xsocket.connection.NonBlockingConnectionPool$NonBlockingConnectionProxy -> org.xsocket.connection.NonBlockingConnectionPool$NonBlockingConnectionProxy:
    boolean isOpen -> isOpen
    java.util.concurrent.atomic.AtomicReference nativeConnectionHolderRef -> nativeConnectionHolderRef
    java.lang.String id -> id
    java.util.concurrent.atomic.AtomicReference handlerAdapterRef -> handlerAdapterRef
    java.util.concurrent.atomic.AtomicReference handlerReplaceListenerRef -> handlerReplaceListenerRef
    java.lang.Object attachment -> attachment
    boolean isAutoflush -> isAutoflush
    java.net.InetSocketAddress address -> address
    int countReuse -> countReuse
    long initialSendBytes -> initialSendBytes
    long initialReceivedBytes -> initialReceivedBytes
    long creationTime -> creationTime
    long elapsedLastUsage -> elapsedLastUsage
    java.util.concurrent.atomic.AtomicBoolean isIdleTimeoutOccured -> isIdleTimeoutOccured
    java.util.concurrent.atomic.AtomicBoolean isConnectionTimeoutOccured -> isConnectionTimeoutOccured
    java.lang.Object disconnectedGuard -> disconnectedGuard
    boolean isDisconnected -> isDisconnected
    java.net.InetSocketAddress getAddress() -> getAddress
    void onConnected(org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder,org.xsocket.connection.IHandler) -> onConnected
    boolean onConnect() -> onConnect
    void onConnectFailed(java.util.concurrent.Executor,java.io.IOException,org.xsocket.connection.IHandler) -> onConnectFailed
    void ensureOpen() -> ensureOpen
    void setHandler(org.xsocket.connection.IHandler) -> setHandler
    org.xsocket.connection.IHandler getHandler() -> getHandler
    boolean isDestroyed() -> isDestroyed
    boolean isOpen() -> isOpen
    void close() -> close
    void destroy() -> destroy
    void initiateOnDisconnect() -> initiateOnDisconnect
    java.lang.String toString() -> toString
    java.lang.String getId() -> getId
    boolean onDisconnect() -> onDisconnect
    boolean onData() -> onData
    boolean onConnectionTimeout() -> onConnectionTimeout
    boolean onIdleTimeout() -> onIdleTimeout
    boolean isServerSide() -> isServerSide
    java.util.concurrent.Executor getWorkerpool() -> getWorkerpool
    void setWorkerpool(java.util.concurrent.Executor) -> setWorkerpool
    void setAttachment(java.lang.Object) -> setAttachment
    java.lang.Object getAttachment() -> getAttachment
    void setAutoflush(boolean) -> setAutoflush
    boolean isAutoflush() -> isAutoflush
    void setEncoding(java.lang.String) -> setEncoding
    java.lang.String getEncoding() -> getEncoding
    void setFlushmode(org.xsocket.connection.IConnection$FlushMode) -> setFlushmode
    org.xsocket.connection.IConnection$FlushMode getFlushmode() -> getFlushmode
    void setOption(java.lang.String,java.lang.Object) -> setOption
    java.lang.Object getOption(java.lang.String) -> getOption
    long getNumberOfReceivedBytes() -> getNumberOfReceivedBytes
    long getNumberOfSendBytes() -> getNumberOfSendBytes
    java.util.Map getOptions() -> getOptions
    void setWriteTransferRate(int) -> setWriteTransferRate
    int getWriteTransferRate() -> getWriteTransferRate
    int getMaxReadBufferThreshold() -> getMaxReadBufferThreshold
    void setMaxReadBufferThreshold(int) -> setMaxReadBufferThreshold
    void setConnectionTimeoutMillis(long) -> setConnectionTimeoutMillis
    long getConnectionTimeoutMillis() -> getConnectionTimeoutMillis
    void setIdleTimeoutMillis(long) -> setIdleTimeoutMillis
    long getIdleTimeoutMillis() -> getIdleTimeoutMillis
    long getRemainingMillisToConnectionTimeout() -> getRemainingMillisToConnectionTimeout
    long getRemainingMillisToIdleTimeout() -> getRemainingMillisToIdleTimeout
    boolean isSecure() -> isSecure
    void activateSecuredMode() -> activateSecuredMode
    void deactivateSecuredMode() -> deactivateSecuredMode
    boolean isSecuredModeActivateable() -> isSecuredModeActivateable
    void suspendReceiving() -> suspendReceiving
    boolean isReceivingSuspended() -> isReceivingSuspended
    void resumeReceiving() -> resumeReceiving
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void write(java.nio.ByteBuffer[],org.xsocket.connection.IWriteCompletionHandler) -> write
    long write(java.nio.ByteBuffer[]) -> write
    int write(java.nio.ByteBuffer) -> write
    void write(java.nio.ByteBuffer,org.xsocket.connection.IWriteCompletionHandler) -> write
    long write(java.nio.ByteBuffer[],int,int) -> write
    void write(java.nio.ByteBuffer[],int,int,org.xsocket.connection.IWriteCompletionHandler) -> write
    long write(java.util.List) -> write
    void write(java.util.List,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(byte[],org.xsocket.connection.IWriteCompletionHandler) -> write
    int write(byte[],int,int) -> write
    void write(byte[],int,int,org.xsocket.connection.IWriteCompletionHandler) -> write
    int write(byte) -> write
    int write(byte[]) -> write
    int write(long) -> write
    int write(double) -> write
    int write(int) -> write
    int write(short) -> write
    int write(java.lang.String) -> write
    int write(java.lang.String,java.lang.String) -> write
    void write(java.lang.String,java.lang.String,org.xsocket.connection.IWriteCompletionHandler) -> write
    void flush() -> flush
    long transferFrom(java.nio.channels.FileChannel) -> transferFrom
    long transferFrom(java.nio.channels.ReadableByteChannel) -> transferFrom
    long transferFrom(java.nio.channels.ReadableByteChannel,int) -> transferFrom
    int getPendingWriteDataSize() -> getPendingWriteDataSize
    void markWritePosition() -> markWritePosition
    void removeWriteMark() -> removeWriteMark
    boolean resetToWriteMark() -> resetToWriteMark
    void markReadPosition() -> markReadPosition
    void removeReadMark() -> removeReadMark
    boolean resetToReadMark() -> resetToReadMark
    int available() -> available
    int getReadBufferVersion() -> getReadBufferVersion
    int indexOf(java.lang.String) -> indexOf
    int indexOf(java.lang.String,java.lang.String) -> indexOf
    void unread(java.nio.ByteBuffer[]) -> unread
    void unread(byte[]) -> unread
    void unread(java.nio.ByteBuffer) -> unread
    void unread(java.lang.String) -> unread
    int read(java.nio.ByteBuffer) -> read
    byte readByte() -> readByte
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,int) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String,int) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByLength(int) -> readByteBufferByLength
    byte[] readBytesByDelimiter(java.lang.String) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,int) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String,int) -> readBytesByDelimiter
    byte[] readBytesByLength(int) -> readBytesByLength
    double readDouble() -> readDouble
    int readInt() -> readInt
    long readLong() -> readLong
    short readShort() -> readShort
    java.lang.String readStringByDelimiter(java.lang.String) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,int) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String,int) -> readStringByDelimiter
    java.lang.String readStringByLength(int) -> readStringByLength
    java.lang.String readStringByLength(int,java.lang.String) -> readStringByLength
    long transferTo(java.nio.channels.WritableByteChannel,int) -> transferTo
    org.xsocket.connection.ExtendedClosedChannelException newClosedChannelException() -> newClosedChannelException
    java.lang.RuntimeException newClosedChannelRuntimeException() -> newClosedChannelRuntimeException
    boolean access$2100(org.xsocket.connection.NonBlockingConnectionPool$NonBlockingConnectionProxy) -> access$2100
    boolean access$2200(org.xsocket.connection.NonBlockingConnectionPool$NonBlockingConnectionProxy) -> access$2200
    boolean access$2500(org.xsocket.connection.NonBlockingConnectionPool$NonBlockingConnectionProxy) -> access$2500
    boolean access$2700(org.xsocket.connection.NonBlockingConnectionPool$NonBlockingConnectionProxy) -> access$2700
org.xsocket.connection.NonBlockingConnectionPool$Pool -> org.xsocket.connection.NonBlockingConnectionPool$Pool:
    java.util.ArrayList managedPool -> managedPool
    java.util.HashMap idlePool -> idlePool
    boolean isOpen -> isOpen
    void register(org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder) -> register
    boolean remove(org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder) -> remove
    boolean removeIdleConnection(org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder) -> removeIdleConnection
    org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder getAndRemoveIdleConnection(java.net.InetSocketAddress,boolean) -> getAndRemoveIdleConnection
    void returnIdleConnection(org.xsocket.connection.NonBlockingConnectionPool$NativeConnectionHolder) -> returnIdleConnection
    void close() -> close
    void destroy() -> destroy
    java.util.List newIdleCopySet() -> newIdleCopySet
    java.util.List newManagedPoolCopy() -> newManagedPoolCopy
    boolean isActiveExceeded(java.net.InetAddress,int) -> isActiveExceeded
    java.util.HashMap newIdlePoolCopy() -> newIdlePoolCopy
    int getSize() -> getSize
    int getNumIdle() -> getNumIdle
    int getNumActive() -> getNumActive
    int computeNumIdle() -> computeNumIdle
    java.lang.String toString() -> toString
    java.util.List access$1400(org.xsocket.connection.NonBlockingConnectionPool$Pool) -> access$1400
org.xsocket.connection.NonBlockingConnectionPool$SyncConnector -> org.xsocket.connection.NonBlockingConnectionPool$SyncConnector:
    boolean isConnected -> isConnected
    java.io.IOException ioe -> ioe
    org.xsocket.connection.NonBlockingConnectionPool this$0 -> this$0
    void connect() -> connect
    void onConnectionEstablished() -> onConnectionEstablished
    void onConnectFailed(java.io.IOException) -> onConnectFailed
org.xsocket.connection.NonBlockingConnectionPool$Watchog -> org.xsocket.connection.NonBlockingConnectionPool$Watchog:
    org.xsocket.connection.NonBlockingConnectionPool this$0 -> this$0
    void run() -> run
org.xsocket.connection.ReadQueue -> org.xsocket.connection.ReadQueue:
    java.util.logging.Logger LOG -> LOG
    org.xsocket.connection.ReadQueue$Queue queue -> queue
    java.nio.ByteBuffer[] readMarkBuffer -> readMarkBuffer
    boolean isReadMarked -> isReadMarked
    int readMarkVersion -> readMarkVersion
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset() -> reset
    boolean isEmpty() -> isEmpty
    int geVersion() -> geVersion
    void append(java.nio.ByteBuffer[],int) -> append
    int computeSize(java.nio.ByteBuffer[]) -> computeSize
    int retrieveIndexOf(byte[],int) -> retrieveIndexOf
    int getSize() -> getSize
    java.nio.ByteBuffer[] readAvailable() -> readAvailable
    java.nio.ByteBuffer[] copyAvailable() -> copyAvailable
    java.nio.ByteBuffer[] readByteBufferByDelimiter(byte[],int) -> readByteBufferByDelimiter
    void unread(java.nio.ByteBuffer[]) -> unread
    java.nio.ByteBuffer[] readByteBufferByLength(int) -> readByteBufferByLength
    java.nio.ByteBuffer readSingleByteBuffer(int) -> readSingleByteBuffer
    void markReadPosition() -> markReadPosition
    boolean resetToReadMark() -> resetToReadMark
    void removeReadMark() -> removeReadMark
    void onExtracted(java.nio.ByteBuffer[]) -> onExtracted
    void onExtracted(java.nio.ByteBuffer[],byte[]) -> onExtracted
    void onExtracted(java.nio.ByteBuffer) -> onExtracted
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
org.xsocket.connection.ReadQueue$1 -> org.xsocket.connection.ReadQueue$1:
org.xsocket.connection.ReadQueue$Index -> org.xsocket.connection.ReadQueue$Index:
    boolean hasDelimiterFound -> hasDelimiterFound
    byte[] delimiterBytes -> delimiterBytes
    int delimiterLength -> delimiterLength
    int delimiterPos -> delimiterPos
    int readBytes -> readBytes
    java.nio.ByteBuffer lastScannedBuffer -> lastScannedBuffer
    boolean hasDelimiterFound() -> hasDelimiterFound
    int getReadBytes() -> getReadBytes
    boolean isDelimiterEquals(byte[]) -> isDelimiterEquals
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
    boolean access$100(org.xsocket.connection.ReadQueue$Index) -> access$100
    byte[] access$200(org.xsocket.connection.ReadQueue$Index) -> access$200
    int access$300(org.xsocket.connection.ReadQueue$Index) -> access$300
    int access$400(org.xsocket.connection.ReadQueue$Index) -> access$400
    boolean access$102(org.xsocket.connection.ReadQueue$Index,boolean) -> access$102
    int access$402(org.xsocket.connection.ReadQueue$Index,int) -> access$402
    int access$512(org.xsocket.connection.ReadQueue$Index,int) -> access$512
org.xsocket.connection.ReadQueue$Queue -> org.xsocket.connection.ReadQueue$Queue:
    int THRESHOLD_COMPACT_BUFFER_COUNT_TOTAL -> THRESHOLD_COMPACT_BUFFER_COUNT_TOTAL
    int THRESHOLD_COMPACT_BUFFER_COUNT_EMPTY -> THRESHOLD_COMPACT_BUFFER_COUNT_EMPTY
    java.nio.ByteBuffer[] buffers -> buffers
    java.lang.Integer currentSize -> currentSize
    int version -> version
    boolean isAppended -> isAppended
    org.xsocket.connection.ReadQueue$Index cachedIndex -> cachedIndex
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset() -> reset
    int getVersion(boolean) -> getVersion
    void setVersion(int) -> setVersion
    int getSize() -> getSize
    int size() -> size
    void append(java.nio.ByteBuffer[],int) -> append
    void addFirst(java.nio.ByteBuffer[]) -> addFirst
    void addFirstSilence(java.nio.ByteBuffer[]) -> addFirstSilence
    boolean containsEmptyBuffer(java.nio.ByteBuffer[]) -> containsEmptyBuffer
    java.nio.ByteBuffer[] drain() -> drain
    java.nio.ByteBuffer[] copy() -> copy
    java.nio.ByteBuffer readSingleByteBuffer(int) -> readSingleByteBuffer
    java.nio.ByteBuffer[] readByteBufferByLength(int) -> readByteBufferByLength
    java.nio.ByteBuffer[] readByteBufferByDelimiter(byte[],int) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] extract(int,int) -> extract
    int retrieveIndexOf(byte[],int) -> retrieveIndexOf
    int retrieveIndexOf(byte[],java.nio.ByteBuffer[],int) -> retrieveIndexOf
    org.xsocket.connection.ReadQueue$Index scanByDelimiter(java.nio.ByteBuffer[],byte[]) -> scanByDelimiter
    boolean isSizeEqualsOrLargerThan(int) -> isSizeEqualsOrLargerThan
    java.nio.ByteBuffer[] extractBuffers(int) -> extractBuffers
    java.nio.ByteBuffer[] appendBuffer(java.nio.ByteBuffer[],java.nio.ByteBuffer) -> appendBuffer
    void compact() -> compact
    java.nio.ByteBuffer[] removeEmptyBuffers(java.nio.ByteBuffer[]) -> removeEmptyBuffers
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    org.xsocket.connection.ReadQueue$Index find(java.nio.ByteBuffer[],byte[]) -> find
    org.xsocket.connection.ReadQueue$Index find(java.nio.ByteBuffer[],org.xsocket.connection.ReadQueue$Index) -> find
    int findFirstBufferToScan(java.nio.ByteBuffer[],org.xsocket.connection.ReadQueue$Index) -> findFirstBufferToScan
    void findInBuffer(java.nio.ByteBuffer,org.xsocket.connection.ReadQueue$Index) -> findInBuffer
org.xsocket.connection.Server -> org.xsocket.connection.Server:
    java.util.logging.Logger LOG -> LOG
    java.lang.String implementationVersion -> implementationVersion
    java.lang.String implementationDate -> implementationDate
    int SIZE_WORKER_POOL -> SIZE_WORKER_POOL
    int MIN_SIZE_WORKER_POOL -> MIN_SIZE_WORKER_POOL
    int TASK_QUEUE_SIZE -> TASK_QUEUE_SIZE
    int WAITTIME_MAXCONNECTION_EXCEEDED -> WAITTIME_MAXCONNECTION_EXCEEDED
    org.xsocket.connection.IConnection$FlushMode flushMode -> flushMode
    boolean autoflush -> autoflush
    java.lang.Integer writeRate -> writeRate
    java.util.concurrent.atomic.AtomicBoolean isOpen -> isOpen
    java.lang.String name -> name
    org.xsocket.connection.IoAcceptor acceptor -> acceptor
    java.util.concurrent.ExecutorService defaultWorkerPool -> defaultWorkerPool
    java.util.concurrent.Executor workerpool -> workerpool
    org.xsocket.connection.ConnectionManager connectionManager -> connectionManager
    int maxConcurrentConnections -> maxConcurrentConnections
    boolean isMaxConnectionCheckAvtive -> isMaxConnectionCheckAvtive
    java.util.concurrent.atomic.AtomicReference handlerReplaceListenerRef -> handlerReplaceListenerRef
    org.xsocket.connection.HandlerAdapter handlerAdapter -> handlerAdapter
    java.lang.Integer maxReadBufferThreshold -> maxReadBufferThreshold
    long idleTimeoutMillis -> idleTimeoutMillis
    long connectionTimeoutMillis -> connectionTimeoutMillis
    java.util.ArrayList listeners -> listeners
    java.lang.String localHostname -> localHostname
    int localPort -> localPort
    java.lang.String startUpLogMessage -> startUpLogMessage
    long startUpTime -> startUpTime
    void setHandler(org.xsocket.connection.IHandler) -> setHandler
    void initCurrentHandler() -> initCurrentHandler
    void callCurrentHandlerOnDestroy() -> callCurrentHandlerOnDestroy
    void setServerName(java.lang.String) -> setServerName
    java.lang.String getServerName() -> getServerName
    java.lang.String getStartUpLogMessage() -> getStartUpLogMessage
    void setStartUpLogMessage(java.lang.String) -> setStartUpLogMessage
    void run() -> run
    void start() -> start
    java.lang.Object getOption(java.lang.String) -> getOption
    org.xsocket.connection.IHandler getHandler() -> getHandler
    java.util.Map getOptions() -> getOptions
    void close() -> close
    void onClosed() -> onClosed
    void onPreRejectConnection(org.xsocket.connection.NonBlockingConnection) -> onPreRejectConnection
    org.xsocket.connection.IoAcceptor getAcceptor() -> getAcceptor
    long getConnectionManagerWatchDogPeriodMillis() -> getConnectionManagerWatchDogPeriodMillis
    int getConnectionManagerWatchDogRuns() -> getConnectionManagerWatchDogRuns
    void addListener(org.xsocket.connection.IServerListener) -> addListener
    boolean removeListener(org.xsocket.connection.IServerListener) -> removeListener
    java.util.concurrent.Executor getWorkerpool() -> getWorkerpool
    void setWorkerpool(java.util.concurrent.Executor) -> setWorkerpool
    boolean isOpen() -> isOpen
    void setMaxConcurrentConnections(int) -> setMaxConcurrentConnections
    void setMaxReadBufferThreshold(int) -> setMaxReadBufferThreshold
    int getMaxConcurrentConnections() -> getMaxConcurrentConnections
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getNumberOfOpenConnections() -> getNumberOfOpenConnections
    int getDispatcherPoolSize() -> getDispatcherPoolSize
    void setDispatcherPoolSize(int) -> setDispatcherPoolSize
    boolean getReceiveBufferIsDirect() -> getReceiveBufferIsDirect
    void setReceiveBufferIsDirect(boolean) -> setReceiveBufferIsDirect
    java.lang.Integer getReceiveBufferPreallocatedMinSize() -> getReceiveBufferPreallocatedMinSize
    java.util.Set getOpenConnections() -> getOpenConnections
    java.util.List getOpenConnectionInfos() -> getOpenConnectionInfos
    int getNumberOfIdleTimeouts() -> getNumberOfIdleTimeouts
    int getNumberOfConnectionTimeouts() -> getNumberOfConnectionTimeouts
    java.util.Date getStartUPDate() -> getStartUPDate
    org.xsocket.connection.IConnection$FlushMode getFlushmode() -> getFlushmode
    void setFlushmode(org.xsocket.connection.IConnection$FlushMode) -> setFlushmode
    void setAutoflush(boolean) -> setAutoflush
    boolean getAutoflush() -> getAutoflush
    void setConnectionTimeoutMillis(long) -> setConnectionTimeoutMillis
    void setWriteTransferRate(int) -> setWriteTransferRate
    void setIdleTimeoutMillis(long) -> setIdleTimeoutMillis
    long getConnectionTimeoutMillis() -> getConnectionTimeoutMillis
    long getIdleTimeoutMillis() -> getIdleTimeoutMillis
    java.lang.String getImplementationVersion() -> getImplementationVersion
    java.lang.String getImplementationDate() -> getImplementationDate
    java.lang.String toString() -> toString
    java.util.logging.Logger access$100() -> access$100
    java.util.concurrent.atomic.AtomicBoolean access$200(org.xsocket.connection.Server) -> access$200
    java.util.ArrayList access$300(org.xsocket.connection.Server) -> access$300
    org.xsocket.connection.IoAcceptor access$400(org.xsocket.connection.Server) -> access$400
    java.lang.String access$500(org.xsocket.connection.Server) -> access$500
    java.lang.String access$600(org.xsocket.connection.Server) -> access$600
    int access$700(org.xsocket.connection.Server) -> access$700
    java.lang.String access$800(org.xsocket.connection.Server) -> access$800
    void access$900(org.xsocket.connection.Server) -> access$900
    java.util.concurrent.ExecutorService access$1000(org.xsocket.connection.Server) -> access$1000
    java.util.concurrent.Executor access$1102(org.xsocket.connection.Server,java.util.concurrent.Executor) -> access$1102
    org.xsocket.connection.ConnectionManager access$1200(org.xsocket.connection.Server) -> access$1200
    int access$1300(org.xsocket.connection.Server) -> access$1300
    int access$1400() -> access$1400
    org.xsocket.connection.HandlerAdapter access$1500(org.xsocket.connection.Server) -> access$1500
    boolean access$1600(org.xsocket.connection.Server) -> access$1600
    boolean access$1700(org.xsocket.connection.Server) -> access$1700
    org.xsocket.connection.IConnection$FlushMode access$1800(org.xsocket.connection.Server) -> access$1800
    java.util.concurrent.Executor access$1100(org.xsocket.connection.Server) -> access$1100
    long access$1900(org.xsocket.connection.Server) -> access$1900
    long access$2000(org.xsocket.connection.Server) -> access$2000
    java.lang.Integer access$2100(org.xsocket.connection.Server) -> access$2100
    java.lang.Integer access$2200(org.xsocket.connection.Server) -> access$2200
    java.util.concurrent.ExecutorService access$1002(org.xsocket.connection.Server,java.util.concurrent.ExecutorService) -> access$1002
org.xsocket.connection.Server$1 -> org.xsocket.connection.Server$1:
org.xsocket.connection.Server$LifeCycleHandler -> org.xsocket.connection.Server$LifeCycleHandler:
    org.xsocket.connection.Server this$0 -> this$0
    void onConnected() -> onConnected
    void onDisconnected() -> onDisconnected
    void onConnectionAccepted(org.xsocket.connection.IoChainableHandler) -> onConnectionAccepted
    boolean isMacConnectionSizeExceeded() -> isMacConnectionSizeExceeded
    void init(org.xsocket.connection.NonBlockingConnection,org.xsocket.connection.IoChainableHandler) -> init
org.xsocket.connection.Server$ShutdownHookHandler -> org.xsocket.connection.Server$ShutdownHookHandler:
    java.lang.Runtime runtime -> runtime
    org.xsocket.connection.Server server -> server
    void register() -> register
    void run() -> run
    void deregister() -> deregister
org.xsocket.connection.Server$WorkerpoolCloser -> org.xsocket.connection.Server$WorkerpoolCloser:
    org.xsocket.connection.Server server -> server
    void run() -> run
org.xsocket.connection.ServerMBeanProxyFactory -> org.xsocket.connection.ServerMBeanProxyFactory:
    javax.management.ObjectName createAndRegister(org.xsocket.connection.IServer,java.lang.String,javax.management.MBeanServer) -> createAndRegister
    javax.management.ObjectName registerMBeans(org.xsocket.connection.IServer,java.lang.String,java.lang.String,javax.management.MBeanServer) -> registerMBeans
    void unregisterMBeans(org.xsocket.connection.IServer,java.lang.String,java.lang.String,javax.management.MBeanServer) -> unregisterMBeans
    void access$000(org.xsocket.connection.IServer,java.lang.String,java.lang.String,javax.management.MBeanServer) -> access$000
org.xsocket.connection.ServerMBeanProxyFactory$Listener -> org.xsocket.connection.ServerMBeanProxyFactory$Listener:
    java.util.logging.Logger LOG -> LOG
    org.xsocket.connection.IServer server -> server
    java.lang.String domain -> domain
    java.lang.String address -> address
    javax.management.MBeanServer mbeanServer -> mbeanServer
    void onInit() -> onInit
    void onDestroy() -> onDestroy
org.xsocket.connection.SynchronizedBlockingConnection -> org.xsocket.connection.SynchronizedBlockingConnection:
    org.xsocket.connection.IBlockingConnection delegate -> delegate
    void activateSecuredMode() -> activateSecuredMode
    void deactivateSecuredMode() -> deactivateSecuredMode
    void flush() -> flush
    java.lang.String getEncoding() -> getEncoding
    org.xsocket.connection.IConnection$FlushMode getFlushmode() -> getFlushmode
    int getMaxReadBufferThreshold() -> getMaxReadBufferThreshold
    int getPendingWriteDataSize() -> getPendingWriteDataSize
    int getReadTimeoutMillis() -> getReadTimeoutMillis
    boolean isAutoflush() -> isAutoflush
    boolean isReceivingSuspended() -> isReceivingSuspended
    boolean isSecure() -> isSecure
    void markReadPosition() -> markReadPosition
    void markWritePosition() -> markWritePosition
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String,int) -> readByteBufferByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String,int) -> readBytesByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String,int) -> readStringByDelimiter
    java.lang.String readStringByLength(int,java.lang.String) -> readStringByLength
    void removeReadMark() -> removeReadMark
    void removeWriteMark() -> removeWriteMark
    boolean resetToReadMark() -> resetToReadMark
    boolean resetToWriteMark() -> resetToWriteMark
    void resumeReceiving() -> resumeReceiving
    void setAutoflush(boolean) -> setAutoflush
    void setEncoding(java.lang.String) -> setEncoding
    void setFlushmode(org.xsocket.connection.IConnection$FlushMode) -> setFlushmode
    void setMaxReadBufferThreshold(int) -> setMaxReadBufferThreshold
    void setReadTimeoutMillis(int) -> setReadTimeoutMillis
    void suspendReceiving() -> suspendReceiving
    long transferFrom(java.nio.channels.FileChannel) -> transferFrom
    void unread(java.nio.ByteBuffer[]) -> unread
    void unread(java.nio.ByteBuffer) -> unread
    void unread(byte[]) -> unread
    void unread(java.lang.String) -> unread
    int write(java.lang.String,java.lang.String) -> write
    void write(java.nio.ByteBuffer[],org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.nio.ByteBuffer,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.util.List,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.nio.ByteBuffer[],int,int,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(byte[],org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(byte[],int,int,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.lang.String,java.lang.String,org.xsocket.connection.IWriteCompletionHandler) -> write
    int read(java.nio.ByteBuffer) -> read
    byte readByte() -> readByte
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,int) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByLength(int) -> readByteBufferByLength
    byte[] readBytesByDelimiter(java.lang.String) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,int) -> readBytesByDelimiter
    byte[] readBytesByLength(int) -> readBytesByLength
    double readDouble() -> readDouble
    int readInt() -> readInt
    long readLong() -> readLong
    short readShort() -> readShort
    java.lang.String readStringByDelimiter(java.lang.String) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,int) -> readStringByDelimiter
    java.lang.String readStringByLength(int) -> readStringByLength
    long transferTo(java.nio.channels.WritableByteChannel,int) -> transferTo
    long transferFrom(java.nio.channels.ReadableByteChannel) -> transferFrom
    long transferFrom(java.nio.channels.ReadableByteChannel,int) -> transferFrom
    int write(byte) -> write
    int write(byte[]) -> write
    int write(byte[],int,int) -> write
    int write(java.nio.ByteBuffer) -> write
    long write(java.nio.ByteBuffer[]) -> write
    long write(java.nio.ByteBuffer[],int,int) -> write
    long write(java.util.List) -> write
    int write(int) -> write
    int write(short) -> write
    int write(long) -> write
    int write(double) -> write
    int write(java.lang.String) -> write
org.xsocket.connection.SynchronizedNonBlockingConnection -> org.xsocket.connection.SynchronizedNonBlockingConnection:
    org.xsocket.connection.INonBlockingConnection delegate -> delegate
    void activateSecuredMode() -> activateSecuredMode
    void deactivateSecuredMode() -> deactivateSecuredMode
    int available() -> available
    void flush() -> flush
    java.lang.String getEncoding() -> getEncoding
    org.xsocket.connection.IConnection$FlushMode getFlushmode() -> getFlushmode
    org.xsocket.connection.IHandler getHandler() -> getHandler
    int getMaxReadBufferThreshold() -> getMaxReadBufferThreshold
    int getPendingWriteDataSize() -> getPendingWriteDataSize
    int getReadBufferVersion() -> getReadBufferVersion
    java.util.concurrent.Executor getWorkerpool() -> getWorkerpool
    int getWriteTransferRate() -> getWriteTransferRate
    int indexOf(java.lang.String) -> indexOf
    int indexOf(java.lang.String,java.lang.String) -> indexOf
    boolean isAutoflush() -> isAutoflush
    boolean isReceivingSuspended() -> isReceivingSuspended
    boolean isSecure() -> isSecure
    boolean isSecuredModeActivateable() -> isSecuredModeActivateable
    void markReadPosition() -> markReadPosition
    void markWritePosition() -> markWritePosition
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String,int) -> readByteBufferByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String,int) -> readBytesByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String,int) -> readStringByDelimiter
    java.lang.String readStringByLength(int,java.lang.String) -> readStringByLength
    void removeReadMark() -> removeReadMark
    void removeWriteMark() -> removeWriteMark
    boolean resetToReadMark() -> resetToReadMark
    boolean resetToWriteMark() -> resetToWriteMark
    void resumeReceiving() -> resumeReceiving
    void setAutoflush(boolean) -> setAutoflush
    void setEncoding(java.lang.String) -> setEncoding
    void setFlushmode(org.xsocket.connection.IConnection$FlushMode) -> setFlushmode
    void setHandler(org.xsocket.connection.IHandler) -> setHandler
    void setMaxReadBufferThreshold(int) -> setMaxReadBufferThreshold
    void setWorkerpool(java.util.concurrent.Executor) -> setWorkerpool
    void setWriteTransferRate(int) -> setWriteTransferRate
    void suspendReceiving() -> suspendReceiving
    long transferFrom(java.nio.channels.FileChannel) -> transferFrom
    void unread(java.nio.ByteBuffer[]) -> unread
    void unread(java.nio.ByteBuffer) -> unread
    void unread(byte[]) -> unread
    void unread(java.lang.String) -> unread
    int write(java.lang.String,java.lang.String) -> write
    void write(java.nio.ByteBuffer[],org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.nio.ByteBuffer,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.nio.ByteBuffer[],int,int,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.util.List,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(byte[],org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(byte[],int,int,org.xsocket.connection.IWriteCompletionHandler) -> write
    void write(java.lang.String,java.lang.String,org.xsocket.connection.IWriteCompletionHandler) -> write
    int read(java.nio.ByteBuffer) -> read
    byte readByte() -> readByte
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,int) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByLength(int) -> readByteBufferByLength
    byte[] readBytesByDelimiter(java.lang.String) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,int) -> readBytesByDelimiter
    byte[] readBytesByLength(int) -> readBytesByLength
    double readDouble() -> readDouble
    int readInt() -> readInt
    long readLong() -> readLong
    short readShort() -> readShort
    java.lang.String readStringByDelimiter(java.lang.String) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,int) -> readStringByDelimiter
    java.lang.String readStringByLength(int) -> readStringByLength
    long transferTo(java.nio.channels.WritableByteChannel,int) -> transferTo
    long transferFrom(java.nio.channels.ReadableByteChannel) -> transferFrom
    long transferFrom(java.nio.channels.ReadableByteChannel,int) -> transferFrom
    int write(byte) -> write
    int write(byte[]) -> write
    int write(byte[],int,int) -> write
    int write(java.nio.ByteBuffer) -> write
    long write(java.nio.ByteBuffer[]) -> write
    long write(java.nio.ByteBuffer[],int,int) -> write
    long write(java.util.List) -> write
    int write(int) -> write
    int write(short) -> write
    int write(long) -> write
    int write(double) -> write
    int write(java.lang.String) -> write
org.xsocket.connection.WriteQueue -> org.xsocket.connection.WriteQueue:
    org.xsocket.connection.WriteQueue$Queue queue -> queue
    org.xsocket.connection.WriteQueue$RewriteableBuffer writeMarkBuffer -> writeMarkBuffer
    boolean isWriteMarked -> isWriteMarked
    void reset() -> reset
    boolean isEmpty() -> isEmpty
    int getSize() -> getSize
    java.nio.ByteBuffer[] drain() -> drain
    void append(java.nio.ByteBuffer) -> append
    void append(java.nio.ByteBuffer[]) -> append
    void markWritePosition() -> markWritePosition
    void removeWriteMark() -> removeWriteMark
    boolean resetToWriteMark() -> resetToWriteMark
    java.lang.Object clone() -> clone
    java.lang.String toString(java.lang.String) -> toString
    java.lang.String toString() -> toString
org.xsocket.connection.WriteQueue$1 -> org.xsocket.connection.WriteQueue$1:
org.xsocket.connection.WriteQueue$Queue -> org.xsocket.connection.WriteQueue$Queue:
    java.nio.ByteBuffer[] buffers -> buffers
    void reset() -> reset
    boolean isEmpty() -> isEmpty
    boolean empty() -> empty
    int getSize() -> getSize
    void append(java.nio.ByteBuffer) -> append
    void append(java.nio.ByteBuffer[]) -> append
    java.nio.ByteBuffer[] drain() -> drain
    java.nio.ByteBuffer[] copy() -> copy
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
org.xsocket.connection.WriteQueue$RewriteableBuffer -> org.xsocket.connection.WriteQueue$RewriteableBuffer:
    java.util.ArrayList bufs -> bufs
    int writePosition -> writePosition
    void append(java.nio.ByteBuffer) -> append
    void resetWritePosition() -> resetWritePosition
    java.nio.ByteBuffer[] drain() -> drain
    int size() -> size
    java.lang.Object clone() -> clone
org.xsocket.datagram.AbstractChannelBasedEndpoint -> org.xsocket.datagram.AbstractChannelBasedEndpoint:
    java.util.logging.Logger LOG -> LOG
    org.xsocket.datagram.MemoryManager memoryManager -> memoryManager
    org.xsocket.datagram.IoSocketDispatcher dispatcher -> dispatcher
    java.util.Map SUPPORTED_OPTIONS -> SUPPORTED_OPTIONS
    java.net.DatagramSocket socket -> socket
    java.nio.channels.DatagramChannel channel -> channel
    java.nio.ByteOrder byteOrder -> byteOrder
    java.util.List sendQueue -> sendQueue
    org.xsocket.datagram.IoSocketDispatcher createDispatcher() -> createDispatcher
    java.nio.channels.DatagramChannel getChannel() -> getChannel
    void close() -> close
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    boolean isOpen() -> isOpen
    void logFine(java.lang.String) -> logFine
    void send(org.xsocket.datagram.UserDatagram) -> send
    void writePhysical() -> writePhysical
    java.lang.String toCompactString() -> toCompactString
    void onReadableEvent() -> onReadableEvent
    void onWriteableEvent() -> onWriteableEvent
    void onDispatcherClose() -> onDispatcherClose
    org.xsocket.datagram.AbstractChannelBasedEndpoint setOption(java.lang.String,java.lang.Object) -> setOption
    java.lang.Object getOption(java.lang.String) -> getOption
    java.util.Map getOptions() -> getOptions
org.xsocket.datagram.AbstractEndpoint -> org.xsocket.datagram.AbstractEndpoint:
    java.util.logging.Logger LOG -> LOG
    java.util.concurrent.Executor GLOBAL_WORKERPOOL -> GLOBAL_WORKERPOOL
    java.lang.String idPrefix -> idPrefix
    long nextId -> nextId
    java.lang.String id -> id
    java.lang.String defaultEncoding -> defaultEncoding
    java.lang.Object readGuard -> readGuard
    org.xsocket.datagram.AbstractEndpoint$ReceiveQueue receiveQueue -> receiveQueue
    int receiveSize -> receiveSize
    org.xsocket.datagram.IDatagramHandler datagramHandler -> datagramHandler
    java.util.concurrent.Executor workerPool -> workerPool
    long openTime -> openTime
    long lastTimeReceived -> lastTimeReceived
    long receivedBytes -> receivedBytes
    java.util.concurrent.Executor getGlobalWorkerPool() -> getGlobalWorkerPool
    void close() -> close
    java.util.concurrent.Executor getWorkerpool() -> getWorkerpool
    void setReceiveSize(int) -> setReceiveSize
    int getReceiveSize() -> getReceiveSize
    void onData(java.net.SocketAddress,java.nio.ByteBuffer) -> onData
    org.xsocket.datagram.UserDatagram receive(long) -> receive
    org.xsocket.datagram.UserDatagram receive() -> receive
    java.lang.String getDefaultEncoding() -> getDefaultEncoding
    void setDefaultEncoding(java.lang.String) -> setDefaultEncoding
    java.lang.String getId() -> getId
    java.lang.String toString() -> toString
    org.xsocket.datagram.AbstractEndpoint$ReceiveQueue access$200(org.xsocket.datagram.AbstractEndpoint) -> access$200
    org.xsocket.datagram.IDatagramHandler access$300(org.xsocket.datagram.AbstractEndpoint) -> access$300
    java.util.logging.Logger access$400() -> access$400
org.xsocket.datagram.AbstractEndpoint$1 -> org.xsocket.datagram.AbstractEndpoint$1:
    org.xsocket.datagram.AbstractEndpoint this$0 -> this$0
    void run() -> run
org.xsocket.datagram.AbstractEndpoint$HandlerProcessor -> org.xsocket.datagram.AbstractEndpoint$HandlerProcessor:
    org.xsocket.datagram.AbstractEndpoint this$0 -> this$0
    void run() -> run
org.xsocket.datagram.AbstractEndpoint$ReceiveQueue -> org.xsocket.datagram.AbstractEndpoint$ReceiveQueue:
    java.util.List receiveQueue -> receiveQueue
    int modifyVersion -> modifyVersion
    void offer(org.xsocket.datagram.UserDatagram) -> offer
    org.xsocket.datagram.UserDatagram poll() -> poll
    boolean isEmpty() -> isEmpty
    java.lang.String toString() -> toString
org.xsocket.datagram.ConnectedEndpoint -> org.xsocket.datagram.ConnectedEndpoint:
    java.util.logging.Logger LOG -> LOG
    java.net.SocketAddress remoteAddress -> remoteAddress
    void send(org.xsocket.datagram.UserDatagram) -> send
    java.net.SocketAddress getRemoteSocketAddress() -> getRemoteSocketAddress
    org.xsocket.datagram.ConnectedEndpoint setOption(java.lang.String,java.lang.Object) -> setOption
    java.util.Map getOptions() -> getOptions
    java.lang.Object getOption(java.lang.String) -> getOption
    org.xsocket.datagram.AbstractChannelBasedEndpoint setOption(java.lang.String,java.lang.Object) -> setOption
    java.lang.String toCompactString() -> toCompactString
    java.lang.String toString() -> toString
    org.xsocket.datagram.UserDatagram receive() -> receive
    java.util.concurrent.Executor getWorkerpool() -> getWorkerpool
org.xsocket.datagram.Endpoint -> org.xsocket.datagram.Endpoint:
    org.xsocket.datagram.Endpoint setOption(java.lang.String,java.lang.Object) -> setOption
    java.util.Map getOptions() -> getOptions
    java.lang.Object getOption(java.lang.String) -> getOption
    org.xsocket.datagram.AbstractChannelBasedEndpoint setOption(java.lang.String,java.lang.Object) -> setOption
    java.lang.String toCompactString() -> toCompactString
    void send(org.xsocket.datagram.UserDatagram) -> send
    java.lang.String toString() -> toString
    org.xsocket.datagram.UserDatagram receive() -> receive
    java.util.concurrent.Executor getWorkerpool() -> getWorkerpool
org.xsocket.datagram.IConnectedEndpoint -> org.xsocket.datagram.IConnectedEndpoint:
    java.net.SocketAddress getRemoteSocketAddress() -> getRemoteSocketAddress
org.xsocket.datagram.IDatagramHandler -> org.xsocket.datagram.IDatagramHandler:
    boolean onDatagram(org.xsocket.datagram.IEndpoint) -> onDatagram
org.xsocket.datagram.IEndpoint -> org.xsocket.datagram.IEndpoint:
    java.lang.String SO_SNDBUF -> SO_SNDBUF
    java.lang.String SO_RCVBUF -> SO_RCVBUF
    java.lang.String SO_REUSEADDR -> SO_REUSEADDR
    java.lang.String SO_BROADCAST -> SO_BROADCAST
    java.lang.String IP_TOS -> IP_TOS
    java.lang.String IP_MULTICAST_TTL -> IP_MULTICAST_TTL
    java.lang.String IP_MULTICAST_LOOP -> IP_MULTICAST_LOOP
    boolean isOpen() -> isOpen
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    void setDefaultEncoding(java.lang.String) -> setDefaultEncoding
    java.lang.String getDefaultEncoding() -> getDefaultEncoding
    void send(org.xsocket.datagram.UserDatagram) -> send
    void setReceiveSize(int) -> setReceiveSize
    int getReceiveSize() -> getReceiveSize
    org.xsocket.datagram.UserDatagram receive() -> receive
    org.xsocket.datagram.UserDatagram receive(long) -> receive
    java.lang.String getId() -> getId
    java.lang.Object getOption(java.lang.String) -> getOption
    java.util.Map getOptions() -> getOptions
org.xsocket.datagram.IoSocketDispatcher -> org.xsocket.datagram.IoSocketDispatcher:
    java.util.logging.Logger LOG -> LOG
    java.lang.String DISPATCHER_PREFIX -> DISPATCHER_PREFIX
    long TIMEOUT_SHUTDOWN_MILLIS -> TIMEOUT_SHUTDOWN_MILLIS
    java.util.Queue registerQueue -> registerQueue
    java.util.Queue deregisterQueue -> deregisterQueue
    java.util.Queue keyUpdateQueue -> keyUpdateQueue
    boolean isOpen -> isOpen
    java.nio.channels.Selector selector -> selector
    long handledRegistractions -> handledRegistractions
    long handledReads -> handledReads
    long handledWrites -> handledWrites
    boolean $assertionsDisabled -> $assertionsDisabled
    void run() -> run
    void onReadableEvent(org.xsocket.datagram.AbstractChannelBasedEndpoint) -> onReadableEvent
    void onWriteableEvent(org.xsocket.datagram.AbstractChannelBasedEndpoint) -> onWriteableEvent
    void register(org.xsocket.datagram.AbstractChannelBasedEndpoint) -> register
    void deregister(org.xsocket.datagram.AbstractChannelBasedEndpoint) -> deregister
    void wakeUp() -> wakeUp
    void setSelectionKeyToReadImmediately(org.xsocket.datagram.AbstractChannelBasedEndpoint) -> setSelectionKeyToReadImmediately
    void setSelectionKeyToWriteImmediate(org.xsocket.datagram.AbstractChannelBasedEndpoint) -> setSelectionKeyToWriteImmediate
    void initiateRead(org.xsocket.datagram.AbstractChannelBasedEndpoint) -> initiateRead
    void initiateWrite(org.xsocket.datagram.AbstractChannelBasedEndpoint) -> initiateWrite
    int performRegisterHandlerTasks() -> performRegisterHandlerTasks
    int performKeyUpdateTasks() -> performKeyUpdateTasks
    int performDeregisterHandlerTasks() -> performDeregisterHandlerTasks
    java.util.Set getRegistered() -> getRegistered
    void closeDispatcher() -> closeDispatcher
    void close() -> close
    boolean isOpen() -> isOpen
    long getNumberOfHandledRegistrations() -> getNumberOfHandledRegistrations
    long getNumberOfHandledReads() -> getNumberOfHandledReads
    long getNumberOfHandledWrites() -> getNumberOfHandledWrites
    java.lang.String toString() -> toString
    void access$000(org.xsocket.datagram.IoSocketDispatcher,org.xsocket.datagram.AbstractChannelBasedEndpoint) -> access$000
    java.nio.channels.Selector access$100(org.xsocket.datagram.IoSocketDispatcher) -> access$100
    java.util.logging.Logger access$200() -> access$200
    boolean access$302(org.xsocket.datagram.IoSocketDispatcher,boolean) -> access$302
org.xsocket.datagram.IoSocketDispatcher$1 -> org.xsocket.datagram.IoSocketDispatcher$1:
    org.xsocket.datagram.AbstractChannelBasedEndpoint val$handler -> val$handler
    org.xsocket.datagram.IoSocketDispatcher this$0 -> this$0
    void run() -> run
org.xsocket.datagram.IoSocketDispatcher$2 -> org.xsocket.datagram.IoSocketDispatcher$2:
    org.xsocket.datagram.AbstractChannelBasedEndpoint val$handler -> val$handler
    org.xsocket.datagram.IoSocketDispatcher this$0 -> this$0
    void run() -> run
org.xsocket.datagram.IoSocketDispatcher$Closer -> org.xsocket.datagram.IoSocketDispatcher$Closer:
    int openConnections -> openConnections
    org.xsocket.datagram.IoSocketDispatcher this$0 -> this$0
    void run() -> run
org.xsocket.datagram.IoSocketDispatcher$KeyUpdateTask -> org.xsocket.datagram.IoSocketDispatcher$KeyUpdateTask:
    org.xsocket.datagram.AbstractChannelBasedEndpoint handler -> handler
    java.nio.channels.SelectionKey key -> key
    org.xsocket.datagram.IoSocketDispatcher this$0 -> this$0
    void init() -> init
    org.xsocket.datagram.AbstractChannelBasedEndpoint getHandler() -> getHandler
    java.nio.channels.SelectionKey getKey() -> getKey
    void run() -> run
org.xsocket.datagram.MemoryManager -> org.xsocket.datagram.MemoryManager:
    java.util.logging.Logger LOG -> LOG
    java.util.List memoryBuffer -> memoryBuffer
    boolean useDirectMemory -> useDirectMemory
    int preallocationSize -> preallocationSize
    int getFreeBufferSize() -> getFreeBufferSize
    void recycleMemory(java.nio.ByteBuffer) -> recycleMemory
    java.nio.ByteBuffer acquireMemory(int) -> acquireMemory
    int getPreallocationSize() -> getPreallocationSize
    java.nio.ByteBuffer newBuffer(int) -> newBuffer
org.xsocket.datagram.MulticastEndpoint -> org.xsocket.datagram.MulticastEndpoint:
    java.util.logging.Logger LOG -> LOG
    java.util.Map SUPPORTED_OPTIONS -> SUPPORTED_OPTIONS
    boolean isRunning -> isRunning
    java.net.MulticastSocket socket -> socket
    java.net.InetSocketAddress multicastAddress -> multicastAddress
    void startReceiver() -> startReceiver
    void receiveData() -> receiveData
    java.lang.String toString() -> toString
    void close() -> close
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    boolean isOpen() -> isOpen
    void send(org.xsocket.datagram.UserDatagram) -> send
    org.xsocket.datagram.MulticastEndpoint setOption(java.lang.String,java.lang.Object) -> setOption
    java.lang.Object getOption(java.lang.String) -> getOption
    java.util.Map getOptions() -> getOptions
    org.xsocket.datagram.UserDatagram receive() -> receive
    java.util.concurrent.Executor getWorkerpool() -> getWorkerpool
    boolean access$000(org.xsocket.datagram.MulticastEndpoint) -> access$000
    void access$100(org.xsocket.datagram.MulticastEndpoint) -> access$100
org.xsocket.datagram.MulticastEndpoint$1 -> org.xsocket.datagram.MulticastEndpoint$1:
    org.xsocket.datagram.MulticastEndpoint this$0 -> this$0
    void run() -> run
org.xsocket.datagram.UserDatagram -> org.xsocket.datagram.UserDatagram:
    java.net.SocketAddress remoteSocketAddress -> remoteSocketAddress
    java.nio.ByteBuffer data -> data
    java.lang.String defaultEncoding -> defaultEncoding
    void init(java.net.SocketAddress,java.nio.ByteBuffer) -> init
    void prepareForSend() -> prepareForSend
    void setRemoteAddress(java.net.SocketAddress) -> setRemoteAddress
    java.nio.ByteBuffer getData() -> getData
    java.lang.String getEncoding() -> getEncoding
    void setEncoding(java.lang.String) -> setEncoding
    java.net.SocketAddress getRemoteSocketAddress() -> getRemoteSocketAddress
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    byte readByte() -> readByte
    java.nio.ByteBuffer readSingleByteBufferByLength(int) -> readSingleByteBufferByLength
    byte[] readBytesByLength(int) -> readBytesByLength
    java.lang.String readStringByLength(int,java.lang.String) -> readStringByLength
    java.lang.String readStringByLength(int) -> readStringByLength
    double readDouble() -> readDouble
    int readInt() -> readInt
    short readShort() -> readShort
    long readLong() -> readLong
    java.nio.ByteBuffer readByteBuffer() -> readByteBuffer
    byte[] readBytes() -> readBytes
    java.lang.String readString() -> readString
    java.lang.String readString(java.lang.String) -> readString
    int read(java.nio.ByteBuffer) -> read
    java.lang.String readStringByDelimiter(java.lang.String) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,int) -> readStringByDelimiter
    java.lang.String readStringByDelimiter(java.lang.String,java.lang.String,int) -> readStringByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,int) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByDelimiter(java.lang.String,java.lang.String,int) -> readByteBufferByDelimiter
    java.nio.ByteBuffer[] readByteBufferByLength(int) -> readByteBufferByLength
    java.nio.ByteBuffer readSingleByteBufferByDelimiter(java.lang.String) -> readSingleByteBufferByDelimiter
    java.nio.ByteBuffer readSingleByteBufferByDelimiter(java.lang.String,java.lang.String) -> readSingleByteBufferByDelimiter
    java.nio.ByteBuffer readSingleByteBufferByDelimiter(java.lang.String,java.lang.String,int) -> readSingleByteBufferByDelimiter
    byte[] readBytesByDelimiter(java.lang.String) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,int) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String) -> readBytesByDelimiter
    byte[] readBytesByDelimiter(java.lang.String,java.lang.String,int) -> readBytesByDelimiter
    long transferTo(java.nio.channels.WritableByteChannel,int) -> transferTo
    int findDelimiter(java.nio.ByteBuffer,byte[],int) -> findDelimiter
    int write(byte) -> write
    int write(short) -> write
    int write(byte[]) -> write
    int write(byte[],int,int) -> write
    int write(java.nio.ByteBuffer) -> write
    long write(java.nio.ByteBuffer[]) -> write
    long write(java.nio.ByteBuffer[],int,int) -> write
    long write(java.util.List) -> write
    int write(double) -> write
    int write(int) -> write
    int write(long) -> write
    int write(java.lang.String) -> write
    int write(java.lang.String,java.lang.String) -> write
    long transferFrom(java.nio.channels.FileChannel) -> transferFrom
    long transferFrom(java.nio.channels.ReadableByteChannel) -> transferFrom
    long transferFrom(java.nio.channels.ReadableByteChannel,int) -> transferFrom
    int getSize() -> getSize
    int getRemaining() -> getRemaining
    java.lang.String toString() -> toString
u.aly.a -> a.a.a:
    int a -> a
    int b -> b
    java.lang.String c -> c
    java.util.List d -> d
    u.aly.ar e -> e
    boolean a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    boolean g() -> g
    u.aly.ar d() -> d
    java.util.List e() -> e
    void a(java.util.List) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String f() -> f
    void a(u.aly.as) -> a
u.aly.ac -> a.a.b:
    java.lang.String a(java.lang.Throwable) -> a
    void a(u.aly.bf,java.lang.String) -> a
u.aly.ae -> a.a.c:
    void a(org.json.JSONArray) -> a
u.aly.af -> a.a.d:
    void a(u.aly.bf,java.lang.String) -> a
u.aly.ag -> a.a.e:
    u.aly.ag a -> a
    u.aly.ag b -> b
    u.aly.ag c -> c
    u.aly.ag d -> d
    int e -> e
    u.aly.ag[] f -> f
    int a() -> a
    u.aly.ag a(int) -> a
    u.aly.ag[] values() -> values
    u.aly.ag valueOf(java.lang.String) -> valueOf
u.aly.ah -> a.a.f:
    u.aly.dd c -> c
    u.aly.ct d -> d
    java.util.Map e -> e
    long a -> a
    byte g -> f
    java.util.Map b -> b
    boolean e() -> a
    void a(boolean) -> a
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void f() -> b
    u.aly.dd h() -> c
    u.aly.ct i() -> d
u.aly.ah$a -> a.a.f$a:
    void a(u.aly.cy,u.aly.ah) -> a
    void b(u.aly.cy,u.aly.ah) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ah$b -> a.a.f$b:
    u.aly.ah$a a() -> a
    u.aly.dg b() -> b
u.aly.ah$c -> a.a.f$c:
    void a(u.aly.cy,u.aly.ah) -> a
    void b(u.aly.cy,u.aly.ah) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ah$d -> a.a.f$d:
    u.aly.ah$c a() -> a
    u.aly.dg b() -> b
u.aly.ah$e -> a.a.f$e:
    u.aly.ah$e a -> a
    java.util.Map b -> b
    short c -> c
    java.lang.String d -> d
    u.aly.ah$e[] e -> e
    short a() -> a
    java.lang.String b() -> b
    u.aly.ah$e[] values() -> values
    u.aly.ah$e valueOf(java.lang.String) -> valueOf
u.aly.ai -> a.a.g:
    u.aly.dd l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    java.util.Map w -> w
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    u.aly.bc e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    byte z -> x
    u.aly.ai$e[] A -> y
    java.util.Map k -> k
    u.aly.ai a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.ai b(java.lang.String) -> b
    boolean i() -> a
    void b(boolean) -> b
    u.aly.ai a(int) -> a
    boolean l() -> b
    void c(boolean) -> c
    u.aly.ai c(java.lang.String) -> c
    boolean o() -> c
    void d(boolean) -> d
    u.aly.ai a(u.aly.bc) -> a
    void e(boolean) -> e
    u.aly.ai d(java.lang.String) -> d
    void f(boolean) -> f
    u.aly.ai e(java.lang.String) -> e
    void g(boolean) -> g
    u.aly.ai f(java.lang.String) -> f
    boolean A() -> d
    void h(boolean) -> h
    u.aly.ai g(java.lang.String) -> g
    boolean D() -> e
    void i(boolean) -> i
    u.aly.ai c(int) -> b
    boolean G() -> f
    void j(boolean) -> j
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void H() -> g
    u.aly.dd I() -> h
    u.aly.ct J() -> i
    u.aly.ct K() -> j
    u.aly.ct L() -> k
    u.aly.ct M() -> l
    u.aly.ct N() -> m
    u.aly.ct O() -> n
    u.aly.ct P() -> o
    u.aly.ct Q() -> p
    u.aly.ct R() -> q
    u.aly.ct S() -> r
u.aly.ai$a -> a.a.g$a:
    void a(u.aly.cy,u.aly.ai) -> a
    void b(u.aly.cy,u.aly.ai) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ai$b -> a.a.g$b:
    u.aly.ai$a a() -> a
    u.aly.dg b() -> b
u.aly.ai$c -> a.a.g$c:
    void a(u.aly.cy,u.aly.ai) -> a
    void b(u.aly.cy,u.aly.ai) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ai$d -> a.a.g$d:
    u.aly.ai$c a() -> a
    u.aly.dg b() -> b
u.aly.ai$e -> a.a.g$e:
    u.aly.ai$e a -> a
    u.aly.ai$e b -> b
    u.aly.ai$e c -> c
    u.aly.ai$e d -> d
    u.aly.ai$e e -> e
    u.aly.ai$e f -> f
    u.aly.ai$e g -> g
    u.aly.ai$e h -> h
    u.aly.ai$e i -> i
    u.aly.ai$e j -> j
    java.util.Map k -> k
    short l -> l
    java.lang.String m -> m
    u.aly.ai$e[] n -> n
    short a() -> a
    java.lang.String b() -> b
    u.aly.ai$e[] values() -> values
    u.aly.ai$e valueOf(java.lang.String) -> valueOf
u.aly.aj -> a.a.h:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    int a -> a
    int b -> b
    int c -> c
    byte m -> j
    u.aly.aj$e[] n -> k
    java.util.Map d -> d
    u.aly.aj a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.aj c(int) -> b
    boolean i() -> b
    void b(boolean) -> b
    u.aly.aj d(int) -> c
    boolean l() -> c
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> d
    u.aly.dd n() -> e
    u.aly.ct o() -> f
    u.aly.ct p() -> g
    u.aly.ct q() -> h
u.aly.aj$a -> a.a.h$a:
    void a(u.aly.cy,u.aly.aj) -> a
    void b(u.aly.cy,u.aly.aj) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aj$b -> a.a.h$b:
    u.aly.aj$a a() -> a
    u.aly.dg b() -> b
u.aly.aj$c -> a.a.h$c:
    void a(u.aly.cy,u.aly.aj) -> a
    void b(u.aly.cy,u.aly.aj) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aj$d -> a.a.h$d:
    u.aly.aj$c a() -> a
    u.aly.dg b() -> b
u.aly.aj$e -> a.a.h$e:
    u.aly.aj$e a -> a
    u.aly.aj$e b -> b
    u.aly.aj$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.aj$e[] g -> g
    short a() -> a
    java.lang.String b() -> b
    u.aly.aj$e[] values() -> values
    u.aly.aj$e valueOf(java.lang.String) -> valueOf
u.aly.ak -> a.a.i:
    u.aly.dd s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    u.aly.ct w -> w
    u.aly.ct x -> x
    u.aly.ct y -> y
    u.aly.ct z -> z
    u.aly.ct A -> A
    u.aly.ct B -> B
    u.aly.ct C -> C
    u.aly.ct D -> D
    u.aly.ct E -> E
    u.aly.ct F -> F
    u.aly.ct G -> G
    u.aly.ct H -> H
    u.aly.ct I -> I
    u.aly.ct J -> J
    java.util.Map K -> K
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    u.aly.ba i -> i
    boolean j -> j
    boolean k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    long n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    byte O -> L
    u.aly.ak$e[] P -> M
    java.util.Map r -> r
    u.aly.ak a(java.lang.String) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.ak b(java.lang.String) -> b
    boolean i() -> b
    void b(boolean) -> b
    u.aly.ak c(java.lang.String) -> c
    boolean l() -> c
    void c(boolean) -> c
    boolean o() -> d
    void d(boolean) -> d
    u.aly.ak e(java.lang.String) -> d
    boolean r() -> e
    void e(boolean) -> e
    u.aly.ak f(java.lang.String) -> e
    boolean u() -> f
    void f(boolean) -> f
    u.aly.ak g(java.lang.String) -> f
    boolean x() -> g
    void g(boolean) -> g
    u.aly.ak h(java.lang.String) -> g
    boolean A() -> h
    void h(boolean) -> h
    u.aly.ak a(u.aly.ba) -> a
    boolean D() -> i
    void i(boolean) -> i
    boolean G() -> j
    void k(boolean) -> j
    boolean J() -> k
    void m(boolean) -> k
    u.aly.ak i(java.lang.String) -> h
    boolean M() -> l
    void n(boolean) -> l
    u.aly.ak j(java.lang.String) -> i
    boolean P() -> m
    void o(boolean) -> m
    u.aly.ak a(long) -> a
    boolean S() -> n
    void p(boolean) -> n
    u.aly.ak k(java.lang.String) -> j
    boolean V() -> o
    void q(boolean) -> o
    u.aly.ak l(java.lang.String) -> k
    boolean Y() -> p
    void r(boolean) -> p
    u.aly.ak m(java.lang.String) -> l
    boolean ab() -> q
    void s(boolean) -> q
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void ac() -> r
    u.aly.dd ad() -> s
    u.aly.ct ae() -> t
    u.aly.ct af() -> u
    u.aly.ct ag() -> v
    u.aly.ct ah() -> w
    u.aly.ct ai() -> x
    u.aly.ct aj() -> y
    u.aly.ct ak() -> z
    u.aly.ct al() -> A
    u.aly.ct am() -> B
    u.aly.ct an() -> C
    u.aly.ct ao() -> D
    u.aly.ct ap() -> E
    u.aly.ct aq() -> F
    u.aly.ct ar() -> G
    u.aly.ct as() -> H
    u.aly.ct at() -> I
    u.aly.ct au() -> J
u.aly.ak$a -> a.a.i$a:
    void a(u.aly.cy,u.aly.ak) -> a
    void b(u.aly.cy,u.aly.ak) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ak$b -> a.a.i$b:
    u.aly.ak$a a() -> a
    u.aly.dg b() -> b
u.aly.ak$c -> a.a.i$c:
    void a(u.aly.cy,u.aly.ak) -> a
    void b(u.aly.cy,u.aly.ak) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ak$d -> a.a.i$d:
    u.aly.ak$c a() -> a
    u.aly.dg b() -> b
u.aly.ak$e -> a.a.i$e:
    u.aly.ak$e a -> a
    u.aly.ak$e b -> b
    u.aly.ak$e c -> c
    u.aly.ak$e d -> d
    u.aly.ak$e e -> e
    u.aly.ak$e f -> f
    u.aly.ak$e g -> g
    u.aly.ak$e h -> h
    u.aly.ak$e i -> i
    u.aly.ak$e j -> j
    u.aly.ak$e k -> k
    u.aly.ak$e l -> l
    u.aly.ak$e m -> m
    u.aly.ak$e n -> n
    u.aly.ak$e o -> o
    u.aly.ak$e p -> p
    u.aly.ak$e q -> q
    java.util.Map r -> r
    short s -> s
    java.lang.String t -> t
    u.aly.ak$e[] u -> u
    short a() -> a
    java.lang.String b() -> b
    u.aly.ak$e[] values() -> values
    u.aly.ak$e valueOf(java.lang.String) -> valueOf
u.aly.am -> a.a.j:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    long a -> a
    java.lang.String b -> b
    u.aly.an c -> c
    byte k -> j
    u.aly.am$e[] l -> k
    java.util.Map d -> d
    u.aly.am a(long) -> a
    boolean e() -> a
    void b(boolean) -> a
    u.aly.am a(java.lang.String) -> a
    void c(boolean) -> b
    u.aly.am a(u.aly.an) -> a
    boolean l() -> b
    void d(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> c
    u.aly.dd n() -> d
    u.aly.ct o() -> e
    u.aly.ct p() -> f
    u.aly.ct q() -> g
u.aly.am$a -> a.a.j$a:
    void a(u.aly.cy,u.aly.am) -> a
    void b(u.aly.cy,u.aly.am) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.am$b -> a.a.j$b:
    u.aly.am$a a() -> a
    u.aly.dg b() -> b
u.aly.am$c -> a.a.j$c:
    void a(u.aly.cy,u.aly.am) -> a
    void b(u.aly.cy,u.aly.am) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.am$d -> a.a.j$d:
    u.aly.am$c a() -> a
    u.aly.dg b() -> b
u.aly.am$e -> a.a.j$e:
    u.aly.am$e a -> a
    u.aly.am$e b -> b
    u.aly.am$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.am$e[] g -> g
    short a() -> a
    java.lang.String b() -> b
    u.aly.am$e[] values() -> values
    u.aly.am$e valueOf(java.lang.String) -> valueOf
u.aly.an -> a.a.k:
    u.aly.an a -> a
    u.aly.an b -> b
    int c -> c
    u.aly.an[] d -> d
    int a() -> a
    u.aly.an a(int) -> a
    u.aly.an[] values() -> values
    u.aly.an valueOf(java.lang.String) -> valueOf
u.aly.ao -> a.a.l:
    u.aly.dd g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    u.aly.ct k -> k
    u.aly.ct l -> l
    java.util.Map m -> m
    java.lang.String a -> a
    java.util.Map b -> b
    long c -> c
    int d -> d
    long e -> e
    byte q -> n
    u.aly.ao$e[] r -> o
    java.util.Map f -> f
    void a(boolean) -> a
    void b(boolean) -> b
    boolean m() -> a
    void c(boolean) -> c
    boolean p() -> b
    void d(boolean) -> d
    boolean s() -> c
    void e(boolean) -> e
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void t() -> d
    u.aly.dd u() -> e
    u.aly.ct v() -> f
    u.aly.ct w() -> g
    u.aly.ct x() -> h
    u.aly.ct y() -> i
    u.aly.ct z() -> j
u.aly.ao$a -> a.a.l$a:
    void a(u.aly.cy,u.aly.ao) -> a
    void b(u.aly.cy,u.aly.ao) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ao$b -> a.a.l$b:
    u.aly.ao$a a() -> a
    u.aly.dg b() -> b
u.aly.ao$c -> a.a.l$c:
    void a(u.aly.cy,u.aly.ao) -> a
    void b(u.aly.cy,u.aly.ao) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ao$d -> a.a.l$d:
    u.aly.ao$c a() -> a
    u.aly.dg b() -> b
u.aly.ao$e -> a.a.l$e:
    u.aly.ao$e a -> a
    u.aly.ao$e b -> b
    u.aly.ao$e c -> c
    u.aly.ao$e d -> d
    u.aly.ao$e e -> e
    java.util.Map f -> f
    short g -> g
    java.lang.String h -> h
    u.aly.ao$e[] i -> i
    short a() -> a
    java.lang.String b() -> b
    u.aly.ao$e[] values() -> values
    u.aly.ao$e valueOf(java.lang.String) -> valueOf
u.aly.ap -> a.a.m:
    u.aly.ap a -> a
    u.aly.ap b -> b
    u.aly.ap c -> c
    int d -> d
    u.aly.ap[] e -> e
    int a() -> a
    u.aly.ap a(int) -> a
    u.aly.ap[] values() -> values
    u.aly.ap valueOf(java.lang.String) -> valueOf
u.aly.aq -> a.a.n:
    u.aly.dd f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    byte m -> l
    u.aly.aq$e[] n -> m
    java.util.Map e -> e
    u.aly.aq a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.aq b(java.lang.String) -> b
    boolean i() -> a
    void b(boolean) -> b
    u.aly.aq c(java.lang.String) -> c
    void c(boolean) -> c
    u.aly.aq a(long) -> a
    boolean o() -> b
    void d(boolean) -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void p() -> c
    u.aly.dd q() -> d
    u.aly.ct r() -> e
    u.aly.ct s() -> f
    u.aly.ct t() -> g
    u.aly.ct u() -> h
u.aly.aq$a -> a.a.n$a:
    void a(u.aly.cy,u.aly.aq) -> a
    void b(u.aly.cy,u.aly.aq) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aq$b -> a.a.n$b:
    u.aly.aq$a a() -> a
    u.aly.dg b() -> b
u.aly.aq$c -> a.a.n$c:
    void a(u.aly.cy,u.aly.aq) -> a
    void b(u.aly.cy,u.aly.aq) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aq$d -> a.a.n$d:
    u.aly.aq$c a() -> a
    u.aly.dg b() -> b
u.aly.aq$e -> a.a.n$e:
    u.aly.aq$e a -> a
    u.aly.aq$e b -> b
    u.aly.aq$e c -> c
    u.aly.aq$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.aq$e[] h -> h
    short a() -> a
    java.lang.String b() -> b
    u.aly.aq$e[] values() -> values
    u.aly.aq$e valueOf(java.lang.String) -> valueOf
u.aly.ar -> a.a.o:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    int c -> c
    byte l -> j
    java.util.Map d -> d
    java.lang.String c() -> a
    u.aly.ar a(java.lang.String) -> a
    void a(boolean) -> a
    long f() -> b
    u.aly.ar a(long) -> a
    boolean i() -> c
    void b(boolean) -> b
    int j() -> d
    u.aly.ar a(int) -> a
    boolean l() -> e
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dd n() -> g
    u.aly.ct o() -> h
    u.aly.ct p() -> i
    u.aly.ct q() -> j
u.aly.ar$a -> a.a.o$a:
    void a(u.aly.cy,u.aly.ar) -> a
    void b(u.aly.cy,u.aly.ar) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ar$b -> a.a.o$b:
    u.aly.ar$a a() -> a
    u.aly.dg b() -> b
u.aly.ar$c -> a.a.o$c:
    void a(u.aly.cy,u.aly.ar) -> a
    void b(u.aly.cy,u.aly.ar) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ar$d -> a.a.o$d:
    u.aly.ar$c a() -> a
    u.aly.dg b() -> b
u.aly.ar$e -> a.a.o$e:
    u.aly.ar$e a -> a
    u.aly.ar$e b -> b
    u.aly.ar$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.ar$e[] g -> g
    short a() -> a
    java.lang.String b() -> b
    u.aly.ar$e[] values() -> values
    u.aly.ar$e valueOf(java.lang.String) -> valueOf
u.aly.as -> a.a.p:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    java.util.List b -> b
    java.lang.String c -> c
    u.aly.as$e[] j -> j
    java.util.Map d -> d
    java.util.Map d() -> a
    u.aly.as a(java.util.Map) -> a
    void a(boolean) -> a
    java.util.List j() -> b
    u.aly.as a(java.util.List) -> a
    boolean l() -> c
    void b(boolean) -> b
    boolean o() -> d
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void p() -> e
    u.aly.dd q() -> f
    u.aly.ct r() -> g
    u.aly.ct s() -> h
    u.aly.ct t() -> i
u.aly.as$a -> a.a.p$a:
    void a(u.aly.cy,u.aly.as) -> a
    void b(u.aly.cy,u.aly.as) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.as$b -> a.a.p$b:
    u.aly.as$a a() -> a
    u.aly.dg b() -> b
u.aly.as$c -> a.a.p$c:
    void a(u.aly.cy,u.aly.as) -> a
    void b(u.aly.cy,u.aly.as) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.as$d -> a.a.p$d:
    u.aly.as$c a() -> a
    u.aly.dg b() -> b
u.aly.as$e -> a.a.p$e:
    u.aly.as$e a -> a
    u.aly.as$e b -> b
    u.aly.as$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.as$e[] g -> g
    short a() -> a
    java.lang.String b() -> b
    u.aly.as$e[] values() -> values
    u.aly.as$e valueOf(java.lang.String) -> valueOf
u.aly.at -> a.a.q:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.util.Map a -> a
    int b -> b
    java.lang.String c -> c
    byte k -> j
    java.util.Map d -> d
    java.util.Map d() -> a
    void a(boolean) -> a
    int h() -> b
    u.aly.at a(int) -> a
    boolean j() -> c
    void b(boolean) -> b
    java.lang.String k() -> d
    u.aly.at a(java.lang.String) -> a
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void n() -> e
    u.aly.dd o() -> f
    u.aly.ct p() -> g
    u.aly.ct q() -> h
    u.aly.ct r() -> i
u.aly.at$a -> a.a.q$a:
    void a(u.aly.cy,u.aly.at) -> a
    void b(u.aly.cy,u.aly.at) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.at$b -> a.a.q$b:
    u.aly.at$a a() -> a
    u.aly.dg b() -> b
u.aly.at$c -> a.a.q$c:
    void a(u.aly.cy,u.aly.at) -> a
    void b(u.aly.cy,u.aly.at) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.at$d -> a.a.q$d:
    u.aly.at$c a() -> a
    u.aly.dg b() -> b
u.aly.at$e -> a.a.q$e:
    u.aly.at$e a -> a
    u.aly.at$e b -> b
    u.aly.at$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.at$e[] g -> g
    short a() -> a
    java.lang.String b() -> b
    u.aly.at$e[] values() -> values
    u.aly.at$e valueOf(java.lang.String) -> valueOf
u.aly.au -> a.a.r:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    java.lang.String a -> a
    long b -> b
    java.lang.String c -> c
    byte k -> j
    u.aly.au$e[] l -> k
    java.util.Map d -> d
    java.lang.String c() -> a
    boolean e() -> b
    void a(boolean) -> a
    long f() -> c
    boolean i() -> d
    void b(boolean) -> b
    java.lang.String j() -> e
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dd n() -> g
    u.aly.ct o() -> h
    u.aly.ct p() -> i
    u.aly.ct q() -> j
u.aly.au$a -> a.a.r$a:
    void a(u.aly.cy,u.aly.au) -> a
    void b(u.aly.cy,u.aly.au) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.au$b -> a.a.r$b:
    u.aly.au$a a() -> a
    u.aly.dg b() -> b
u.aly.au$c -> a.a.r$c:
    void a(u.aly.cy,u.aly.au) -> a
    void b(u.aly.cy,u.aly.au) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.au$d -> a.a.r$d:
    u.aly.au$c a() -> a
    u.aly.dg b() -> b
u.aly.au$e -> a.a.r$e:
    u.aly.au$e a -> a
    u.aly.au$e b -> b
    u.aly.au$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.au$e[] g -> g
    short a() -> a
    java.lang.String b() -> b
    u.aly.au$e[] values() -> values
    u.aly.au$e valueOf(java.lang.String) -> valueOf
u.aly.av -> a.a.s:
    u.aly.dd f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    java.util.Map k -> k
    java.lang.String a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    u.aly.av$e[] l -> l
    java.util.Map e -> e
    java.lang.String c() -> a
    u.aly.av a(java.lang.String) -> a
    void a(boolean) -> a
    void a(u.aly.am) -> a
    boolean k() -> b
    void b(boolean) -> b
    boolean p() -> c
    void c(boolean) -> c
    boolean u() -> d
    void d(boolean) -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void v() -> e
    u.aly.dd w() -> f
    u.aly.ct x() -> g
    u.aly.ct y() -> h
    u.aly.ct z() -> i
    u.aly.ct A() -> j
u.aly.av$a -> a.a.s$a:
    void a(u.aly.cy,u.aly.av) -> a
    void b(u.aly.cy,u.aly.av) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.av$b -> a.a.s$b:
    u.aly.av$a a() -> a
    u.aly.dg b() -> b
u.aly.av$c -> a.a.s$c:
    void a(u.aly.cy,u.aly.av) -> a
    void b(u.aly.cy,u.aly.av) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.av$d -> a.a.s$d:
    u.aly.av$c a() -> a
    u.aly.dg b() -> b
u.aly.av$e -> a.a.s$e:
    u.aly.av$e a -> a
    u.aly.av$e b -> b
    u.aly.av$e c -> c
    u.aly.av$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.av$e[] h -> h
    short a() -> a
    java.lang.String b() -> b
    u.aly.av$e[] values() -> values
    u.aly.av$e valueOf(java.lang.String) -> valueOf
u.aly.aw -> a.a.t:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    double a -> a
    double b -> b
    long c -> c
    byte m -> j
    java.util.Map d -> d
    boolean e() -> a
    void a(boolean) -> a
    boolean i() -> b
    void b(boolean) -> b
    boolean l() -> c
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> d
    u.aly.dd n() -> e
    u.aly.ct o() -> f
    u.aly.ct p() -> g
    u.aly.ct q() -> h
u.aly.aw$a -> a.a.t$a:
    void a(u.aly.cy,u.aly.aw) -> a
    void b(u.aly.cy,u.aly.aw) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aw$b -> a.a.t$b:
    u.aly.aw$a a() -> a
    u.aly.dg b() -> b
u.aly.aw$c -> a.a.t$c:
    void a(u.aly.cy,u.aly.aw) -> a
    void b(u.aly.cy,u.aly.aw) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.aw$d -> a.a.t$d:
    u.aly.aw$c a() -> a
    u.aly.dg b() -> b
u.aly.aw$e -> a.a.t$e:
    u.aly.aw$e a -> a
    u.aly.aw$e b -> b
    u.aly.aw$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.aw$e[] g -> g
    short a() -> a
    java.lang.String b() -> b
    u.aly.aw$e[] values() -> values
    u.aly.aw$e valueOf(java.lang.String) -> valueOf
u.aly.ax -> a.a.u:
    u.aly.dd m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    u.aly.ct u -> u
    u.aly.ct v -> v
    u.aly.ct w -> w
    u.aly.ct x -> x
    java.util.Map y -> y
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    double d -> d
    double e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    u.aly.ag i -> i
    java.lang.String j -> j
    u.aly.bg k -> k
    byte D -> z
    u.aly.ax$e[] E -> A
    java.util.Map l -> l
    u.aly.ax a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.ax a(java.lang.String) -> a
    boolean i() -> b
    void b(boolean) -> b
    u.aly.ax b(java.lang.String) -> b
    boolean l() -> c
    void c(boolean) -> c
    boolean o() -> d
    void d(boolean) -> d
    boolean r() -> e
    void e(boolean) -> e
    u.aly.ax c(java.lang.String) -> c
    boolean u() -> f
    void f(boolean) -> f
    boolean x() -> g
    void g(boolean) -> g
    boolean A() -> h
    void h(boolean) -> h
    u.aly.ax a(u.aly.ag) -> a
    boolean D() -> i
    void i(boolean) -> i
    u.aly.ax e(java.lang.String) -> d
    boolean G() -> j
    void j(boolean) -> j
    u.aly.ax a(u.aly.bg) -> a
    boolean J() -> k
    void k(boolean) -> k
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void K() -> l
    u.aly.dd L() -> m
    u.aly.ct M() -> n
    u.aly.ct N() -> o
    u.aly.ct O() -> p
    u.aly.ct P() -> q
    u.aly.ct Q() -> r
    u.aly.ct R() -> s
    u.aly.ct S() -> t
    u.aly.ct T() -> u
    u.aly.ct U() -> v
    u.aly.ct V() -> w
    u.aly.ct W() -> x
u.aly.ax$a -> a.a.u$a:
    void a(u.aly.cy,u.aly.ax) -> a
    void b(u.aly.cy,u.aly.ax) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ax$b -> a.a.u$b:
    u.aly.ax$a a() -> a
    u.aly.dg b() -> b
u.aly.ax$c -> a.a.u$c:
    void a(u.aly.cy,u.aly.ax) -> a
    void b(u.aly.cy,u.aly.ax) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ax$d -> a.a.u$d:
    u.aly.ax$c a() -> a
    u.aly.dg b() -> b
u.aly.ax$e -> a.a.u$e:
    u.aly.ax$e a -> a
    u.aly.ax$e b -> b
    u.aly.ax$e c -> c
    u.aly.ax$e d -> d
    u.aly.ax$e e -> e
    u.aly.ax$e f -> f
    u.aly.ax$e g -> g
    u.aly.ax$e h -> h
    u.aly.ax$e i -> i
    u.aly.ax$e j -> j
    u.aly.ax$e k -> k
    java.util.Map l -> l
    short m -> m
    java.lang.String n -> n
    u.aly.ax$e[] o -> o
    short a() -> a
    java.lang.String b() -> b
    u.aly.ax$e[] values() -> values
    u.aly.ax$e valueOf(java.lang.String) -> valueOf
u.aly.ay -> a.a.v:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    java.lang.String a -> a
    long b -> b
    byte i -> h
    java.util.Map c -> c
    u.aly.ay a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.ay a(long) -> a
    boolean i() -> a
    void b(boolean) -> b
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> b
    u.aly.dd k() -> c
    u.aly.ct l() -> d
    u.aly.ct m() -> e
u.aly.ay$a -> a.a.v$a:
    void a(u.aly.cy,u.aly.ay) -> a
    void b(u.aly.cy,u.aly.ay) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ay$b -> a.a.v$b:
    u.aly.ay$a a() -> a
    u.aly.dg b() -> b
u.aly.ay$c -> a.a.v$c:
    void a(u.aly.cy,u.aly.ay) -> a
    void b(u.aly.cy,u.aly.ay) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ay$d -> a.a.v$d:
    u.aly.ay$c a() -> a
    u.aly.dg b() -> b
u.aly.ay$e -> a.a.v$e:
    u.aly.ay$e a -> a
    u.aly.ay$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.ay$e[] f -> f
    short a() -> a
    java.lang.String b() -> b
    u.aly.ay$e[] values() -> values
    u.aly.ay$e valueOf(java.lang.String) -> valueOf
u.aly.az -> a.a.w:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map a -> a
    int[] g -> g
    java.lang.Object a(u.aly.cy,u.aly.ct) -> a
    void c(u.aly.cy) -> c
    java.lang.Object a(u.aly.cy,short) -> a
    void d(u.aly.cy) -> d
    u.aly.ct a(u.aly.az$a) -> a
    u.aly.dd c() -> a
    u.aly.az$a a(short) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(u.aly.az) -> a
    int hashCode() -> hashCode
    u.aly.ct a(u.aly.cg) -> a
    u.aly.cg b(short) -> b
    int[] i() -> b
u.aly.az$a -> a.a.w$a:
    u.aly.az$a a -> a
    u.aly.az$a b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.az$a[] f -> f
    u.aly.az$a a(int) -> a
    u.aly.az$a b(int) -> b
    short a() -> a
    java.lang.String b() -> b
    u.aly.az$a[] values() -> values
    u.aly.az$a valueOf(java.lang.String) -> valueOf
u.aly.b -> a.a.x:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.ba -> a.a.y:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    boolean e() -> a
    void a(boolean) -> a
    boolean i() -> b
    void b(boolean) -> b
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> c
    u.aly.dd k() -> d
    u.aly.ct l() -> e
    u.aly.ct m() -> f
u.aly.ba$a -> a.a.y$a:
    void a(u.aly.cy,u.aly.ba) -> a
    void b(u.aly.cy,u.aly.ba) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ba$b -> a.a.y$b:
    u.aly.ba$a a() -> a
    u.aly.dg b() -> b
u.aly.ba$c -> a.a.y$c:
    void a(u.aly.cy,u.aly.ba) -> a
    void b(u.aly.cy,u.aly.ba) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.ba$d -> a.a.y$d:
    u.aly.ba$c a() -> a
    u.aly.dg b() -> b
u.aly.ba$e -> a.a.y$e:
    u.aly.ba$e a -> a
    u.aly.ba$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.ba$e[] f -> f
    short a() -> a
    java.lang.String b() -> b
    u.aly.ba$e[] values() -> values
    u.aly.ba$e valueOf(java.lang.String) -> valueOf
u.aly.bb -> a.a.z:
    u.aly.dd e -> e
    u.aly.ct f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    java.util.Map i -> i
    int a -> a
    java.lang.String b -> b
    u.aly.at c -> c
    byte k -> j
    u.aly.bb$e[] l -> k
    java.util.Map d -> d
    boolean e() -> a
    void a(boolean) -> a
    java.lang.String f() -> b
    boolean i() -> c
    void b(boolean) -> b
    u.aly.at j() -> d
    boolean l() -> e
    void c(boolean) -> c
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void m() -> f
    u.aly.dd n() -> g
    u.aly.ct o() -> h
    u.aly.ct p() -> i
    u.aly.ct q() -> j
u.aly.bb$a -> a.a.z$a:
    void a(u.aly.cy,u.aly.bb) -> a
    void b(u.aly.cy,u.aly.bb) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bb$b -> a.a.z$b:
    u.aly.bb$a a() -> a
    u.aly.dg b() -> b
u.aly.bb$c -> a.a.z$c:
    void a(u.aly.cy,u.aly.bb) -> a
    void b(u.aly.cy,u.aly.bb) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bb$d -> a.a.z$d:
    u.aly.bb$c a() -> a
    u.aly.dg b() -> b
u.aly.bb$e -> a.a.z$e:
    u.aly.bb$e a -> a
    u.aly.bb$e b -> b
    u.aly.bb$e c -> c
    java.util.Map d -> d
    short e -> e
    java.lang.String f -> f
    u.aly.bb$e[] g -> g
    short a() -> a
    java.lang.String b() -> b
    u.aly.bb$e[] values() -> values
    u.aly.bb$e valueOf(java.lang.String) -> valueOf
u.aly.bc -> a.a.aa:
    u.aly.bc a -> a
    u.aly.bc b -> b
    u.aly.bc c -> c
    u.aly.bc d -> d
    int e -> e
    u.aly.bc[] f -> f
    int a() -> a
    u.aly.bc a(int) -> a
    u.aly.bc[] values() -> values
    u.aly.bc valueOf(java.lang.String) -> valueOf
u.aly.bd -> a.a.ab:
    u.aly.dd i -> i
    u.aly.ct j -> j
    u.aly.ct k -> k
    u.aly.ct l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    java.util.Map q -> q
    java.lang.String a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.List e -> e
    java.util.List f -> f
    u.aly.be g -> g
    byte u -> r
    u.aly.bd$e[] v -> s
    java.util.Map h -> h
    u.aly.bd a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.bd a(long) -> a
    boolean i() -> a
    void b(boolean) -> b
    u.aly.bd b(long) -> b
    boolean l() -> b
    void c(boolean) -> c
    u.aly.bd c(long) -> c
    boolean o() -> c
    void d(boolean) -> d
    int p() -> d
    u.aly.bd a(java.util.List) -> a
    boolean t() -> e
    void e(boolean) -> e
    void a(u.aly.aw) -> a
    u.aly.bd b(java.util.List) -> b
    boolean y() -> f
    void f(boolean) -> f
    u.aly.bd a(u.aly.be) -> a
    boolean B() -> g
    void g(boolean) -> g
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void C() -> h
    u.aly.dd D() -> i
    u.aly.ct E() -> j
    u.aly.ct F() -> k
    u.aly.ct G() -> l
    u.aly.ct H() -> m
    u.aly.ct I() -> n
    u.aly.ct J() -> o
    u.aly.ct K() -> p
u.aly.bd$a -> a.a.ab$a:
    void a(u.aly.cy,u.aly.bd) -> a
    void b(u.aly.cy,u.aly.bd) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bd$b -> a.a.ab$b:
    u.aly.bd$a a() -> a
    u.aly.dg b() -> b
u.aly.bd$c -> a.a.ab$c:
    void a(u.aly.cy,u.aly.bd) -> a
    void b(u.aly.cy,u.aly.bd) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bd$d -> a.a.ab$d:
    u.aly.bd$c a() -> a
    u.aly.dg b() -> b
u.aly.bd$e -> a.a.ab$e:
    u.aly.bd$e a -> a
    u.aly.bd$e b -> b
    u.aly.bd$e c -> c
    u.aly.bd$e d -> d
    u.aly.bd$e e -> e
    u.aly.bd$e f -> f
    u.aly.bd$e g -> g
    java.util.Map h -> h
    short i -> i
    java.lang.String j -> j
    u.aly.bd$e[] k -> k
    short a() -> a
    java.lang.String b() -> b
    u.aly.bd$e[] values() -> values
    u.aly.bd$e valueOf(java.lang.String) -> valueOf
u.aly.be -> a.a.ac:
    u.aly.dd d -> d
    u.aly.ct e -> e
    u.aly.ct f -> f
    java.util.Map g -> g
    int a -> a
    int b -> b
    byte j -> h
    java.util.Map c -> c
    u.aly.be a(int) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.be c(int) -> b
    boolean i() -> b
    void b(boolean) -> b
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void j() -> c
    u.aly.dd k() -> d
    u.aly.ct l() -> e
    u.aly.ct m() -> f
u.aly.be$a -> a.a.ac$a:
    void a(u.aly.cy,u.aly.be) -> a
    void b(u.aly.cy,u.aly.be) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.be$b -> a.a.ac$b:
    u.aly.be$a a() -> a
    u.aly.dg b() -> b
u.aly.be$c -> a.a.ac$c:
    void a(u.aly.cy,u.aly.be) -> a
    void b(u.aly.cy,u.aly.be) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.be$d -> a.a.ac$d:
    u.aly.be$c a() -> a
    u.aly.dg b() -> b
u.aly.be$e -> a.a.ac$e:
    u.aly.be$e a -> a
    u.aly.be$e b -> b
    java.util.Map c -> c
    short d -> d
    java.lang.String e -> e
    u.aly.be$e[] f -> f
    short a() -> a
    java.lang.String b() -> b
    u.aly.be$e[] values() -> values
    u.aly.be$e valueOf(java.lang.String) -> valueOf
u.aly.bf -> a.a.ad:
    u.aly.dd k -> k
    u.aly.ct l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    java.util.Map u -> u
    u.aly.aj a -> a
    u.aly.ai b -> b
    u.aly.ak c -> c
    u.aly.ax d -> d
    u.aly.ah e -> e
    java.util.List f -> f
    java.util.List g -> g
    u.aly.at h -> h
    u.aly.as i -> i
    u.aly.bf$e[] v -> v
    java.util.Map j -> j
    u.aly.bf a(u.aly.aj) -> a
    void a(boolean) -> a
    u.aly.bf a(u.aly.ai) -> a
    void b(boolean) -> b
    u.aly.bf a(u.aly.ak) -> a
    void c(boolean) -> c
    u.aly.bf a(u.aly.ax) -> a
    void d(boolean) -> d
    u.aly.bf a(u.aly.ah) -> a
    boolean r() -> a
    void e(boolean) -> e
    int s() -> b
    void a(u.aly.av) -> a
    java.util.List u() -> c
    boolean w() -> d
    void f(boolean) -> f
    void a(u.aly.bd) -> a
    java.util.List z() -> e
    boolean B() -> f
    void g(boolean) -> g
    u.aly.bf a(u.aly.at) -> a
    boolean E() -> g
    void h(boolean) -> h
    u.aly.bf a(u.aly.as) -> a
    boolean H() -> h
    void i(boolean) -> i
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void I() -> i
    u.aly.dd J() -> j
    u.aly.ct K() -> k
    u.aly.ct L() -> l
    u.aly.ct M() -> m
    u.aly.ct N() -> n
    u.aly.ct O() -> o
    u.aly.ct P() -> p
    u.aly.ct Q() -> q
    u.aly.ct R() -> r
    u.aly.ct S() -> s
u.aly.bf$a -> a.a.ad$a:
    void a(u.aly.cy,u.aly.bf) -> a
    void b(u.aly.cy,u.aly.bf) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bf$b -> a.a.ad$b:
    u.aly.bf$a a() -> a
    u.aly.dg b() -> b
u.aly.bf$c -> a.a.ad$c:
    void a(u.aly.cy,u.aly.bf) -> a
    void b(u.aly.cy,u.aly.bf) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bf$d -> a.a.ad$d:
    u.aly.bf$c a() -> a
    u.aly.dg b() -> b
u.aly.bf$e -> a.a.ad$e:
    u.aly.bf$e a -> a
    u.aly.bf$e b -> b
    u.aly.bf$e c -> c
    u.aly.bf$e d -> d
    u.aly.bf$e e -> e
    u.aly.bf$e f -> f
    u.aly.bf$e g -> g
    u.aly.bf$e h -> h
    u.aly.bf$e i -> i
    java.util.Map j -> j
    short k -> k
    java.lang.String l -> l
    u.aly.bf$e[] m -> m
    short a() -> a
    java.lang.String b() -> b
    u.aly.bf$e[] values() -> values
    u.aly.bf$e valueOf(java.lang.String) -> valueOf
u.aly.bg -> a.a.ae:
    u.aly.dd f -> f
    u.aly.ct g -> g
    u.aly.ct h -> h
    u.aly.ct i -> i
    u.aly.ct j -> j
    java.util.Map k -> k
    u.aly.ap a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    byte m -> l
    u.aly.bg$e[] n -> m
    java.util.Map e -> e
    u.aly.bg a(u.aly.ap) -> a
    boolean e() -> a
    void a(boolean) -> a
    u.aly.bg a(int) -> a
    boolean i() -> b
    void b(boolean) -> b
    u.aly.bg a(java.lang.String) -> a
    boolean l() -> c
    void c(boolean) -> c
    u.aly.bg b(java.lang.String) -> b
    boolean o() -> d
    void d(boolean) -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void p() -> e
    u.aly.dd q() -> f
    u.aly.ct r() -> g
    u.aly.ct s() -> h
    u.aly.ct t() -> i
    u.aly.ct u() -> j
u.aly.bg$a -> a.a.ae$a:
    void a(u.aly.cy,u.aly.bg) -> a
    void b(u.aly.cy,u.aly.bg) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bg$b -> a.a.ae$b:
    u.aly.bg$a a() -> a
    u.aly.dg b() -> b
u.aly.bg$c -> a.a.ae$c:
    void a(u.aly.cy,u.aly.bg) -> a
    void b(u.aly.cy,u.aly.bg) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bg$d -> a.a.ae$d:
    u.aly.bg$c a() -> a
    u.aly.dg b() -> b
u.aly.bg$e -> a.a.ae$e:
    u.aly.bg$e a -> a
    u.aly.bg$e b -> b
    u.aly.bg$e c -> c
    u.aly.bg$e d -> d
    java.util.Map e -> e
    short f -> f
    java.lang.String g -> g
    u.aly.bg$e[] h -> h
    short a() -> a
    java.lang.String b() -> b
    u.aly.bg$e[] values() -> values
    u.aly.bg$e valueOf(java.lang.String) -> valueOf
u.aly.bh -> a.a.af:
    u.aly.dd k -> k
    u.aly.ct l -> l
    u.aly.ct m -> m
    u.aly.ct n -> n
    u.aly.ct o -> o
    u.aly.ct p -> p
    u.aly.ct q -> q
    u.aly.ct r -> r
    u.aly.ct s -> s
    u.aly.ct t -> t
    java.util.Map u -> u
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    java.nio.ByteBuffer g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    byte y -> v
    java.util.Map j -> j
    u.aly.bh a(java.lang.String) -> a
    void a(boolean) -> a
    u.aly.bh b(java.lang.String) -> b
    void b(boolean) -> b
    u.aly.bh c(java.lang.String) -> c
    void c(boolean) -> c
    u.aly.bh a(int) -> a
    boolean o() -> a
    void d(boolean) -> d
    u.aly.bh c(int) -> b
    boolean r() -> b
    void e(boolean) -> e
    u.aly.bh d(int) -> c
    boolean u() -> c
    void f(boolean) -> f
    u.aly.bh a(byte[]) -> a
    u.aly.bh a(java.nio.ByteBuffer) -> a
    void g(boolean) -> g
    u.aly.bh d(java.lang.String) -> d
    void h(boolean) -> h
    u.aly.bh e(java.lang.String) -> e
    void i(boolean) -> i
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.String toString() -> toString
    void F() -> d
    u.aly.dd G() -> e
    u.aly.ct H() -> f
    u.aly.ct I() -> g
    u.aly.ct J() -> h
    u.aly.ct K() -> i
    u.aly.ct L() -> j
    u.aly.ct M() -> k
    u.aly.ct N() -> l
    u.aly.ct O() -> m
    u.aly.ct P() -> n
u.aly.bh$a -> a.a.af$a:
    void a(u.aly.cy,u.aly.bh) -> a
    void b(u.aly.cy,u.aly.bh) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bh$b -> a.a.af$b:
    u.aly.bh$a a() -> a
    u.aly.dg b() -> b
u.aly.bh$c -> a.a.af$c:
    void a(u.aly.cy,u.aly.bh) -> a
    void b(u.aly.cy,u.aly.bh) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.bh$d -> a.a.af$d:
    u.aly.bh$c a() -> a
    u.aly.dg b() -> b
u.aly.bh$e -> a.a.af$e:
    u.aly.bh$e a -> a
    u.aly.bh$e b -> b
    u.aly.bh$e c -> c
    u.aly.bh$e d -> d
    u.aly.bh$e e -> e
    u.aly.bh$e f -> f
    u.aly.bh$e g -> g
    u.aly.bh$e h -> h
    u.aly.bh$e i -> i
    java.util.Map j -> j
    short k -> k
    java.lang.String l -> l
    u.aly.bh$e[] m -> m
    short a() -> a
    java.lang.String b() -> b
    u.aly.bh$e[] values() -> values
    u.aly.bh$e valueOf(java.lang.String) -> valueOf
u.aly.bi -> a.a.ag:
    java.lang.String a -> a
    java.lang.String c(android.content.Context) -> a
    java.lang.String d(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String f(android.content.Context) -> c
    java.lang.String g(android.content.Context) -> d
    java.lang.String[] j(android.content.Context) -> e
    boolean k(android.content.Context) -> f
    boolean l(android.content.Context) -> g
    int m(android.content.Context) -> h
    java.lang.String[] n(android.content.Context) -> i
    java.util.Locale x(android.content.Context) -> r
    java.lang.String o(android.content.Context) -> j
    java.lang.String p(android.content.Context) -> k
    int[] r(android.content.Context) -> l
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String s(android.content.Context) -> m
    java.lang.String t(android.content.Context) -> n
    java.lang.String u(android.content.Context) -> o
    java.lang.String v(android.content.Context) -> p
    boolean w(android.content.Context) -> q
u.aly.bj -> a.a.ah:
    boolean a -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> d
u.aly.bo -> a.a.ai:
    java.lang.String a -> a
    java.util.Map b -> b
    u.aly.bq a(u.aly.bp,java.lang.Class) -> a
    org.json.JSONObject a(java.lang.String,org.json.JSONObject) -> a
    boolean a() -> a
    java.lang.String a(java.io.InputStream) -> a
    org.json.JSONObject a(java.lang.String) -> a
    org.apache.http.params.HttpParams b() -> b
    void b(java.lang.String) -> b
u.aly.bp -> a.a.aj:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
u.aly.bq -> a.a.ak:
u.aly.bu -> a.a.al:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[]) -> a
u.aly.bv -> a.a.am:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    boolean d(java.lang.String) -> c
    java.lang.String a(java.io.InputStream) -> a
    byte[] b(java.io.InputStream) -> b
    void a(java.io.File,byte[]) -> a
    void c(java.io.InputStream) -> c
    void a(java.io.OutputStream) -> a
u.aly.bw -> a.a.an:
    boolean a(byte,int) -> a
    boolean a(int,int) -> a
    int b(int,int) -> b
    byte a(byte,int,boolean) -> a
    int a(int,int,boolean) -> a
u.aly.bx -> a.a.ao:
    short[] a -> a
    int b -> b
    short a() -> a
    void a(short) -> a
    void d() -> c
    void c() -> b
    java.lang.String toString() -> toString
u.aly.bz -> a.a.ap:
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
u.aly.c -> a.a.aq:
    byte[] a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    byte[] d -> d
    byte[] e -> e
    byte[] f -> f
    int g -> g
    int h -> h
    int i -> i
    byte[] j -> j
    byte[] k -> k
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void a(int) -> a
    u.aly.c a(android.content.Context,java.lang.String,byte[]) -> a
    void b() -> b
    byte[] a(byte[],int) -> a
    byte[] d() -> d
    byte[] e() -> e
    byte[] c() -> c
    java.lang.String toString() -> toString
    byte[] a(byte[]) -> a
    java.lang.String b(byte[]) -> b
    byte[] b(java.lang.String) -> b
u.aly.ca -> a.a.ar:
    java.util.Comparator a -> a
    int a(byte,byte) -> a
    int a(int,int) -> a
    int a(byte[],byte[]) -> a
    int a(java.lang.Comparable,java.lang.Comparable) -> a
    int a(java.util.List,java.util.List) -> a
    int a(java.util.Set,java.util.Set) -> a
    int a(java.util.Map,java.util.Map) -> a
    void a(java.nio.ByteBuffer,java.lang.StringBuilder) -> a
    java.lang.String a(byte) -> a
u.aly.ca$a -> a.a.ar$a:
    int compare(java.lang.Object,java.lang.Object) -> compare
u.aly.cc -> a.a.as:
    u.aly.cy a -> a
    u.aly.dl b -> b
    void a(u.aly.bz,byte[]) -> a
u.aly.cf -> a.a.at:
u.aly.cg -> a.a.au:
    short a() -> a
u.aly.ci -> a.a.av:
    java.io.ByteArrayOutputStream a -> a
    u.aly.dk b -> b
    u.aly.cy c -> c
    byte[] a(u.aly.bz) -> a
u.aly.cj -> a.a.aw:
    java.lang.Object b -> b
    u.aly.cg c -> c
    java.util.Map a -> a
    u.aly.cg j() -> c
    java.lang.Object k() -> d
    void a(u.aly.cy) -> a
    void b(u.aly.cy) -> b
    java.lang.Object a(u.aly.cy,u.aly.ct) -> a
    void c(u.aly.cy) -> c
    java.lang.Object a(u.aly.cy,short) -> a
    void d(u.aly.cy) -> d
    u.aly.dd c() -> a
    u.aly.ct a(u.aly.cg) -> a
    u.aly.cg b(short) -> b
    java.lang.String toString() -> toString
u.aly.cj$a -> a.a.aw$a:
    void a(u.aly.cy,u.aly.cj) -> a
    void b(u.aly.cy,u.aly.cj) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.cj$b -> a.a.aw$b:
    u.aly.cj$a a() -> a
    u.aly.dg b() -> b
u.aly.cj$c -> a.a.aw$c:
    void a(u.aly.cy,u.aly.cj) -> a
    void b(u.aly.cy,u.aly.cj) -> b
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.cj$d -> a.a.aw$d:
    u.aly.cj$c a() -> a
    u.aly.dg b() -> b
u.aly.ck -> a.a.ax:
    java.lang.Class a -> a
u.aly.cl -> a.a.ay:
    java.lang.String a -> a
    byte b -> b
    u.aly.cm c -> c
    java.util.Map d -> d
    void a(java.lang.Class,java.util.Map) -> a
u.aly.cm -> a.a.az:
    byte b -> b
    boolean a -> a
    java.lang.String c -> c
    boolean d -> d
u.aly.cn -> a.a.ba:
    u.aly.cm a -> a
u.aly.co -> a.a.bb:
    u.aly.cm a -> a
    u.aly.cm c -> c
u.aly.cq -> a.a.bc:
    java.lang.Class a -> a
u.aly.cr -> a.a.bd:
    u.aly.dd h -> f
    boolean c -> a
    boolean d -> b
    int e -> c
    boolean f -> d
    byte[] i -> g
    byte[] j -> h
    byte[] k -> i
    byte[] l -> j
    byte[] m -> k
    byte[] n -> l
    byte[] o -> m
    byte[] p -> n
    void a(u.aly.dd) -> a
    void b() -> a
    void a(u.aly.ct) -> a
    void c() -> b
    void d() -> c
    void a(u.aly.cv) -> a
    void e() -> d
    void a(u.aly.cu) -> a
    void f() -> e
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dd j() -> f
    void k() -> g
    u.aly.ct l() -> h
    void m() -> i
    u.aly.cv n() -> j
    void o() -> k
    u.aly.cu p() -> l
    void q() -> m
    u.aly.dc r() -> n
    void s() -> o
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.lang.String b(int) -> b
    java.nio.ByteBuffer A() -> w
    int a(byte[],int,int) -> a
    void c(int) -> c
    void d(int) -> d
u.aly.cr$a -> a.a.bd$a:
    boolean a -> a
    boolean b -> b
    int c -> c
    u.aly.cy a(u.aly.dm) -> a
u.aly.cs -> a.a.be:
    u.aly.dd d -> d
    u.aly.ct e -> f
    byte[] f -> g
    u.aly.bx m -> h
    short n -> i
    u.aly.ct o -> j
    java.lang.Boolean p -> k
    long q -> l
    byte[] a -> a
    byte[] b -> b
    byte[] r -> m
    byte[] c -> c
    void B() -> x
    void a(u.aly.dd) -> a
    void b() -> a
    void a(u.aly.ct) -> a
    void a(u.aly.ct,byte) -> a
    void d() -> c
    void a(u.aly.cv) -> a
    void a(u.aly.cu) -> a
    void a(boolean) -> a
    void a(byte) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    void a(byte[],int,int) -> a
    void e() -> d
    void f() -> e
    void c() -> b
    void a(byte,int) -> a
    void b(int) -> b
    void b(long) -> b
    long c(long) -> c
    int c(int) -> c
    void a(long,byte[],int) -> a
    void b(byte) -> b
    void d(int) -> d
    u.aly.dd j() -> f
    void k() -> g
    u.aly.ct l() -> h
    u.aly.cv n() -> j
    u.aly.cu p() -> l
    u.aly.dc r() -> n
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.nio.ByteBuffer A() -> w
    byte[] e(int) -> e
    void f(int) -> f
    void m() -> i
    void o() -> k
    void q() -> m
    void s() -> o
    int E() -> z
    long F() -> A
    int g(int) -> g
    long d(long) -> d
    long a(byte[]) -> a
    boolean c(byte) -> c
    byte d(byte) -> d
    byte e(byte) -> e
u.aly.cs$a -> a.a.be$a:
    long a -> a
    u.aly.cy a(u.aly.dm) -> a
u.aly.ct -> a.a.bf:
    java.lang.String a -> a
    byte b -> b
    short c -> c
    java.lang.String toString() -> toString
u.aly.cu -> a.a.bg:
    byte a -> a
    int b -> b
u.aly.cv -> a.a.bh:
    byte a -> a
    byte b -> b
    int c -> c
u.aly.cy -> a.a.bi:
    u.aly.dm g -> e
    void a(u.aly.dd) -> a
    void b() -> a
    void a(u.aly.ct) -> a
    void c() -> b
    void d() -> c
    void a(u.aly.cv) -> a
    void e() -> d
    void a(u.aly.cu) -> a
    void f() -> e
    void a(boolean) -> a
    void a(short) -> a
    void a(int) -> a
    void a(long) -> a
    void a(double) -> a
    void a(java.lang.String) -> a
    void a(java.nio.ByteBuffer) -> a
    u.aly.dd j() -> f
    void k() -> g
    u.aly.ct l() -> h
    void m() -> i
    u.aly.cv n() -> j
    void o() -> k
    u.aly.cu p() -> l
    void q() -> m
    u.aly.dc r() -> n
    void s() -> o
    boolean t() -> p
    byte u() -> q
    short v() -> r
    int w() -> s
    long x() -> t
    double y() -> u
    java.lang.String z() -> v
    java.nio.ByteBuffer A() -> w
    void B() -> x
    java.lang.Class D() -> y
u.aly.cz -> a.a.bj:
    int g -> a
u.aly.d -> a.a.bk:
    java.lang.String a -> a
    java.io.File b -> b
    u.aly.as c -> c
    long d -> d
    long e -> e
    java.util.Set f -> f
    void a(u.aly.a) -> a
    void a() -> a
    u.aly.as b() -> b
    void g() -> f
    void d() -> c
    void e() -> d
    void f() -> e
    u.aly.as h() -> g
    void a(u.aly.as) -> a
u.aly.da -> a.a.bl:
    u.aly.cy a(u.aly.dm) -> a
u.aly.db -> a.a.bm:
    int a -> a
    void a(u.aly.cy,byte) -> a
    void a(u.aly.cy,byte,int) -> a
u.aly.dc -> a.a.bn:
    byte a -> a
    int b -> b
u.aly.dd -> a.a.bo:
    java.lang.String a -> a
u.aly.de -> a.a.bp:
    java.lang.Class D() -> y
    void a(java.util.BitSet,int) -> a
    java.util.BitSet b(int) -> b
    java.util.BitSet a(byte[]) -> a
    byte[] b(java.util.BitSet,int) -> b
u.aly.dg -> a.a.bq:
    void a(u.aly.cy,u.aly.bz) -> a
    void b(u.aly.cy,u.aly.bz) -> b
u.aly.dh -> a.a.br:
    u.aly.dg b() -> b
u.aly.di -> a.a.bs:
u.aly.dj -> a.a.bt:
u.aly.dk -> a.a.bu:
    java.io.InputStream a -> a
    java.io.OutputStream b -> b
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
u.aly.dl -> a.a.bv:
    byte[] a -> a
    int b -> b
    int c -> c
    void a(byte[]) -> a
    void c(byte[],int,int) -> c
    void e() -> a
    int a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.dm -> a.a.bw:
    int a(byte[],int,int) -> a
    int d(byte[],int,int) -> d
    void b(byte[]) -> b
    void b(byte[],int,int) -> b
    byte[] f() -> b
    int g() -> c
    int h() -> d
    void a(int) -> a
u.aly.dn -> a.a.bx:
    int f -> a
u.aly.e -> a.a.by:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.f -> a.a.bz:
    byte[] b -> a
    u.aly.at c -> b
    android.content.Context d -> c
    java.lang.String a(u.aly.at) -> a
    boolean c(u.aly.at) -> c
    byte[] a(u.aly.au) -> a
    void b(u.aly.at) -> b
    u.aly.at a(u.aly.at,u.aly.at) -> a
    u.aly.at a() -> a
    void b() -> b
    void c() -> c
u.aly.g -> a.a.ca:
    android.content.Context b -> a
    java.lang.String f() -> f
u.aly.h -> a.a.cb:
    u.aly.d a -> a
    u.aly.f b -> b
    u.aly.d a(android.content.Context) -> a
    u.aly.f b(android.content.Context) -> b
u.aly.i -> a.a.cc:
    java.util.regex.Pattern c -> a
    android.content.Context d -> b
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String b(java.lang.String) -> b
    java.io.File h() -> h
u.aly.j -> a.a.cd:
    u.aly.q a -> a
    u.aly.r b -> b
    com.umeng.analytics.ReportPolicy$e c -> c
    com.umeng.analytics.g d -> d
    u.aly.w e -> e
    u.aly.d f -> f
    int g -> g
    android.content.Context h -> h
    void a(u.aly.p) -> a
    void b(u.aly.p) -> b
    void b() -> a
    byte[] c() -> b
    u.aly.bf a(byte[]) -> a
    byte[] a(u.aly.bf) -> a
    boolean a(boolean) -> a
    boolean d() -> c
    void e() -> d
    void f() -> e
    void a(int,int) -> a
    void a(int,long) -> a
u.aly.k -> a.a.ce:
    u.aly.o a -> a
    android.content.Context b -> b
    u.aly.k c -> c
    u.aly.k a(android.content.Context) -> a
    void a(com.umeng.analytics.onlineconfig.a) -> a
    void a(u.aly.p) -> a
    void b(u.aly.p) -> b
    void b() -> a
    u.aly.o a(u.aly.k) -> a
u.aly.k$1 -> a.a.cf:
    u.aly.k a -> a
    u.aly.p b -> b
    void a() -> a
u.aly.k$3 -> a.a.cg:
    u.aly.k a -> a
    void a() -> a
u.aly.l -> a.a.ch:
    java.lang.String a -> a
    boolean b -> b
    android.content.SharedPreferences c -> c
    java.util.Map d -> d
    void a(boolean) -> a
u.aly.m -> a.a.ci:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    u.aly.t b -> b
    void a(u.aly.t) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(java.lang.Throwable) -> a
u.aly.n -> a.a.cj:
    int a -> a
    int b -> b
    u.aly.l c -> c
    android.content.Context d -> d
    u.aly.k e -> e
u.aly.o -> a.a.ck:
    void b(u.aly.p) -> b
    void a(u.aly.p) -> a
    void b() -> a
u.aly.p -> a.a.cl:
    void a(u.aly.bf,java.lang.String) -> a
u.aly.q -> a.a.cm:
    java.util.List a -> a
    u.aly.ah b -> b
    u.aly.ai c -> c
    u.aly.ak d -> d
    u.aly.ax e -> e
    android.content.Context f -> f
    int b() -> a
    void a(u.aly.p) -> a
    void a(u.aly.bf) -> a
    java.lang.String i() -> h
    void a(u.aly.ah) -> a
    u.aly.ai c() -> b
    u.aly.ak d() -> c
    u.aly.ax e() -> d
    u.aly.at f() -> e
    u.aly.as g() -> f
    u.aly.aj h() -> g
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
u.aly.r -> a.a.cn:
    int d -> a
    java.lang.String e -> b
    java.lang.String f -> c
    int g -> d
    android.content.Context h -> e
    u.aly.w i -> f
    u.aly.f j -> g
    void a(u.aly.w) -> a
    int a(byte[]) -> a
    boolean a() -> a
    byte[] a(byte[],java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    int b(byte[]) -> b
u.aly.t -> a.a.co:
    void a(java.lang.Throwable) -> a
u.aly.u -> a.a.cp:
    android.content.SharedPreferences a(android.content.Context,java.lang.String) -> a
    android.content.SharedPreferences a(android.content.Context) -> a
u.aly.v -> a.a.cq:
    java.lang.String d -> a
    java.lang.String e -> b
    u.aly.af a(android.content.Context) -> a
    void a(android.content.SharedPreferences) -> a
    java.lang.String b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    boolean b(android.content.SharedPreferences) -> b
    java.lang.String a(android.content.Context,android.content.SharedPreferences) -> a
u.aly.w -> a.a.cr:
    int d -> d
    int a -> a
    int b -> b
    int e -> e
    long c -> c
    long f -> f
    long g -> g
    android.content.Context m -> h
    void b(android.content.Context) -> b
    boolean b() -> a
    void c() -> b
    void d() -> c
    void e() -> d
    void f() -> e
    void g() -> f
    void h() -> g
    boolean i() -> h
    long j() -> i
    u.aly.aj a(android.content.Context) -> a
u.aly.x -> a.a.cs:
    java.lang.String a -> a
    long b -> b
u.aly.y -> a.a.ct:
    u.aly.be a(android.content.Context) -> a
    long[] b(android.content.Context) -> b
u.aly.z -> a.a.cu:
    java.util.Map b -> a
    java.util.ArrayList c -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    void a(android.content.Context) -> a
    java.util.List a(android.content.SharedPreferences) -> a
u.fb.a -> a.b.a:
    java.lang.String a -> a
    java.lang.String c(android.content.Context) -> a
    java.lang.String d(android.content.Context) -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String f(android.content.Context) -> c
    java.lang.String g(android.content.Context) -> d
    java.lang.String h(android.content.Context) -> e
    java.lang.String[] j(android.content.Context) -> f
    int m(android.content.Context) -> g
    java.lang.String[] n(android.content.Context) -> h
    java.util.Locale x(android.content.Context) -> o
    java.lang.String o(android.content.Context) -> i
    java.lang.String p(android.content.Context) -> j
    java.lang.String q(android.content.Context) -> k
    int[] r(android.content.Context) -> l
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String t(android.content.Context) -> m
    java.lang.String u(android.content.Context) -> n
u.fb.b -> a.b.b:
    boolean a -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> d
u.fb.c -> a.b.c:
    java.lang.String a -> a
    u.fb.c b -> b
    android.content.res.Resources c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    u.fb.c a(android.content.Context) -> a
    int a(java.lang.String) -> a
    int b(java.lang.String) -> b
    int c(java.lang.String) -> c
    int d(java.lang.String) -> d
    int f(java.lang.String) -> e
    int a(java.lang.String,java.lang.String) -> a
u.fb.h -> a.b.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
u.fb.i -> a.b.e:
u.fb.n -> a.b.f:
    java.lang.String a -> a
    java.lang.String b(java.lang.String) -> a
    boolean d(java.lang.String) -> b
u.fb.p -> a.b.g:
    java.lang.String e -> a
    android.content.Context f -> b
    u.fb.r a(u.fb.q) -> a
    java.util.List a(java.util.List,java.lang.String,java.lang.String) -> a
    boolean a(com.umeng.fb.model.Reply) -> a
    boolean a(com.umeng.fb.model.UserReply) -> a
    boolean a(com.umeng.fb.model.UserTitleReply) -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
u.fb.q -> a.b.h:
    java.lang.String d -> d
    org.json.JSONObject e -> e
    java.lang.String f -> f
u.fb.r -> a.b.i:
    org.json.JSONObject a -> a
    org.json.JSONObject a() -> a
u.fb.s -> a.b.j:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
u.fb.t -> a.b.k:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
u.fb.u -> a.b.l:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int i(android.content.Context) -> g
    int j(android.content.Context) -> h
    int k(android.content.Context) -> i
u.fb.v -> a.b.m:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int e(android.content.Context) -> d
u.fb.w -> a.b.n:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
u.fb.x -> a.b.o:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String a() -> a
    org.json.JSONObject b(android.content.Context) -> b
u.upd.a -> a.c.a:
    java.lang.String a -> a
    java.lang.String c(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String f(android.content.Context) -> b
    java.lang.String[] j(android.content.Context) -> c
    boolean k(android.content.Context) -> d
    boolean l(android.content.Context) -> e
    boolean b() -> a
    java.lang.String o(android.content.Context) -> f
    java.lang.String p(android.content.Context) -> g
    java.lang.String t(android.content.Context) -> h
    java.lang.String u(android.content.Context) -> i
    java.lang.String v(android.content.Context) -> j
u.upd.b -> a.c.b:
    boolean a -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void e(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> d
u.upd.c -> a.c.c:
    java.lang.String a -> a
    u.upd.c b -> b
    android.content.res.Resources c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    u.upd.c a(android.content.Context) -> a
    int b(java.lang.String) -> a
    int c(java.lang.String) -> b
    int d(java.lang.String) -> c
    int f(java.lang.String) -> d
    int a(java.lang.String,java.lang.String) -> a
u.upd.g -> a.c.d:
    java.lang.String a -> a
    java.util.Map b -> b
    u.upd.i a(u.upd.h,java.lang.Class) -> a
    org.json.JSONObject a(java.lang.String,org.json.JSONObject) -> a
    boolean a() -> a
    java.lang.String a(java.io.InputStream) -> a
    org.json.JSONObject a(java.lang.String) -> a
    org.apache.http.params.HttpParams b() -> b
    void b(java.lang.String) -> b
u.upd.h -> a.c.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
u.upd.i -> a.c.f:
u.upd.j -> a.c.g:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int g(android.content.Context) -> f
u.upd.k -> a.c.h:
    int a(android.content.Context) -> a
u.upd.l -> a.c.i:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int g(android.content.Context) -> g
    int h(android.content.Context) -> h
    int i(android.content.Context) -> i
    int j(android.content.Context) -> j
    int k(android.content.Context) -> k
    int l(android.content.Context) -> l
    int m(android.content.Context) -> m
    int n(android.content.Context) -> n
u.upd.m -> a.c.j:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[]) -> a
u.upd.n -> a.c.k:
    java.lang.String a -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(java.io.File) -> a
    java.lang.String c(java.lang.String) -> c
    boolean d(java.lang.String) -> d
    java.lang.String a() -> a
    java.lang.String a(java.util.Date) -> a
uk.co.senab.photoview.Compat -> b.a.a.a.a:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationJellyBean(android.view.View,java.lang.Runnable) -> b
    int getPointerIndex(int) -> a
    int getPointerIndexEclair(int) -> b
    int getPointerIndexHoneyComb(int) -> c
uk.co.senab.photoview.DefaultOnDoubleTapListener -> b.a.a.a.b:
    uk.co.senab.photoview.PhotoViewAttacher photoViewAttacher -> a
    void setPhotoViewAttacher(uk.co.senab.photoview.PhotoViewAttacher) -> a
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
uk.co.senab.photoview.IPhotoView -> b.a.a.a.c:
uk.co.senab.photoview.PhotoViewAttacher -> b.a.a.a.d:
    boolean DEBUG -> c
    android.view.animation.Interpolator sInterpolator -> a
    int ZOOM_DURATION -> b
    float mMinScale -> d
    float mMidScale -> e
    float mMaxScale -> f
    boolean mAllowParentInterceptOnEdge -> g
    java.lang.ref.WeakReference mImageView -> h
    android.view.GestureDetector mGestureDetector -> i
    uk.co.senab.photoview.gestures.GestureDetector mScaleDragDetector -> j
    android.graphics.Matrix mBaseMatrix -> k
    android.graphics.Matrix mDrawMatrix -> l
    android.graphics.Matrix mSuppMatrix -> m
    android.graphics.RectF mDisplayRect -> n
    float[] mMatrixValues -> o
    uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener mMatrixChangeListener -> p
    uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener mPhotoTapListener -> q
    uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener mViewTapListener -> r
    android.view.View$OnLongClickListener mLongClickListener -> s
    int mIvTop -> t
    int mIvRight -> u
    int mIvBottom -> v
    int mIvLeft -> w
    uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable mCurrentFlingRunnable -> x
    int mScrollEdge -> y
    boolean mRotationDetectionEnabled -> z
    boolean mZoomEnabled -> A
    android.widget.ImageView$ScaleType mScaleType -> B
    float mLastRotation -> C
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType -> D
    boolean hasDrawable(android.widget.ImageView) -> a
    void setImageViewScaleTypeMatrix(android.widget.ImageView) -> b
    void cleanup() -> a
    android.graphics.RectF getDisplayRect() -> b
    android.widget.ImageView getImageView() -> c
    float getMinimumScale() -> d
    float getMediumScale() -> e
    float getMaximumScale() -> f
    float getScale() -> g
    void onDrag(float,float) -> a
    void onFling(float,float,float,float) -> a
    void onGlobalLayout() -> onGlobalLayout
    void onScale(float,float,float) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setOnPhotoTapListener(uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener) -> a
    uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener getOnPhotoTapListener() -> h
    uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener getOnViewTapListener() -> i
    void setScale(float,float,float,boolean) -> a
    void setZoomable(boolean) -> a
    void update() -> j
    android.graphics.Matrix getDrawMatrix() -> k
    void cancelFling() -> n
    void checkAndDisplayMatrix() -> o
    void checkImageViewScaleType() -> p
    boolean checkMatrixBounds() -> q
    android.graphics.RectF getDisplayRect(android.graphics.Matrix) -> a
    float getValue(android.graphics.Matrix,int) -> a
    void resetMatrix() -> r
    void setImageViewMatrix(android.graphics.Matrix) -> b
    void updateBaseMatrix(android.graphics.drawable.Drawable) -> a
    int getImageViewWidth(android.widget.ImageView) -> c
    int getImageViewHeight(android.widget.ImageView) -> d
    android.graphics.Matrix access$0(uk.co.senab.photoview.PhotoViewAttacher) -> a
    void access$1(uk.co.senab.photoview.PhotoViewAttacher) -> b
    boolean access$2() -> l
    void access$3(uk.co.senab.photoview.PhotoViewAttacher,android.graphics.Matrix) -> a
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType() -> m
    android.view.View$OnLongClickListener access$5(uk.co.senab.photoview.PhotoViewAttacher) -> c
uk.co.senab.photoview.PhotoViewAttacher$1 -> b.a.a.a.e:
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> a
    void onLongPress(android.view.MotionEvent) -> onLongPress
uk.co.senab.photoview.PhotoViewAttacher$AnimatedZoomRunnable -> b.a.a.a.d$a:
    float mFocalX -> b
    float mFocalY -> c
    long mStartTime -> d
    float mZoomStart -> e
    float mZoomEnd -> f
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> a
    void run() -> run
    float interpolate() -> a
uk.co.senab.photoview.PhotoViewAttacher$FlingRunnable -> b.a.a.a.d$b:
    uk.co.senab.photoview.scrollerproxy.ScrollerProxy mScroller -> b
    int mCurrentX -> c
    int mCurrentY -> d
    uk.co.senab.photoview.PhotoViewAttacher this$0 -> a
    void cancelFling() -> a
    void fling(int,int,int,int) -> a
    void run() -> run
uk.co.senab.photoview.PhotoViewAttacher$OnMatrixChangedListener -> b.a.a.a.d$c:
    void onMatrixChanged(android.graphics.RectF) -> a
uk.co.senab.photoview.PhotoViewAttacher$OnPhotoTapListener -> b.a.a.a.d$d:
    void onPhotoTap(android.view.View,float,float) -> a
uk.co.senab.photoview.PhotoViewAttacher$OnViewTapListener -> b.a.a.a.d$e:
    void onViewTap(android.view.View,float,float) -> a
uk.co.senab.photoview.gestures.CupcakeGestureDetector -> b.a.a.a.a.a:
    uk.co.senab.photoview.gestures.OnGestureListener mListener -> a
    float mLastTouchX -> b
    float mLastTouchY -> c
    float mTouchSlop -> d
    float mMinimumVelocity -> e
    android.view.VelocityTracker mVelocityTracker -> f
    boolean mIsDragging -> g
    void setOnGestureListener(uk.co.senab.photoview.gestures.OnGestureListener) -> a
    float getActiveX(android.view.MotionEvent) -> a
    float getActiveY(android.view.MotionEvent) -> b
    boolean isScaling() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> c
uk.co.senab.photoview.gestures.EclairGestureDetector -> b.a.a.a.a.b:
    int mActivePointerId -> f
    int mActivePointerIndex -> g
    float getActiveX(android.view.MotionEvent) -> a
    float getActiveY(android.view.MotionEvent) -> b
    boolean onTouchEvent(android.view.MotionEvent) -> c
uk.co.senab.photoview.gestures.FroyoGestureDetector -> b.a.a.a.a.c:
    android.view.ScaleGestureDetector mDetector -> f
    boolean isScaling() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> c
uk.co.senab.photoview.gestures.FroyoGestureDetector$1 -> b.a.a.a.a.d:
    uk.co.senab.photoview.gestures.FroyoGestureDetector this$0 -> a
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
uk.co.senab.photoview.gestures.GestureDetector -> b.a.a.a.a.e:
    boolean onTouchEvent(android.view.MotionEvent) -> c
    boolean isScaling() -> a
    void setOnGestureListener(uk.co.senab.photoview.gestures.OnGestureListener) -> a
uk.co.senab.photoview.gestures.OnGestureListener -> b.a.a.a.a.f:
    void onDrag(float,float) -> a
    void onFling(float,float,float,float) -> a
    void onScale(float,float,float) -> a
uk.co.senab.photoview.gestures.VersionedGestureDetector -> b.a.a.a.a.g:
    uk.co.senab.photoview.gestures.GestureDetector newInstance(android.content.Context,uk.co.senab.photoview.gestures.OnGestureListener) -> a
uk.co.senab.photoview.log.LogManager -> b.a.a.a.b.a:
    uk.co.senab.photoview.log.Logger logger -> a
    uk.co.senab.photoview.log.Logger getLogger() -> a
uk.co.senab.photoview.log.Logger -> b.a.a.a.b.b:
    int d(java.lang.String,java.lang.String) -> a
    int i(java.lang.String,java.lang.String) -> b
uk.co.senab.photoview.log.LoggerDefault -> b.a.a.a.b.c:
    int d(java.lang.String,java.lang.String) -> a
    int i(java.lang.String,java.lang.String) -> b
uk.co.senab.photoview.scrollerproxy.GingerScroller -> b.a.a.a.c.a:
    android.widget.OverScroller mScroller -> a
    boolean mFirstScroll -> b
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    boolean isFinished() -> b
    int getCurrX() -> c
    int getCurrY() -> d
uk.co.senab.photoview.scrollerproxy.IcsScroller -> b.a.a.a.c.b:
    boolean computeScrollOffset() -> a
uk.co.senab.photoview.scrollerproxy.PreGingerScroller -> b.a.a.a.c.c:
    android.widget.Scroller mScroller -> a
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    boolean isFinished() -> b
    int getCurrX() -> c
    int getCurrY() -> d
uk.co.senab.photoview.scrollerproxy.ScrollerProxy -> b.a.a.a.c.d:
    uk.co.senab.photoview.scrollerproxy.ScrollerProxy getScroller(android.content.Context) -> a
    boolean computeScrollOffset() -> a
    void fling(int,int,int,int,int,int,int,int,int,int) -> a
    void forceFinished(boolean) -> a
    boolean isFinished() -> b
    int getCurrX() -> c
    int getCurrY() -> d
